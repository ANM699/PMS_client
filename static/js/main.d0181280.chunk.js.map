{"version":3,"sources":["containers/login/login.module.less","components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/item.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","components/task-progress/task-progress.jsx","containers/project/profile/profile.jsx","containers/project/meeting/meeting.jsx","components/board/item.jsx","components/board/column.jsx","components/board/list.jsx","utils/index.js","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","components/task/modal.jsx","components/story/modal.jsx","containers/project/story/story.jsx","components/task/transfer.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/test/test.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","RegExp","content","storyId","projectId","createDate","this","status","tasks","todo","doing","done","activity","date","businessValue","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","interceptors","response","use","res","message","error","reqLogin","password","reqRegister","reqCreateProject","reqEditProject","reqTaskList","params","reqSprintList","reqCreateSprint","reqCreateTask","users","reqCreateStory","role","priority","reqEditStory","testMessage","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","Item","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","BugOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","test","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","MyProjects","projectList","current","showModal","setState","handleConfirm","item","that","Modal","confirm","ExclamationCircleOutlined","push","handleOk","format","handleCancel","extra","PlusCircleOutlined","fontSize","mapDispatchToProps","TaskProgress","genChildren","num","children","element","block","echarts","require","Countdown","Statistic","option","text","legend","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","axisPointer","xAxis","boundaryGap","yAxis","series","areaStyle","lineStyle","Profile","setTimeout","chart","init","setOption","on","resize","gutter","hoverable","valueStyle","ref","el","height","Meeting","size","bordered","column","task","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","displayDate","Group","placement","avatar","droppableId","id","taskList","droppableProps","List","p","sortTasks","sortedTasks","Array","isArray","Board","onChange","target","onDragEnd","destination","source","start","finish","draggedTask","find","startTasks","finishTasks","splice","match","tasksOfList","flat","boardView","image","Empty","PRESENTED_IMAGE_SIMPLE","c","listView","buttonStyle","Button","MenuOutlined","Option","Select","MemberModal","member","roles","showSearch","optionFilterProp","allowClear","roleOptions","Member","members","columns","handleDel","DeleteOutlined","filter","TaskModal","StoryModal","story","Story","storyModalVisible","taskModalVisible","storyList","showStoryModal","showTaskModal","handleStoryCancel","handleTaskCancel","handleTaskOk","handleStoryOk","expandable","expandedRowRender","rowExpandable","textAlign","progress","ForkOutlined","TaskTransfer","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","onSelect","selectedRowKeys","scroll","y","onRow","includes","createSprints","sprint","Sprint","transferVisible","targetKeys","sprintList","currentId","nextTargetKeys","showTransferModal","handleTransferCancel","handleTransferOk","filterTasks","concat","getSprints","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","AppstoreAddOutlined","disabledDate","currentDate","defaultPickerValue","createSprint","Test","handleClick","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.d0181280.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2HGpQcOxDIzDn9vTQMCg0m\",\"date\":\"_1FIFhu2ilokbdq6x52XLA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\n\nconst initUser = {\n  username: '',\n  email: '',\n  msg: '',\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return action.data;\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","import * as types from './action-types';\n\nconst initSprints = [];\n\nexport function sprints(state = initSprints, action) {\n  switch (action.type) {\n    case types.RECEIVE_SPRINTS:\n      return action.data;\n    case types.CREATE_SPRINT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\nimport { sprints } from './sprints/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  sprints,\n  // projectList,\n});\n","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","//获取当前项目冲刺周期\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\n//新增冲刺周期\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from 'mockjs';\nimport Cookies from 'js-cookie';\n\nconst api = 'http://mock';\n\nMock.mock(`${api}/users/login`, 'post', function (options) {\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, 'post', function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === 'guoyunxiang') {\n    return {\n      code: 1,\n      msg: '用户名已经被注册',\n    };\n  }\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock('@last'),\n      _id: Cookies.get('userId'),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, 'get', function () {\n  const { data } = Mock.mock({\n    'data|5-10': [\n      {\n        _id: '@id',\n        projectName: '@ctitle',\n        description: '@cparagraph(2,3)',\n        startDate: '2020-07-14',\n        endDate: '2020-12-24',\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: \"1000000000\",\n      //   projectName: \"BesTV互联网电视助手\",\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\n      //   startDate: \"2020-08-04\",\n      //   endDate: \"2020-12-31\",\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/projects/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock('@ctitle'),\n      description: Mock.mock('@cparagraph(2,3)'),\n      _id: Cookies.get('projectId'),\n      startDate: '2020-07-14',\n      endDate: '2020-12-24',\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/list` + '.*'), 'get', function (options) {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|10-15': [\n        {\n          _id: '@id',\n          content: '@csentence',\n          'status|1': ['todo', 'doing', 'done'],\n          storyId: '@id',\n          projectId: Cookies.get('projectId'),\n          createDate: '@date',\n          startDate: function () {\n            return this.status !== 'todo' ? Mock.mock('@date') : null;\n          },\n          endDate: function () {\n            return this.status === 'done' ? Mock.mock('@date') : null;\n          },\n          'users|0-5': [\n            {\n              _id: '@id',\n              'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n              username: '@last',\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-12': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n          'roles|1-4': [\n            {\n              'color|1': ['#f56a00', '#7265e6', '#00a2ae', '#ffbf00'],\n              'name|1': ['项目经理', '前端开发', '后端开发', 'UI设计'],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/users/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|5-8': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/sprints/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      _id: Mock.mock('@id'),\n      ...JSON.parse(options.body),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n    },\n  };\n});\n\nMock.mock(`${api}/sprints/list`, 'get', function () {\n  return {\n    code: 0,\n    data: [\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-14',\n        endDate: '2020-07-30',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-31',\n        endDate: '2020-08-26',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-08-27',\n        endDate: '2020-09-13',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n    ],\n  };\n});\n\nMock.mock(`${api}/stories/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-10': [\n        {\n          _id: '@id',\n          'role|1': ['用户', 'VIP', '管理员', '项目经理'],\n          activity: '@cword(10, 15)',\n          date: '@date',\n          'priority|1': [0, 1, 2],\n          businessValue: '@cword(10, 15)',\n          'tasks|3-5': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/tasks/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(`${api}/storys/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/storys/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/test`, 'get', {\n  code: 1,\n  msg: '请求返回的非正常信息',\n});\n","import axios from 'axios';\nimport '../mock/mock';\nimport { message } from 'antd';\n\nconst api = 'http://mock';\n\naxios.interceptors.response.use((response) => {\n  const res = response.data;\n  if (response.status === 200 && res.code !== 0) {\n    message.error(res.msg);\n  } else {\n    return response;\n  }\n});\n\nexport default function ajax(url = '', data = {}, type = 'GET') {\n  if (type === 'GET') {\n    let dataStr = '';\n    Object.keys(data).forEach((key) => {\n      dataStr += key + '=' + data[key] + '&';\n    });\n    if (dataStr) {\n      dataStr = '?' + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from './ajax';\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax('/users/login', { username, password }, 'POST');\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax('/users/register', { username, password }, 'POST');\n};\n\nexport const reqUser = () => {\n  return ajax('/users/user');\n};\n\n//获取所有注册用户列表\nexport const reqUserList = () => {\n  return ajax('/users/list');\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    '/projects/create',\n    { projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//编辑项目\nexport const reqEditProject = ({\n  _id,\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    `/projects/edit/${_id}`,\n    { _id, projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax('/projects/project');\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax('/projects/list');\n};\n\n//根据projectId获取阶段下或者用户故事下的任务列表\nexport const reqTaskList = (params) => {\n  return ajax('/tasks/list', params);\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax('/projects/members');\n};\n\n//根据projectId获取冲刺周期列表\nexport const reqSprintList = () => {\n  return ajax('/sprints/list');\n};\n//新增冲刺周期\nexport const reqCreateSprint = ({ startDate, endDate }) => {\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\n};\n\n//根据projectId获取用户故事列表\nexport const reqStoryList = () => {\n  return ajax('/stories/list');\n};\n\n//根据projectId获取任务列表\n// export const reqTaskList = () => {\n//   return ajax('/tasks/list');\n// };\n\n//新增任务\nexport const reqCreateTask = ({\n  content,\n  createDate,\n  status = 'todo',\n  users = [],\n}) => {\n  return ajax('/tasks/create', { content, createDate, status, users }, 'POST');\n};\n\n//新增用户故事\nexport const reqCreateStory = ({\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    '/storys/create',\n    { role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//编辑用户故事\nexport const reqEditStory = ({\n  _id,\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    `/storys/edit/${_id}`,\n    { _id, role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//测试全局消息\nexport const testMessage = () => {\n  return ajax('/test');\n};\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./login.module.less\";\n\nimport { login } from \"../../redux/user/actions\";\n\nclass Login extends Component {\n  onFinish = (user) => {\n    this.props.login(user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toRegister = () => {\n    this.props.history.replace(\"/register\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    登录\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\n                    注册账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"../login/login.module.less\";\n\nimport { register } from \"../../redux/user/actions\";\n\nclass Register extends Component {\n  onFinish = (user) => {\n    this.props.register(user);\n    console.log(\"Success:\", user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toLogin = () => {\n    this.props.history.replace(\"/login\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password2\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请再次输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    注册\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\n                    已有账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  UserOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n  BugOutlined,\n} from '@ant-design/icons';\n\nimport styles from './sider.module.less';\n\nclass Sider extends Component {\n  static propTypes = {\n    collapsed: PropTypes.bool.isRequired,\n  };\n\n  menuList = [\n    // 包含所有导航组件的相关信息数据\n    {\n      path: '/project/profile',\n      title: '项目状态',\n      icon: <ProfileOutlined />,\n    },\n    {\n      path: '/project/member',\n      title: '成员管理',\n      icon: <TeamOutlined />,\n    },\n    {\n      path: '/project/story',\n      title: '需求分析',\n      icon: <SolutionOutlined />,\n    },\n    {\n      path: '/project/sprint',\n      title: '阶段设置',\n      icon: <CarryOutOutlined />,\n    },\n    {\n      path: '/project/board',\n      title: '任务看板',\n      icon: <ProjectOutlined />,\n    },\n    {\n      path: '/project/meeting',\n      title: '会议纪要',\n      icon: <SnippetsOutlined />,\n    },\n    {\n      path: '/account',\n      title: '个人中心',\n      icon: <UserOutlined />,\n    },\n    {\n      path: '/test',\n      title: '功能测试',\n      icon: <BugOutlined />,\n    },\n  ];\n\n  render() {\n    const visiable = this.props.visiable;\n    const currentPath = this.props.location.pathname;\n    let selectedMenu = this.menuList\n      .findIndex((menu) => new RegExp(menu.path).test(currentPath))\n      .toString();\n    // if (!visiable) return null;\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible\n        collapsed={this.props.collapsed}\n        className={styles.sider}\n        style={{\n          display: visiable ? '' : 'none',\n        }}\n      >\n        <div className={styles.logo}>PMS</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n          {this.menuList.map((menu, index) => (\n            <Menu.Item\n              key={index}\n              icon={menu.icon}\n              onClick={() => {\n                if (menu.path) this.props.history.replace(menu.path);\n              }}\n            >\n              {menu.title}\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport styles from './header.module.less';\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {props.visiable &&\n        React.createElement(\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n          {\n            className: styles.trigger,\n            onClick: props.toggle,\n          }\n        )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\n\nexport default function ProjectList(props) {\n  const data = props.data;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        title=\"信息\"\n        dataIndex=\"projectName\"\n        key=\"projectName\"\n        render={(value, record) => (\n          <>\n            <h4>\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\n            </h4>\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\n              {record.description}\n            </div>\n          </>\n        )}\n      />\n      <Column\n        title=\"时间\"\n        key=\"date\"\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\n      />\n      <Column\n        title=\"操作\"\n        dataIndex=\"_id\"\n        key=\"action\"\n        render={(_id, record) => (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              props.onItemEditClick(record);\n            }}\n          >\n            <EditOutlined />\n          </a>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Modal } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (project) {\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\n      form.setFieldsValue({ ...project, rangeDate });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={project ? '编辑项目' : '创建项目'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            // form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"projectName\"\n          label=\"项目名称\"\n          rules={[\n            {\n              required: true,\n              message: '请输入项目名称！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"rangeDate\"\n          label=\"项目时间\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目时间！',\n            },\n          ]}\n        >\n          <RangePicker\n            style={{\n              width: '100%',\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"项目简介\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的项目简介！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Card, Modal } from 'antd';\nimport {\n  PlusCircleOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nimport ProjectList from '../../components/project/list';\nimport ProjectModal from '../../components/project/modal';\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from '../../redux/project/actions';\nimport {\n  reqProjectList,\n  reqCreateProject,\n  reqEditProject,\n} from '../../api/index';\n\nclass MyProjects extends Component {\n  state = {\n    visible: false,\n    projectList: [],\n    current: null,\n  };\n\n  showModal = (current) => {\n    this.setState({\n      visible: true,\n      current,\n    });\n  };\n\n  handleConfirm = (item) => {\n    let that = this;\n    Modal.confirm({\n      title: '选择并切换至该项目？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        that.props.switchProject(item);\n        //todo:重置store.state中的sprints\n        Cookies.set('projectId', item._id);\n        that.props.history.push('/project/profile');\n      },\n    });\n  };\n\n  handleOk = (values) => {\n    const current = this.state.current;\n    const _id = current ? current._id : '';\n    const rangeDate = values['rangeDate'];\n    values.startDate = rangeDate[0].format('YYYY-MM-DD');\n    values.endDate = rangeDate[1].format('YYYY-MM-DD');\n\n    if (_id) {\n      //编辑\n      reqEditProject({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const projectList = this.state.projectList.map((project) =>\n            project._id === _id ? result.data : project\n          );\n          this.setState({\n            projectList,\n            visible: false,\n          });\n          //如果修改的是当前选择的项目\n          if (_id === this.props.project._id)\n            this.props.switchProject(result.data);\n        }\n      });\n    } else {\n      //创建\n      reqCreateProject(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          this.setState({\n            projectList: [result.data, ...this.state.projectList],\n            visible: false,\n          });\n        }\n      });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      // console.log(result);\n      if (result.code === 0) {\n        this.setState({\n          projectList: result.data,\n        });\n      }\n    });\n    // this.props.getProjectList();\n  }\n\n  render() {\n    // const data = this.props.projectList;\n    const { projectList, current } = this.state;\n    return (\n      <div>\n        <Card\n          title=\"我的项目\"\n          extra={\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                this.showModal();\n              }}\n            >\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <ProjectList\n            data={projectList}\n            onConfirm={this.handleConfirm}\n            onItemEditClick={this.showModal}\n          ></ProjectList>\n        </Card>\n\n        <ProjectModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          project={current}\n        ></ProjectModal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction TaskProgress(props) {\n  function genChildren(num, className) {\n    let children = [];\n    for (let index = 0; index < num; index++) {\n      const element = (\n        <div key={index} className={`${styles.block} ${className}`}></div>\n      );\n      children.push(element);\n    }\n    return children;\n  }\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","import React, { Component } from 'react';\nimport { Card, Row, Col, Statistic } from 'antd';\nimport moment from 'moment';\nimport { TeamOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\n\nvar echarts = require('echarts/lib/echarts');\nrequire('echarts/lib/chart/line');\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/title');\nrequire('echarts/lib/component/legend');\n\nconst { Countdown } = Statistic;\n\nconst option = {\n  title: {\n    text: '燃尽图',\n  },\n  legend: {\n    data: ['剩余任务'],\n    selectedMode: false,\n    top: 10,\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    bottom: '2%',\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n    },\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [\n      '09-17',\n      '09-18',\n      '09-19',\n      '09-20',\n      '09-21',\n      '09-22',\n      '09-23',\n      '09-24',\n      '09-25',\n      '09-26',\n      '09-27',\n      '09-28',\n      '09-29',\n    ],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      name: '剩余任务',\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\n      type: 'line',\n      areaStyle: {},\n    },\n    {\n      data: [\n        ['09-17', 56],\n        ['09-29', 0],\n      ],\n      type: 'line',\n      lineStyle: {\n        type: 'dashed',\n      },\n    },\n  ],\n};\n\nexport default class Profile extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      const chart = echarts.init(this.chart, 'light');\n      chart.setOption(option);\n      chart.on('finished', () => {\n        chart.resize();\n      });\n    }, 0);\n\n    // const chart = echarts.init(this.chart);\n    // chart.setOption(option);\n  }\n\n  render() {\n    return (\n      // <>\n      //   <div>\n      //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\n      //   </div>\n      //   <div>目前未开始10个，进行中10个，已结束10个。</div>\n      // </>\n      <div>\n        <Row gutter={[16, 16]}>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/sprint');\n              }}\n            >\n              <Countdown\n                title=\"距离阶段结束\"\n                value={moment('2020-10-12')}\n                format=\"D 天 H 时\"\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/board');\n              }}\n            >\n              <Statistic title=\"阶段任务\" value={56} />\n              {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/member');\n              }}\n            >\n              <Statistic\n                title=\"项目成员\"\n                value={13}\n                prefix={<TeamOutlined />}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Card>\n              <div\n                ref={(el) => {\n                  this.chart = el;\n                }}\n                style={{\n                  width: '100%',\n                  height: '400px',\n                }}\n              ></div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Descriptions } from \"antd\";\n\nexport default class Meeting extends Component {\n  render() {\n    return (\n      <Card>\n        <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\n          <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\n          <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\n          <Descriptions.Item label=\"参会人员\" span={2}>\n            张三，李四，王五\n          </Descriptions.Item>\n          <Descriptions.Item label=\"会议内容\" span={2}>\n            装林步车转体领角认分办为心这因。合般形象者劳斯知管以北拉领到治。示油节走不教反回生去车之热作。\n            <br />\n            她定感认后率民作军里单由办眼平。书强革电式每科去同政形准红实。\n            <br />\n            成们只进华王第规情党圆中前群半自。林达空矿真亲分他话间白华。\n          </Descriptions.Item>\n          <Descriptions.Item label=\"待办事项\">\n            己自美素领段然得示包水济确张何只。由什世向水年北开亲南交就治造。\n            <br />\n            团影光将料受打阶图层志且小被器。生满委物更门称式上及界往派式东向思。\n            <br />\n            节复导应设改八干万期直通成数江。子一二打知拉子实料结越团论等科需展。\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card, Avatar, Tooltip } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport styles from './item.module.less';\nimport moment from 'moment';\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : '',\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// });\nconst displayDate = (task) => {\n  switch (task.status) {\n    case 'todo':\n      return (\n        // <Tooltip title={task.createDate} placement=\"top\">\n        //   {'创建于' + moment(task.createDate).fromNow()}\n        // </Tooltip>\n        '创建于' + moment(task.createDate).format('MM-DD')\n      );\n    case 'doing':\n      return (\n        // <Tooltip title={task.startDate} placement=\"top\">\n        //   {'开始于' + moment(task.startDate).fromNow()}\n        // </Tooltip>\n        '开始于' + moment(task.startDate).format('MM-DD')\n      );\n    case 'done':\n      return (\n        // <Tooltip title={task.endDate} placement=\"top\">\n        //   {'完成于' + moment(task.endDate).fromNow()}\n        // </Tooltip>\n        '完成于' + moment(task.endDate).format('MM-DD')\n      );\n    default:\n      break;\n  }\n};\n\nexport default class Item extends Component {\n  render() {\n    const { task, index } = this.props;\n    return (\n      <Draggable\n        draggableId={task._id}\n        index={index}\n        // isDragDisabled={task.status === 'done'}\n      >\n        {(provided, snapshot) => (\n          <div\n            className={styles.container}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            // style={getItemStyle(\n            //   snapshot.isDragging,\n            //   provided.draggableProps.style\n            // )}\n          >\n            <Card hoverable={true}>\n              <p>{task.content}</p>\n              <div className={styles.date}>{displayDate(task)}</div>\n              <div>\n                <Avatar.Group>\n                  {task.users.map((user) => (\n                    <Tooltip\n                      key={user._id}\n                      title={user.username}\n                      placement=\"top\"\n                    >\n                      <Avatar\n                        style={{ backgroundColor: user.avatar }}\n                        icon={<UserOutlined />}\n                      />\n                    </Tooltip>\n                  ))}\n                </Avatar.Group>\n              </div>\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Item from './item';\n\nimport styles from './column.module.less';\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? 'lightblue' : '',\n// });\n\nexport default class Column extends Component {\n  render() {\n    const { status, tasks } = this.props;\n    return (\n      <div className={styles.container}>\n        <h4 className={styles.title} style={{ backgroundColor: status.color }}>\n          {status.display}\n        </h4>\n        <Droppable\n          droppableId={this.props.id}\n          // isDropDisabled={this.props.id === 'todo'}\n        >\n          {(provided) => (\n            <div\n              className={styles.taskList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              // style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {tasks.map((task, index) => (\n                <Item key={task._id} task={task} index={index} />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\n\nexport default function List(props) {\n  const { data, status, size = 'default' } = props;\n  return (\n    <Table dataSource={data} pagination={false} rowKey=\"_id\" size={size}>\n      <Column\n        width=\"90px\"\n        title=\"状态\"\n        dataIndex=\"status\"\n        key=\"status\"\n        render={(value) => {\n          const p = status[value];\n          return <Tag color={p.color}>{p.display}</Tag>;\n        }}\n      />\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\n      <Column\n        title=\"参与者\"\n        dataIndex=\"users\"\n        key=\"users\"\n        render={(users) => (\n          <Avatar.Group>\n            {users.map((user) => (\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\n                <Avatar\n                  style={{ backgroundColor: user.avatar }}\n                  icon={<UserOutlined />}\n                />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )}\n      />\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\n    </Table>\n  );\n}\n","import Cookies from 'js-cookie';\nexport function getRedirectTo() {\n  const projectId = Cookies.get('projectId');\n  return projectId ? '/project/profile' : '/';\n}\n\nexport function sortTasks(tasks) {\n  let sortedTasks = {\n    todo: [],\n    doing: [],\n    done: [],\n  };\n  if (Array.isArray(tasks)) {\n    tasks.forEach((task) => {\n      sortedTasks[task.status].push(task);\n    });\n  }\n  return sortedTasks;\n}\n\nexport const status = {\n  todo: {\n    color: '#4a9ff9',\n    display: '未开始',\n  },\n  doing: {\n    color: '#f9944a',\n    display: '进行中',\n  },\n  done: {\n    color: '#2ac06d',\n    display: '已完成',\n  },\n};\n","import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Card, Radio, Empty } from 'antd';\nimport { MenuOutlined, ProjectOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport Column from '../../../components/board/column';\nimport TaskList from '../../../components/board/list';\nimport { reqTaskList } from '../../../api/index';\nimport { sortTasks, status } from '../../../utils/index';\n\nexport default class Board extends Component {\n  state = {\n    value: 'board',\n    title: '',\n    // originalTasks: [],\n    tasks: {\n      todo: [],\n      doing: [],\n      done: [],\n    },\n  };\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    //从菜单直接点进来，没有type和id\n    const type = params.type || 'sprint';\n    const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\n\n    const title = (type === 'sprint' ? '阶段' : '需求') + id;\n    this.setState({\n      title,\n    });\n\n    reqTaskList({ type, id }).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const originalTasks = result.data;\n        const tasks = sortTasks(originalTasks);\n        // console.log(tasks);\n        this.setState({\n          tasks,\n          // originalTasks,\n        });\n      }\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n  //方案2\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = source.droppableId;\n    const finish = destination.droppableId;\n\n    //查询被拖拽的task\n    const draggedTask = this.state.tasks[start].find(\n      (task) => task._id === draggableId\n    );\n    // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\n    //   (task) => task._id === draggableId\n    // );\n\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n    draggedTask.status = finish;\n    if (finish === 'todo') {\n      draggedTask.startDate = null;\n      draggedTask.endDate = null;\n    }\n    if (finish === 'doing') {\n      draggedTask.startDate = moment().format('YYYY-MM-DD');\n      draggedTask.endDate = null;\n    }\n    if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\n    // draggedTaskInOriginalTasks.status = finish;\n\n    const { tasks } = this.state;\n    const startTasks = tasks[start];\n    const finishTasks = tasks[finish];\n\n    startTasks.splice(source.index, 1);\n    finishTasks.splice(destination.index, 0, draggedTask);\n\n    this.setState({\n      tasks,\n    });\n  };\n\n  render() {\n    const { tasks, value, title } = this.state;\n    const tasksOfList = Object.values(tasks).flat();\n\n    const boardView =\n      tasksOfList.length === 0 ? (\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n      ) : (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div style={{ display: 'flex' }}>\n            {Object.keys(status).map((c, index) => (\n              <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\n            ))}\n          </div>\n        </DragDropContext>\n      );\n    const listView = <TaskList data={tasksOfList} status={status}></TaskList>;\n\n    return (\n      <Card\n        title={title}\n        extra={\n          <Radio.Group\n            buttonStyle=\"solid\"\n            onChange={this.onChange}\n            value={this.state.value}\n          >\n            <Radio.Button value=\"board\">\n              <ProjectOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"list\">\n              <MenuOutlined />\n            </Radio.Button>\n          </Radio.Group>\n        }\n      >\n        {value === 'board' ? boardView : listView}\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport { Form, Select, Modal, Avatar, Space } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function MemberModal({\n  visible,\n  onOk,\n  onCancel,\n  member,\n  users,\n  roles,\n}) {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      forceRender\n      title={member ? '编辑成员' : '添加成员'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"_id\"\n          label=\"项目成员\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目成员！',\n            },\n          ]}\n        >\n          <Select showSearch placeholder=\"选择成员\" optionFilterProp=\"title\">\n            {users.map((user, index) => (\n              <Option key={index} value={user._id} title={user.username}>\n                <Space>\n                  <Avatar\n                    style={{ backgroundColor: user.avatar }}\n                    icon={<UserOutlined />}\n                  ></Avatar>\n                  <div>\n                    <a> {user.username}</a>\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\n                  </div>\n                </Space>\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"roles\"\n          label=\"成员角色\"\n          rules={[\n            {\n              required: true,\n              message: '请选择成员角色！',\n            },\n          ]}\n        >\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\n            {roles.map((role, index) => (\n              <Option key={index} value={role.name}>\n                {role.name}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component } from 'react';\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from 'antd';\nimport {\n  UserOutlined,\n  DeleteOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\n\nimport MemberModal from '../../../components/member/modal';\nimport { reqMemberList, reqUserList } from '../../../api/index';\n\nconst roleOptions = [\n  {\n    color: '#f56a00',\n    name: '项目经理',\n  },\n  {\n    color: '#7265e6',\n    name: '前端开发',\n  },\n  {\n    color: '#00a2ae',\n    name: '后端开发',\n  },\n  {\n    color: '#ffbf00',\n    name: 'UI设计',\n  },\n];\n\nexport default class Member extends Component {\n  state = {\n    users: [],\n    members: [],\n    visible: false,\n  };\n  columns = [\n    {\n      title: '成员',\n      dataIndex: 'username',\n      render: (text, record) => (\n        <Space>\n          <Avatar\n            style={{ backgroundColor: record.avatar }}\n            icon={<UserOutlined />}\n          ></Avatar>\n          <a>{text}</a>\n        </Space>\n      ),\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      render: (text) => (\n        <span style={{ color: 'rgba(0,0,0,.45)' }}>{text}</span>\n      ),\n    },\n    {\n      title: '角色',\n      dataIndex: 'roles',\n      render: (roles) =>\n        roles.map((role, index) => (\n          <Tag key={index} color={role.color}>\n            {role.name}\n          </Tag>\n        )),\n    },\n    {\n      title: '操作',\n      dataIndex: '_id',\n      key: 'action',\n      render: (_id) => (\n        <Popconfirm\n          placement=\"left\"\n          title=\"确认删除该成员？\"\n          onConfirm={() => this.handleDel(_id)}\n          okText=\"确认\"\n          cancelText=\"取消\"\n        >\n          <a key=\"delete\">\n            <DeleteOutlined />\n          </a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  handleDel = (id) => {\n    const members = this.state.members.filter((member) => member._id !== id);\n    this.setState({ members });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = (values) => {\n    const user = this.state.users.find((user) => user._id === values._id);\n    const users = this.state.users.filter((user) => user._id !== values._id);\n    const roles = roleOptions.filter((role) => {\n      return values.roles.findIndex((value) => role.name === value) !== -1;\n    });\n    const newMember = {\n      ...user,\n      roles,\n    };\n    const members = [newMember, ...this.state.members];\n    this.setState({\n      members,\n      users,\n      visible: false,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const members = result.data;\n        this.setState({\n          members,\n        });\n      }\n    });\n\n    //获取所有用户列表（添加用户时用）\n    reqUserList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const users = result.data;\n        this.setState({\n          users,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Card\n          title=\"项目成员\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            showHeader={false}\n            pagination={false}\n            rowKey=\"_id\"\n            columns={this.columns}\n            dataSource={this.state.members}\n          />\n        </Card>\n        <MemberModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          member={null}\n          users={this.state.users}\n          roles={roleOptions}\n        ></MemberModal>\n      </div>\n    );\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Modal, Form, Input, DatePicker } from 'antd';\nimport moment from 'moment';\n\nexport default function TaskModal({ visible, onOk, onCancel }) {\n  const [form] = Form.useForm();\n  //   useEffect(() => {\n  //     form.resetFields();\n  //   });\n\n  return (\n    <Modal\n      forceRender\n      title=\"新增任务\"\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        initialValues={{ createDate: moment() }}\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"content\"\n          label=\"任务内容\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的任务内容！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item name=\"createDate\" label=\"创建日期\">\n          <DatePicker />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Modal, Form, Input, DatePicker, Radio } from 'antd';\nimport moment from 'moment';\n\nexport default function StoryModal({ visible, onOk, onCancel, story }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (story) {\n      const date = moment(story.date);\n      form.setFieldsValue({ ...story, date });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={story ? '编辑需求' : '新增需求'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        initialValues={{ date: moment(), priority: 0 }}\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"role\"\n          label=\"角色\"\n          rules={[\n            {\n              required: true,\n              message: '请输入角色！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"activity\"\n          label=\"行为\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item\n          name=\"businessValue\"\n          label=\"目的\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item\n          name=\"date\"\n          label=\"提出日期\"\n          rules={[\n            {\n              required: true,\n              message: '请选择提出日期！',\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item name=\"priority\" label=\"优先级\">\n          <Radio.Group name=\"radiogroup\">\n            <Radio value={0}>低</Radio>\n            <Radio value={1}>中</Radio>\n            <Radio value={2}>高</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component } from 'react';\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  EditOutlined,\n  PlusCircleOutlined,\n  ForkOutlined,\n} from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\nimport TaskModal from '../../../components/task/modal';\nimport StoryModal from '../../../components/story/modal';\nimport TaskList from '../../../components/board/list';\nimport {\n  reqCreateTask,\n  reqCreateStory,\n  reqStoryList,\n  reqEditStory,\n} from '../../../api/index';\n\nimport { sortTasks, status } from '../../../utils/index';\n\nconst { Column } = Table;\n\nconst priority = [\n  {\n    color: '#2ac06d',\n    display: '低',\n  },\n  {\n    color: '#f9944a',\n    display: '中',\n  },\n  {\n    color: '#ff4d4f',\n    display: '高',\n  },\n];\n\nexport default class Story extends Component {\n  state = {\n    storyModalVisible: false,\n    taskModalVisible: false,\n    current: null,\n    storyList: [],\n  };\n  showStoryModal = (current) => {\n    this.setState({\n      storyModalVisible: true,\n      current,\n    });\n  };\n\n  showTaskModal = (current) => {\n    this.setState({\n      taskModalVisible: true,\n      current,\n    });\n  };\n\n  handleStoryCancel = (e) => {\n    this.setState({\n      storyModalVisible: false,\n    });\n  };\n\n  handleTaskCancel = (e) => {\n    this.setState({\n      taskModalVisible: false,\n    });\n  };\n\n  handleTaskOk = (values) => {\n    values.createDate = values.createDate.format('YYYY-MM-DD');\n    reqCreateTask(values).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const storyList = this.state.storyList.map((story) => {\n          if (story._id === this.state.current._id) {\n            story.tasks.todo.push(result.data);\n          }\n          return story;\n        });\n        this.setState({\n          storyList,\n          taskModalVisible: false,\n        });\n      }\n    });\n  };\n\n  handleStoryOk = (values) => {\n    const current = this.state.current;\n    const _id = current ? current._id : '';\n    values.date = values.date.format('YYYY-MM-DD');\n\n    if (_id) {\n      //编辑\n      reqEditStory({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const storyList = this.state.storyList.map((story) =>\n            story._id === _id ? { ...story, ...result.data } : story\n          );\n          this.setState({\n            storyList,\n            storyModalVisible: false,\n          });\n        }\n      });\n    } else {\n      reqCreateStory(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          this.setState({\n            storyList: [result.data, ...this.state.storyList],\n            storyModalVisible: false,\n          });\n        }\n      });\n    }\n  };\n\n  componentDidMount() {\n    reqStoryList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        result.data.forEach((story) => {\n          const tasks = story.tasks;\n          story.tasks = sortTasks(tasks);\n        });\n        this.setState({\n          storyList: result.data,\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      taskModalVisible,\n      storyModalVisible,\n      storyList,\n      current,\n    } = this.state;\n    return (\n      <div>\n        <Card\n          title=\"项目需求\"\n          extra={\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                this.showStoryModal();\n              }}\n            >\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={storyList}\n            pagination={false}\n            rowKey=\"_id\"\n            expandable={{\n              expandedRowRender: (record) => {\n                const data = Object.values(record.tasks).flat();\n                return (\n                  <TaskList data={data} status={status} size=\"small\"></TaskList>\n                );\n              },\n              rowExpandable: (record) =>\n                Object.values(record.tasks).flat().length > 0,\n            }}\n          >\n            <Column\n              width=\"80px\"\n              title=\"优先级\"\n              dataIndex=\"priority\"\n              key=\"priority\"\n              render={(value) => {\n                const p = priority[value];\n                return (\n                  <Tag\n                    style={{ width: '40px', textAlign: 'center' }}\n                    color={p.color}\n                  >\n                    {p.display}\n                  </Tag>\n                );\n              }}\n            />\n            <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\n            <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\n            <Column\n              title=\"目的\"\n              dataIndex=\"businessValue\"\n              key=\"businessValue\"\n              progress\n            />\n\n            <Column\n              title=\"任务进度\"\n              dataIndex=\"_id\"\n              render={(id, record) => {\n                return (\n                  <Link to={`/project/board/story/${id}`}>\n                    <TaskProgress\n                      todo={record.tasks.todo.length}\n                      doing={record.tasks.doing.length}\n                      done={record.tasks.done.length}\n                    />\n                  </Link>\n                );\n              }}\n            />\n            <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\n            <Column\n              title=\"操作\"\n              key=\"_id\"\n              render={(id, record) => (\n                <>\n                  <a onClick={() => this.showStoryModal(record)}>\n                    <EditOutlined />\n                  </a>\n                  <Divider type=\"vertical\" />\n                  <a onClick={() => this.showTaskModal(record)}>\n                    <ForkOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <TaskModal\n          visible={taskModalVisible}\n          onOk={this.handleTaskOk}\n          onCancel={this.handleTaskCancel}\n        ></TaskModal>\n        <StoryModal\n          visible={storyModalVisible}\n          onOk={this.handleStoryOk}\n          onCancel={this.handleStoryCancel}\n          story={current}\n        ></StoryModal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Transfer, Table, Modal } from 'antd';\nexport default function TaskTransfer({\n  columns,\n  visible,\n  onCancel,\n  onOk,\n  ...restProps\n}) {\n  return (\n    <Modal\n      forceRender\n      title=\"导入任务\"\n      width={1200}\n      visible={visible}\n      okText=\"确定\"\n      cancelText=\"取消\"\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <Transfer\n        rowKey={(record) => record._id}\n        {...restProps}\n        showSelectAll={false}\n      >\n        {({\n          filteredItems,\n          onItemSelectAll,\n          onItemSelect,\n          selectedKeys: listSelectedKeys,\n        }) => {\n          const rowSelection = {\n            onSelectAll(selected, selectedRows) {\n              const treeSelectedKeys = selectedRows.map(({ _id }) => _id);\n              onItemSelectAll(\n                selected ? treeSelectedKeys : listSelectedKeys,\n                selected\n              );\n            },\n            onSelect({ _id }, selected) {\n              onItemSelect(_id, selected);\n            },\n            selectedRowKeys: listSelectedKeys,\n          };\n\n          return (\n            <Table\n              pagination={false}\n              scroll={{ y: 300 }}\n              rowSelection={rowSelection}\n              rowKey=\"_id\"\n              columns={columns}\n              dataSource={filteredItems}\n              size=\"small\"\n              onRow={({ _id }) => ({\n                onClick: () => {\n                  onItemSelect(_id, !listSelectedKeys.includes(_id));\n                },\n              })}\n            />\n          );\n        }}\n      </Transfer>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\nconst receiveSprints = (sprints) => ({\n  type: types.RECEIVE_SPRINTS,\n  data: sprints,\n});\n\nconst createSprints = (sprint) => ({\n  type: types.CREATE_SPRINT,\n  data: sprint,\n});\n\nexport const createSprint = (sprint) => {\n  return async (dispatch) => {\n    const response = await api.reqCreateSprint(sprint);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(createSprints(result.data));\n    }\n  };\n};\n\nexport const getSprints = () => {\n  return async (dispatch) => {\n    const response = await api.reqSprintList();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveSprints(result.data));\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport { Card, Table, Form, DatePicker, Modal, Divider } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { PlusCircleOutlined, AppstoreAddOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\nimport TaskTransfer from '../../../components/task/transfer';\nimport TaskList from '../../../components/board/list';\nimport { createSprint, getSprints } from '../../../redux/sprints/actions';\nimport { sortTasks, status } from '../../../utils/index';\n\nimport {\n  reqTaskList,\n  reqSprintList,\n  reqCreateSprint,\n} from '../../../api/index';\n\nimport styles from './sprint.module.less';\n\nconst { RangePicker } = DatePicker;\nconst { Column } = Table;\n\nconst columns = [\n  {\n    dataIndex: 'content',\n    title: '任务',\n  },\n  {\n    dataIndex: 'createDate',\n    title: '创建时间',\n  },\n];\n\nclass Sprint extends Component {\n  state = {\n    visible: false,\n    transferVisible: false,\n    targetKeys: [],\n    sprintList: [],\n    tasks: [],\n    currentId: null,\n  };\n\n  onChange = (nextTargetKeys) => {\n    this.setState({ targetKeys: nextTargetKeys });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  showTransferModal = (id) => {\n    this.setState({\n      transferVisible: true,\n      targetKeys: [],\n      currentId: id,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleTransferCancel = (e) => {\n    this.setState({\n      transferVisible: false,\n    });\n  };\n\n  handleOk = (e) => {\n    this.form\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value['rangeDate'];\n        const startDate = rangeDate[0].format('YYYY-MM-DD');\n        const endDate = rangeDate[1].format('YYYY-MM-DD');\n        return reqCreateSprint({ startDate, endDate });\n      })\n      .then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const sprintList = [...this.state.sprintList, result.data];\n          this.setState({\n            visible: false,\n            sprintList,\n          });\n          this.form.resetFields();\n        }\n      })\n      .catch((info) => {\n        console.log('验证失败：', info);\n      });\n  };\n\n  handleTransferOk = () => {\n    const { targetKeys, currentId } = this.state;\n    if (targetKeys.length) {\n      const filterTasks = [];\n      const tasks = [];\n      this.state.tasks.forEach((task) => {\n        targetKeys.includes(task._id)\n          ? filterTasks.push(task)\n          : tasks.push(task);\n      });\n      const sprintList = this.state.sprintList.map((sprint) =>\n        sprint._id === currentId\n          ? {\n              ...sprint,\n              tasks: {\n                ...sprint.tasks,\n                todo: sprint.tasks.todo.concat(filterTasks),\n              },\n            }\n          : sprint\n      );\n      //todo:设置task的sprintId\n      this.setState({ sprintList, tasks, transferVisible: false });\n    } else {\n      this.setState({ transferVisible: false });\n    }\n  };\n\n  componentDidMount() {\n    this.props.getSprints();\n    reqSprintList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        result.data.forEach((sprint) => {\n          const tasks = sprint.tasks;\n          sprint.tasks = sortTasks(tasks);\n        });\n        this.setState({\n          sprintList: result.data,\n        });\n      }\n    });\n    reqTaskList().then((res) => {\n      const result = res.data;\n      const tasks = result.data.filter((task) => task.status === 'todo');\n      if (result.code === 0) {\n        this.setState({\n          tasks,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { startDate, endDate } = this.props.project;\n\n    const { targetKeys, tasks, transferVisible, sprintList } = this.state;\n    // const sprints = this.props.sprints;\n    const length = sprintList.length;\n\n    let newStartDate = startDate;\n\n    if (length > 0) {\n      const lastEndDate = sprintList[length - 1].endDate;\n      newStartDate = moment(lastEndDate).add(1, 'days').format('YYYY-MM-DD');\n    }\n\n    return (\n      <div>\n        <Card\n          title=\"项目阶段\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={sprintList}\n            pagination={false}\n            rowKey=\"_id\"\n            rowClassName={(record) => {\n              return moment().isBetween(\n                record.startDate,\n                record.endDate,\n                null,\n                '[]'\n              )\n                ? styles.curSprint\n                : null;\n            }}\n            expandable={{\n              expandedRowRender: (record) => {\n                const data = Object.values(record.tasks).flat();\n                return (\n                  <TaskList data={data} status={status} size=\"small\"></TaskList>\n                );\n              },\n              rowExpandable: (record) =>\n                Object.values(record.tasks).flat().length > 0,\n            }}\n          >\n            <Column\n              title=\"阶段周期\"\n              key=\"date\"\n              render={(value, record) =>\n                `${record.startDate}~${record.endDate}`\n              }\n            />\n            <Column\n              title=\"任务进度\"\n              dataIndex=\"_id\"\n              render={(id, record) => {\n                return (\n                  <Link to={`/project/board/sprint/${id}`}>\n                    <TaskProgress\n                      todo={record.tasks.todo.length}\n                      doing={record.tasks.doing.length}\n                      done={record.tasks.done.length}\n                    />\n                  </Link>\n                );\n              }}\n            />\n            <Column\n              title=\"操作\"\n              dataIndex=\"_id\"\n              render={(id) => (\n                <>\n                  {/* <Link to=\"/project/board\">\n                    <ProjectOutlined />\n                  </Link>\n                  <Divider type=\"vertical\" /> */}\n                  <a\n                    onClick={() => {\n                      this.showTransferModal(id);\n                    }}\n                  >\n                    <AppstoreAddOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <Modal\n          title=\"新增阶段\"\n          width={480}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        >\n          <Form ref={(el) => (this.form = el)}>\n            <Form.Item\n              name=\"rangeDate\"\n              rules={[\n                {\n                  required: true,\n                  message: '请选择阶段时间！',\n                },\n              ]}\n            >\n              <RangePicker\n                disabledDate={(currentDate) =>\n                  !currentDate.isBetween(newStartDate, endDate, 'day', '[]')\n                }\n                defaultPickerValue={[moment(newStartDate)]}\n                style={{\n                  width: '100%',\n                }}\n              />\n            </Form.Item>\n          </Form>\n        </Modal>\n\n        <TaskTransfer\n          onCancel={this.handleTransferCancel}\n          visible={transferVisible}\n          dataSource={tasks}\n          targetKeys={targetKeys}\n          onOk={this.handleTransferOk}\n          onChange={this.onChange}\n          columns={columns}\n        ></TaskTransfer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n  sprints: state.sprints,\n});\n\nconst mapDispatchToProps = { createSprint, getSprints };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { testMessage } from '../../api/index';\n\nexport default class Test extends Component {\n  handleClick = () => {\n    testMessage();\n  };\n\n  render() {\n    return <Button onClick={this.handleClick}>测试请求拦截（全局消息）</Button>;\n  }\n}\n","import React from 'react';\nimport { Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    style={{\n      background: 'none',\n    }}\n    subTitle=\"页面不存在\"\n  />\n);\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { Layout, Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport Sider from '../../components/sider/sider';\nimport Header from '../../components/header/header';\nimport MyProjects from '../my-projects/my-projects';\nimport Profile from '../project/profile/profile';\nimport Meeting from '../project/meeting/meeting';\nimport Board from '../project/board/board';\nimport Member from '../project/member/member';\nimport Story from '../project/story/story';\nimport Sprint from '../project/sprint/sprint';\nimport Test from '../test/test';\nimport NotFound from '../exception/not-found';\nimport { resetUser, getUser } from '../../redux/user/actions';\nimport { resetProject, getProject } from '../../redux/project/actions';\n\nconst { Content } = Layout;\n\nclass Main extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  navList = [\n    {\n      path: '/',\n      component: MyProjects,\n      exact: true,\n    },\n    {\n      path: '/project/profile',\n      component: Profile,\n    },\n    {\n      path: '/project/member',\n      component: Member,\n    },\n    {\n      path: '/project/meeting',\n      component: Meeting,\n    },\n    {\n      path: '/project/story',\n      component: Story,\n    },\n    {\n      path: '/project/board',\n      component: Board,\n      exact: true,\n    },\n    {\n      path: '/project/board/:type/:id',\n      component: Board,\n    },\n    {\n      path: '/project/sprint',\n      component: Sprint,\n    },\n    {\n      path: '/test',\n      component: Test,\n    },\n    {\n      component: NotFound,\n    },\n  ];\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  logout = () => {\n    let that = this;\n    Modal.confirm({\n      title: '确认退出登录吗？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        Cookies.remove('projectId');\n        Cookies.remove('userId');\n        that.props.resetUser();\n        that.props.resetProject();\n      },\n    });\n  };\n\n  componentDidMount() {\n    const userId = Cookies.get('userId');\n    if (userId && !this.props.user._id) {\n      this.props.getUser();\n    }\n\n    const projectId = Cookies.get('projectId');\n    if (projectId && !this.props.project._id) {\n      this.props.getProject();\n    }\n  }\n\n  render() {\n    const userId = Cookies.get('userId');\n    const projectId = Cookies.get('projectId');\n    const visiable =\n      this.props.location.pathname === '/' && !projectId ? false : true;\n    if (!userId) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (visiable && !projectId) {\n      return <Redirect to=\"/\" />;\n    }\n\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n    return (\n      <Layout\n        style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header\n            visiable={visiable}\n            projectName={this.props.project.projectName}\n            username={this.props.user.username}\n            collapsed={this.state.collapsed}\n            toggle={visiable ? this.toggle : null}\n            logout={this.logout}\n          />\n          <Content style={{ padding: '24px', minHeight: 'auto' }}>\n            <Switch>\n              {this.navList.map((nav, index) => (\n                <Route key={index} {...nav} />\n              ))}\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}