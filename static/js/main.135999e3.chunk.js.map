{"version":3,"sources":["containers/login/login.module.less","components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/item.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","components/task-progress/task-progress.jsx","containers/project/profile/profile.jsx","components/board/item.jsx","components/board/column.jsx","components/task/list.jsx","components/task/edit-modal.jsx","containers/project/task/task.jsx","utils/index.js","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","components/task/add-modal.jsx","components/story/modal.jsx","containers/project/story/story.jsx","components/task/transfer.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/test/test.jsx","containers/main/main.jsx","containers/project/meeting/meeting.jsx","containers/exception/not-found.jsx","index.js"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","RegExp","content","storyId","projectId","createDate","this","status","tasks","todo","doing","done","activity","date","businessValue","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","interceptors","response","use","res","message","error","reqLogin","password","reqRegister","reqTaskList","params","reqMemberList","reqSprintList","reqCreateSprint","testMessage","authSuccess","errorMsg","resetUser","connect","login","dispatch","a","result","history","userId","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","replace","register","password2","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","BugOutlined","withRouter","props","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","test","toString","Sider","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","mapDispatchToProps","useState","setVisible","projectList","setProjectList","current","setCurrent","showModal","extra","PlusCircleOutlined","fontSize","item","Modal","confirm","ExclamationCircleOutlined","push","format","reqEditProject","genChildren","num","children","element","block","TaskProgress","echarts","require","Countdown","Statistic","option","text","legend","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","axisPointer","xAxis","boundaryGap","yAxis","series","areaStyle","lineStyle","task","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","hoverable","displayDate","Group","users","placement","avatar","id","droppableId","taskList","droppableProps","List","size","editable","p","Option","Select","StoryModal","setStatus","selectedUsers","showSearch","optionFilterProp","optionLabelProp","onChange","target","Task","setTask","setUsers","setData","filter","indexOf","reqEditTask","updateTasks","sortTasks","sortedTasks","Array","isArray","Board","setValue","setTitle","setTasks","match","tasksOfList","flat","boardView","image","Empty","PRESENTED_IMAGE_SIMPLE","onDragEnd","destination","source","start","finish","draggedTask","find","startTasks","finishTasks","splice","c","listView","buttonStyle","Button","MenuOutlined","MemberModal","member","roles","allowClear","role","roleOptions","TaskModal","story","priority","TaskTransfer","columns","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","onSelect","selectedRowKeys","scroll","y","onRow","includes","createSprints","sprint","createSprint","getSprints","transferVisible","setTransferVisible","targetKeys","setTargetKeys","sprintList","setSprintList","currentId","setCurrentId","formRef","useRef","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","expandable","expandedRowRender","rowExpandable","showTransferModal","AppstoreAddOutlined","newSprintList","disabledDate","currentDate","defaultPickerValue","filterTasks","newTasks","concat","nextTargetKeys","Test","handleClick","Component","Content","Layout","navList","component","MyProjects","exact","chartRef","setTimeout","chart","init","setOption","on","resize","gutter","valueStyle","height","members","setMembers","newMembers","handleDel","DeleteOutlined","bordered","column","storyModalVisible","setStoryModalVisible","taskModalVisible","setTaskModalVisible","storyList","setStoryList","showStoryModal","textAlign","progress","showTaskModal","ForkOutlined","reqCreateTask","newStoryList","reqEditStory","Sprint","background","subTitle","getProject","getUser","setCollapsed","position","minHeight","remove","padding","nav","ReactDOM","locale","store","Login","Register","Main","document","getElementById"],"mappings":"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","file":"static/js/main.135999e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2HGpQcOxDIzDn9vTQMCg0m\",\"date\":\"_1FIFhu2ilokbdq6x52XLA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\n\nconst initUser = {\n  username: '',\n  email: '',\n  msg: '',\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return action.data;\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","import * as types from './action-types';\n\nconst initSprints = [];\n\nexport function sprints(state = initSprints, action) {\n  switch (action.type) {\n    case types.RECEIVE_SPRINTS:\n      return action.data;\n    case types.CREATE_SPRINT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\nimport { sprints } from './sprints/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  sprints,\n  // projectList,\n});\n","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","//获取当前项目冲刺周期\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\n//新增冲刺周期\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from 'mockjs';\nimport Cookies from 'js-cookie';\n\nconst api = 'http://mock';\n\nMock.mock(`${api}/users/login`, 'post', function (options) {\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, 'post', function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === 'guoyunxiang') {\n    return {\n      code: 1,\n      msg: '用户名已经被注册',\n    };\n  }\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock('@last'),\n      _id: Cookies.get('userId'),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, 'get', function () {\n  const { data } = Mock.mock({\n    'data|5-10': [\n      {\n        _id: '@id',\n        projectName: '@ctitle',\n        description: '@cparagraph(2,3)',\n        startDate: '2020-07-14',\n        endDate: '2020-12-24',\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: \"1000000000\",\n      //   projectName: \"BesTV互联网电视助手\",\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\n      //   startDate: \"2020-08-04\",\n      //   endDate: \"2020-12-31\",\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/projects/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock('@ctitle'),\n      description: Mock.mock('@cparagraph(2,3)'),\n      _id: Cookies.get('projectId'),\n      startDate: '2020-07-14',\n      endDate: '2020-12-24',\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/list` + '.*'), 'get', function (options) {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|10-15': [\n        {\n          _id: '@id',\n          content: '@csentence',\n          'status|1': ['todo', 'doing', 'done'],\n          storyId: '@id',\n          projectId: Cookies.get('projectId'),\n          createDate: '@date',\n          startDate: function () {\n            return this.status !== 'todo' ? Mock.mock('@date') : null;\n          },\n          endDate: function () {\n            return this.status === 'done' ? Mock.mock('@date') : null;\n          },\n          'users|0-5': [\n            {\n              _id: '@id',\n              'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n              username: '@last',\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-12': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n          'roles|1-4': [\n            {\n              'color|1': ['#f56a00', '#7265e6', '#00a2ae', '#ffbf00'],\n              'name|1': ['项目经理', '前端开发', '后端开发', 'UI设计'],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/users/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|5-8': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/sprints/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      _id: Mock.mock('@id'),\n      ...JSON.parse(options.body),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n    },\n  };\n});\n\nMock.mock(`${api}/sprints/list`, 'get', function () {\n  return {\n    code: 0,\n    data: [\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-14',\n        endDate: '2020-07-30',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-31',\n        endDate: '2020-08-26',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-08-27',\n        endDate: '2020-09-13',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n    ],\n  };\n});\n\nMock.mock(`${api}/stories/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-10': [\n        {\n          _id: '@id',\n          'role|1': ['用户', 'VIP', '管理员', '项目经理'],\n          activity: '@cword(10, 15)',\n          date: '@date',\n          'priority|1': [0, 1, 2],\n          businessValue: '@cword(10, 15)',\n          'tasks|3-5': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/tasks/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(`${api}/storys/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/storys/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/test`, 'get', {\n  code: 1,\n  msg: '请求返回的非正常信息',\n});\n","import axios from 'axios';\nimport '../mock/mock';\nimport { message } from 'antd';\n\nconst api = 'http://mock';\n\naxios.interceptors.response.use((response) => {\n  const res = response.data;\n  if (response.status === 200 && res.code !== 0) {\n    message.error(res.msg);\n  } else {\n    return response;\n  }\n});\n\nexport default function ajax(url = '', data = {}, type = 'GET') {\n  if (type === 'GET') {\n    let dataStr = '';\n    Object.keys(data).forEach((key) => {\n      dataStr += key + '=' + data[key] + '&';\n    });\n    if (dataStr) {\n      dataStr = '?' + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from './ajax';\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax('/users/login', { username, password }, 'POST');\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax('/users/register', { username, password }, 'POST');\n};\n\nexport const reqUser = () => {\n  return ajax('/users/user');\n};\n\n//获取所有注册用户列表\nexport const reqUserList = () => {\n  return ajax('/users/list');\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    '/projects/create',\n    { projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//编辑项目\nexport const reqEditProject = ({\n  _id,\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    `/projects/edit/${_id}`,\n    { _id, projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax('/projects/project');\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax('/projects/list');\n};\n\n//根据projectId获取阶段下或者用户故事下的任务列表\nexport const reqTaskList = (params) => {\n  return ajax('/tasks/list', params);\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax('/projects/members');\n};\n\n//根据projectId获取冲刺周期列表\nexport const reqSprintList = () => {\n  return ajax('/sprints/list');\n};\n//新增冲刺周期\nexport const reqCreateSprint = ({ startDate, endDate }) => {\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\n};\n\n//根据projectId获取用户故事列表\nexport const reqStoryList = () => {\n  return ajax('/stories/list');\n};\n\n//根据projectId获取任务列表\n// export const reqTaskList = () => {\n//   return ajax('/tasks/list');\n// };\n\n//新增任务\nexport const reqCreateTask = ({\n  content,\n  createDate,\n  status = 'todo',\n  users = [],\n}) => {\n  return ajax('/tasks/create', { content, createDate, status, users }, 'POST');\n};\n\n//新增用户故事\nexport const reqCreateStory = ({\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    '/storys/create',\n    { role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//编辑用户故事\nexport const reqEditStory = ({\n  _id,\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    `/storys/edit/${_id}`,\n    { _id, role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//编辑任务\nexport const reqEditTask = (task) => {\n  return ajax(`/tasks/edit/${task._id}`, task, 'POST');\n};\n\n//测试全局消息\nexport const testMessage = () => {\n  return ajax('/test');\n};\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Input, Button, Alert, Space } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie';\n\nimport styles from './login.module.less';\n\nimport { login } from '../../redux/user/actions';\n\n// class Login extends Component {\n//   onFinish = (user) => {\n//     this.props.login(user);\n//   };\n\n//   onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n//   toRegister = () => {\n//     this.props.history.replace(\"/register\");\n//   };\n\n//   render() {\n//     const userId = Cookies.get(\"userId\");\n//     const { msg } = this.props.user;\n//     if (userId) {\n//       return <Redirect to=\"/\" />;\n//     }\n//     return (\n//       <div className={styles.container}>\n//         <div className={styles.content}>\n//           <div className={styles.main}>\n//             <Form\n//               wrapperCol={{ span: 24 }}\n//               name=\"loginForm\"\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={this.onFinish}\n//               onFinishFailed={this.onFinishFailed}\n//             >\n//               <Form.Item>\n//                 {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"username\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入用户名！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input\n//                   prefix={<UserOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"用户名\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item>\n//                 <Space>\n//                   <Button type=\"primary\" htmlType=\"submit\">\n//                     登录\n//                   </Button>\n//                   <Button htmlType=\"button\" onClick={this.toRegister}>\n//                     注册账号\n//                   </Button>\n//                 </Space>\n//               </Form.Item>\n//             </Form>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nconst Login = ({ login, history, user }) => {\n  const onFinish = (user) => {\n    login(user);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const toRegister = () => {\n    history.replace('/register');\n  };\n\n  const userId = Cookies.get('userId');\n  const { msg } = user;\n\n  if (userId) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <div className={styles.main}>\n          <Form\n            wrapperCol={{ span: 24 }}\n            name=\"loginForm\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item>\n              {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n            </Form.Item>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名！',\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"用户名\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入密码！',\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  登录\n                </Button>\n                <Button htmlType=\"button\" onClick={toRegister}>\n                  注册账号\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Form, Input, Button, Alert, Space } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie';\n\nimport styles from '../login/login.module.less';\n\nimport { register } from '../../redux/user/actions';\n\n// class Register extends Component {\n//   onFinish = (user) => {\n//     this.props.register(user);\n//     console.log(\"Success:\", user);\n//   };\n\n//   onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n//   toLogin = () => {\n//     this.props.history.replace(\"/login\");\n//   };\n\n//   render() {\n//     const userId = Cookies.get(\"userId\");\n//     const { msg } = this.props.user;\n//     if (userId) {\n//       return <Redirect to=\"/\" />;\n//     }\n//     return (\n//       <div className={styles.container}>\n//         <div className={styles.content}>\n//           <div className={styles.main}>\n//             <Form\n//               wrapperCol={{ span: 24 }}\n//               name=\"loginForm\"\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={this.onFinish}\n//               onFinishFailed={this.onFinishFailed}\n//             >\n//               <Form.Item>\n//                 {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"username\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入用户名！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input\n//                   prefix={<UserOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"用户名\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password2\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请再次输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item>\n//                 <Space>\n//                   <Button type=\"primary\" htmlType=\"submit\">\n//                     注册\n//                   </Button>\n//                   <Button htmlType=\"button\" onClick={this.toLogin}>\n//                     已有账号\n//                   </Button>\n//                 </Space>\n//               </Form.Item>\n//             </Form>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nconst Register = ({ register, history, user }) => {\n  const onFinish = (user) => {\n    register(user);\n    // console.log('Success:', user);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const toLogin = () => {\n    history.replace('/login');\n  };\n\n  const userId = Cookies.get('userId');\n  const { msg } = user;\n\n  if (userId) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <div className={styles.main}>\n          <Form\n            wrapperCol={{ span: 24 }}\n            name=\"loginForm\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item>\n              {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n            </Form.Item>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名！',\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"用户名\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入密码！',\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password2\"\n              rules={[\n                {\n                  required: true,\n                  message: '请再次输入密码！',\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  注册\n                </Button>\n                <Button htmlType=\"button\" onClick={toLogin}>\n                  已有账号\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  UserOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n  BugOutlined,\n} from '@ant-design/icons';\n\nimport styles from './sider.module.less';\n\nconst menuList = [\n  // 包含所有导航组件的相关信息数据\n  {\n    path: '/project/profile',\n    title: '项目状态',\n    icon: <ProfileOutlined />,\n  },\n  {\n    path: '/project/member',\n    title: '成员管理',\n    icon: <TeamOutlined />,\n  },\n  {\n    path: '/project/story',\n    title: '需求分析',\n    icon: <SolutionOutlined />,\n  },\n  {\n    path: '/project/sprint',\n    title: '阶段设置',\n    icon: <CarryOutOutlined />,\n  },\n  {\n    path: '/project/board',\n    title: '任务看板',\n    icon: <ProjectOutlined />,\n  },\n  {\n    path: '/project/meeting',\n    title: '会议纪要',\n    icon: <SnippetsOutlined />,\n  },\n  {\n    path: '/account',\n    title: '个人中心',\n    icon: <UserOutlined />,\n  },\n  {\n    path: '/test',\n    title: '功能测试',\n    icon: <BugOutlined />,\n  },\n];\n\nconst Sider = (props) => {\n  const visiable = props.visiable;\n  const currentPath = props.location.pathname;\n  let selectedMenu = menuList\n    .findIndex((menu) => new RegExp(menu.path).test(currentPath))\n    .toString();\n  // if (!visiable) return null;\n  return (\n    <Layout.Sider\n      trigger={null}\n      collapsible\n      collapsed={props.collapsed}\n      className={styles.sider}\n      style={{\n        display: visiable ? '' : 'none',\n      }}\n    >\n      <div className={styles.logo}>PMS</div>\n      <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n        {menuList.map((menu, index) => (\n          <Menu.Item\n            key={index}\n            icon={menu.icon}\n            onClick={() => {\n              if (menu.path) props.history.replace(menu.path);\n            }}\n          >\n            {menu.title}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Layout.Sider>\n  );\n};\n\nSider.propTypes = {\n  collapsed: PropTypes.bool.isRequired,\n};\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport styles from './header.module.less';\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {props.visiable &&\n        React.createElement(\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n          {\n            className: styles.trigger,\n            onClick: props.toggle,\n          }\n        )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\n\nexport default function ProjectList(props) {\n  const data = props.data;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        title=\"信息\"\n        dataIndex=\"projectName\"\n        key=\"projectName\"\n        render={(value, record) => (\n          <>\n            <h4>\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\n            </h4>\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\n              {record.description}\n            </div>\n          </>\n        )}\n      />\n      <Column\n        title=\"时间\"\n        key=\"date\"\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\n      />\n      <Column\n        title=\"操作\"\n        dataIndex=\"_id\"\n        key=\"action\"\n        render={(_id, record) => (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              props.onItemEditClick(record);\n            }}\n          >\n            <EditOutlined />\n          </a>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Modal } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (project) {\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\n      form.setFieldsValue({ ...project, rangeDate });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={project ? '编辑项目' : '创建项目'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            // form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"projectName\"\n          label=\"项目名称\"\n          rules={[\n            {\n              required: true,\n              message: '请输入项目名称！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"rangeDate\"\n          label=\"项目时间\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目时间！',\n            },\n          ]}\n        >\n          <RangePicker\n            style={{\n              width: '100%',\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"项目简介\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的项目简介！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","import React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Card, Modal } from 'antd';\nimport {\n  PlusCircleOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nimport ProjectList from '../../components/project/list';\nimport ProjectModal from '../../components/project/modal';\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from '../../redux/project/actions';\nimport {\n  reqProjectList,\n  reqCreateProject,\n  reqEditProject,\n} from '../../api/index';\n\n//component模式\n// class MyProjects extends Component {\n//   state = {\n//     visible: false,\n//     projectList: [],\n//     current: null,\n//   };\n\n//   showModal = (current) => {\n//     this.setState({\n//       visible: true,\n//       current,\n//     });\n//   };\n\n//   handleConfirm = (item) => {\n//     let that = this;\n//     Modal.confirm({\n//       title: '选择并切换至该项目？',\n//       icon: <ExclamationCircleOutlined />,\n//       cancelText: '取消',\n//       okText: '确定',\n//       onOk() {\n//         that.props.switchProject(item);\n//         //todo:重置store.state中的sprints\n//         Cookies.set('projectId', item._id);\n//         that.props.history.push('/project/profile');\n//       },\n//     });\n//   };\n\n//   handleOk = (values) => {\n//     const current = this.state.current;\n//     const _id = current ? current._id : '';\n//     const rangeDate = values['rangeDate'];\n//     values.startDate = rangeDate[0].format('YYYY-MM-DD');\n//     values.endDate = rangeDate[1].format('YYYY-MM-DD');\n\n//     if (_id) {\n//       //编辑\n//       reqEditProject({ ...values, _id }).then((res) => {\n//         const result = res.data;\n//         if (result.code === 0) {\n//           const projectList = this.state.projectList.map((project) =>\n//             project._id === _id ? result.data : project\n//           );\n//           this.setState({\n//             projectList,\n//             visible: false,\n//           });\n//           //如果修改的是当前选择的项目\n//           if (_id === this.props.project._id)\n//             this.props.switchProject(result.data);\n//         }\n//       });\n//     } else {\n//       //创建\n//       reqCreateProject(values).then((res) => {\n//         const result = res.data;\n//         if (result.code === 0) {\n//           this.setState({\n//             projectList: [result.data, ...this.state.projectList],\n//             visible: false,\n//           });\n//         }\n//       });\n//     }\n//   };\n\n//   handleCancel = () => {\n//     this.setState({\n//       visible: false,\n//     });\n//   };\n\n//   componentDidMount() {\n//     reqProjectList().then((res) => {\n//       const result = res.data;\n//       // console.log(result);\n//       if (result.code === 0) {\n//         this.setState({\n//           projectList: result.data,\n//         });\n//       }\n//     });\n//     // this.props.getProjectList();\n//   }\n\n//   render() {\n//     // const data = this.props.projectList;\n//     const { projectList, current } = this.state;\n//     return (\n//       <div>\n//         <Card\n//           title=\"我的项目\"\n//           extra={\n//             <a\n//               onClick={(e) => {\n//                 e.preventDefault();\n//                 this.showModal();\n//               }}\n//             >\n//               <PlusCircleOutlined style={{ fontSize: '24px' }} />\n//             </a>\n//           }\n//         >\n//           <ProjectList\n//             data={projectList}\n//             onConfirm={this.handleConfirm}\n//             onItemEditClick={this.showModal}\n//           ></ProjectList>\n//         </Card>\n\n//         <ProjectModal\n//           visible={this.state.visible}\n//           onOk={this.handleOk}\n//           onCancel={this.handleCancel}\n//           project={current}\n//         ></ProjectModal>\n//       </div>\n//     );\n//   }\n// }\n\n//hooks改写\nconst MyProjects = (props) => {\n  const [visible, setVisible] = useState(false);\n  const [projectList, setProjectList] = useState([]);\n  const [current, setCurrent] = useState(null);\n\n  useEffect(() => {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setProjectList(result.data);\n      }\n    });\n  }, []);\n\n  const showModal = (current) => {\n    setVisible(true);\n    setCurrent(current);\n  };\n\n  const handleConfirm = (item) => {\n    Modal.confirm({\n      title: '选择并切换至该项目？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        props.switchProject(item);\n        //todo:重置store.state中的sprints\n        Cookies.set('projectId', item._id);\n        props.history.push('/project/profile');\n      },\n    });\n  };\n\n  const handleOk = (values) => {\n    const _id = current ? current._id : '';\n    const rangeDate = values['rangeDate'];\n    values.startDate = rangeDate[0].format('YYYY-MM-DD');\n    values.endDate = rangeDate[1].format('YYYY-MM-DD');\n\n    if (_id) {\n      //编辑\n      reqEditProject({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const projectList = projectList.map((project) =>\n            project._id === _id ? result.data : project\n          );\n          setVisible(false);\n          setProjectList(projectList);\n          //如果修改的是当前选择的项目\n          if (_id === props.project._id) props.switchProject(result.data);\n        }\n      });\n    } else {\n      //创建\n      reqCreateProject(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          setVisible(false);\n          setProjectList([result.data, ...projectList]);\n        }\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div>\n      <Card\n        title=\"我的项目\"\n        extra={\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              showModal();\n            }}\n          >\n            <PlusCircleOutlined style={{ fontSize: '24px' }} />\n          </a>\n        }\n      >\n        <ProjectList\n          data={projectList}\n          onConfirm={handleConfirm}\n          onItemEditClick={showModal}\n        ></ProjectList>\n      </Card>\n\n      <ProjectModal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        project={current}\n      ></ProjectModal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction genChildren(num, className) {\n  let children = [];\n  for (let index = 0; index < num; index++) {\n    const element = (\n      <div key={index} className={`${styles.block} ${className}`}></div>\n    );\n    children.push(element);\n  }\n  return children;\n}\n\nfunction TaskProgress(props) {\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","import React, { useEffect, useRef } from 'react';\nimport { Card, Row, Col, Statistic } from 'antd';\nimport moment from 'moment';\nimport { TeamOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\n\nvar echarts = require('echarts/lib/echarts');\nrequire('echarts/lib/chart/line');\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/title');\nrequire('echarts/lib/component/legend');\n\nconst { Countdown } = Statistic;\n\nconst option = {\n  title: {\n    text: '燃尽图',\n  },\n  legend: {\n    data: ['剩余任务'],\n    selectedMode: false,\n    top: 10,\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    bottom: '2%',\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n    },\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [\n      '09-17',\n      '09-18',\n      '09-19',\n      '09-20',\n      '09-21',\n      '09-22',\n      '09-23',\n      '09-24',\n      '09-25',\n      '09-26',\n      '09-27',\n      '09-28',\n      '09-29',\n    ],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      name: '剩余任务',\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\n      type: 'line',\n      areaStyle: {},\n    },\n    {\n      data: [\n        ['09-17', 56],\n        ['09-29', 0],\n      ],\n      type: 'line',\n      lineStyle: {\n        type: 'dashed',\n      },\n    },\n  ],\n};\n\nexport default function Profile(props) {\n  const chartRef = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      const chart = echarts.init(chartRef.current, 'light');\n      chart.setOption(option);\n      chart.on('finished', () => {\n        chart.resize();\n      });\n    }, 0);\n  }, []);\n\n  return (\n    // <>\n    //   <div>\n    //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\n    //   </div>\n    //   <div>目前未开始10个，进行中10个，已结束10个。</div>\n    // </>\n    <div>\n      <Row gutter={[16, 16]}>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/sprint');\n            }}\n          >\n            <Countdown\n              title=\"距离阶段结束\"\n              value={moment('2020-10-12')}\n              format=\"D 天 H 时\"\n              valueStyle={{ color: '#cf1322' }}\n            />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/board');\n            }}\n          >\n            <Statistic title=\"阶段任务\" value={56} />\n            {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/member');\n            }}\n          >\n            <Statistic title=\"项目成员\" value={13} prefix={<TeamOutlined />} />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Card>\n            <div\n              ref={chartRef}\n              style={{\n                width: '100%',\n                height: '400px',\n              }}\n            ></div>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card, Avatar, Tooltip } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport styles from './item.module.less';\nimport moment from 'moment';\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : '',\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// });\nconst displayDate = (task) => {\n  switch (task.status) {\n    case 'todo':\n      return (\n        // <Tooltip title={task.createDate} placement=\"top\">\n        //   {'创建于' + moment(task.createDate).fromNow()}\n        // </Tooltip>\n        '创建于' + moment(task.createDate).format('MM-DD')\n      );\n    case 'doing':\n      return (\n        // <Tooltip title={task.startDate} placement=\"top\">\n        //   {'开始于' + moment(task.startDate).fromNow()}\n        // </Tooltip>\n        '开始于' + moment(task.startDate).format('MM-DD')\n      );\n    case 'done':\n      return (\n        // <Tooltip title={task.endDate} placement=\"top\">\n        //   {'完成于' + moment(task.endDate).fromNow()}\n        // </Tooltip>\n        '完成于' + moment(task.endDate).format('MM-DD')\n      );\n    default:\n      break;\n  }\n};\n\nexport default function Item({ task, index }) {\n  return (\n    <Draggable\n      draggableId={task._id}\n      index={index}\n      // isDragDisabled={task.status === 'done'}\n    >\n      {(provided, snapshot) => (\n        <div\n          className={styles.container}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          // style={getItemStyle(\n          //   snapshot.isDragging,\n          //   provided.draggableProps.style\n          // )}\n        >\n          <Card hoverable={true}>\n            <p>{task.content}</p>\n            <div className={styles.date}>{displayDate(task)}</div>\n            <div>\n              <Avatar.Group>\n                {task.users.map((user) => (\n                  <Tooltip key={user._id} title={user.username} placement=\"top\">\n                    <Avatar\n                      style={{ backgroundColor: user.avatar }}\n                      icon={<UserOutlined />}\n                    />\n                  </Tooltip>\n                ))}\n              </Avatar.Group>\n            </div>\n          </Card>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Item from './item';\n\nimport styles from './column.module.less';\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? 'lightblue' : '',\n// });\n\nexport default function Column({ status, tasks, id }) {\n  return (\n    <div className={styles.container}>\n      <h4 className={styles.title} style={{ backgroundColor: status.color }}>\n        {status.display}\n      </h4>\n      <Droppable\n        droppableId={id}\n        // isDropDisabled={this.props.id === 'todo'}\n      >\n        {(provided) => (\n          <div\n            className={styles.taskList}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            // style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {tasks.map((task, index) => (\n              <Item key={task._id} task={task} index={index} />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\nimport { UserOutlined, EditOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\n\nexport default function List(props) {\n  const {\n    data,\n    status,\n    size = 'default',\n    onItemEditClick,\n    editable = true,\n  } = props;\n\n  return (\n    <Table dataSource={data} pagination={false} rowKey=\"_id\" size={size}>\n      <Column\n        width=\"90px\"\n        title=\"状态\"\n        dataIndex=\"status\"\n        key=\"status\"\n        render={(value) => {\n          const p = status[value];\n          return <Tag color={p.color}>{p.display}</Tag>;\n        }}\n      />\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\n      <Column\n        title=\"参与者\"\n        dataIndex=\"users\"\n        key=\"users\"\n        render={(users) => (\n          <Avatar.Group>\n            {users.map((user) => (\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\n                <Avatar\n                  style={{ backgroundColor: user.avatar }}\n                  icon={<UserOutlined />}\n                />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )}\n      />\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\n      {editable ? (\n        <Column\n          title=\"操作\"\n          dataIndex=\"_id\"\n          key=\"action\"\n          render={(_id, record) => (\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                onItemEditClick(record);\n              }}\n            >\n              <EditOutlined />\n            </a>\n          )}\n        />\n      ) : null}\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  Radio,\n  Select,\n  Avatar,\n  Space,\n} from 'antd';\nimport moment from 'moment';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function StoryModal({ visible, onOk, onCancel, task, users }) {\n  const [status, setStatus] = useState();\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (task) {\n      setStatus(task.status);\n      const startDate = task.startDate ? moment(task.startDate) : moment();\n      const endDate = task.endDate ? moment(task.endDate) : moment();\n      const selectedUsers = task.users.map((user) => user._id);\n      form.setFieldsValue({\n        ...task,\n        selectedUsers,\n        startDate,\n        endDate,\n      });\n    } else {\n      form.resetFields();\n    }\n  }, [task]);\n\n  function handleChange(e) {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <Modal\n      forceRender\n      title=\"编辑任务\"\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"selectedUsers\"\n          label=\"参与者\"\n          rules={[\n            {\n              required: true,\n              message: '请选择参与者！',\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"选择参与者\"\n            optionFilterProp=\"title\"\n            optionLabelProp=\"title\"\n            mode=\"multiple\"\n          >\n            {users.map((user, index) => (\n              <Option key={index} value={user._id} title={user.username}>\n                <Space>\n                  <Avatar\n                    style={{ backgroundColor: user.avatar }}\n                    icon={<UserOutlined />}\n                  ></Avatar>\n                  <div>\n                    <a> {user.username}</a>\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\n                  </div>\n                </Space>\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item name=\"status\" label=\"状态\">\n          <Radio.Group name=\"radiogroup\" onChange={handleChange}>\n            <Radio value=\"todo\">未开始</Radio>\n            <Radio value=\"doing\">进行中</Radio>\n            <Radio value=\"done\">已完成</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        {status !== 'todo' ? (\n          <Form.Item\n            name=\"startDate\"\n            label=\"开始日期\"\n            rules={[\n              {\n                required: true,\n                message: '请选择开始日期！',\n              },\n            ]}\n          >\n            <DatePicker />\n          </Form.Item>\n        ) : null}\n        {status === 'done' ? (\n          <Form.Item\n            name=\"endDate\"\n            label=\"完成日期\"\n            rules={[\n              {\n                required: true,\n                message: '请选择完成日期！',\n              },\n            ]}\n          >\n            <DatePicker />\n          </Form.Item>\n        ) : null}\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport List from '../../../components/task/list';\nimport Modal from '../../../components/task/edit-modal';\nimport { reqMemberList, reqEditTask } from '../../../api/index';\n\nexport default function Task(props) {\n  const [visible, setVisible] = useState(false);\n  const [task, setTask] = useState({ users: [] });\n  const [users, setUsers] = useState([]);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setUsers(result.data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  function showModal(task) {\n    setVisible(true);\n    setTask(task);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function handleOk(values) {\n    values.startDate = values.startDate\n      ? values.startDate.format('YYYY-MM-DD')\n      : null;\n    values.endDate = values.endDate\n      ? values.endDate.format('YYYY-MM-DD')\n      : null;\n    values.users = users.filter(\n      (user) => values.selectedUsers.indexOf(user._id) !== -1\n    );\n    const _id = task._id;\n    reqEditTask({ ...task, ...values }).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const taskList = data.map((task) =>\n          task._id === _id ? result.data : task\n        );\n        props.updateTasks(taskList);\n        setVisible(false);\n      }\n    });\n  }\n\n  return (\n    <>\n      <List {...props} data={data} onItemEditClick={showModal}></List>\n      <Modal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        task={task}\n        users={[...task.users, ...users]}\n      ></Modal>\n    </>\n  );\n}\n","import Cookies from 'js-cookie';\nexport function getRedirectTo() {\n  const projectId = Cookies.get('projectId');\n  return projectId ? '/project/profile' : '/';\n}\n\nexport function sortTasks(tasks) {\n  let sortedTasks = {\n    todo: [],\n    doing: [],\n    done: [],\n  };\n  if (Array.isArray(tasks)) {\n    tasks.forEach((task) => {\n      sortedTasks[task.status].push(task);\n    });\n  }\n  return sortedTasks;\n}\n\nexport const status = {\n  todo: {\n    color: '#4a9ff9',\n    display: '未开始',\n  },\n  doing: {\n    color: '#f9944a',\n    display: '进行中',\n  },\n  done: {\n    color: '#2ac06d',\n    display: '已完成',\n  },\n};\n","import React, { Component, useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Card, Radio, Empty } from 'antd';\nimport { MenuOutlined, ProjectOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport Column from '../../../components/board/column';\nimport TaskList from '../task/task';\nimport { reqTaskList } from '../../../api/index';\nimport { sortTasks, status } from '../../../utils/index';\n\n// export default class Board extends Component {\n//   state = {\n//     value: 'board',\n//     title: '',\n//     // originalTasks: [],\n//     tasks: {\n//       todo: [],\n//       doing: [],\n//       done: [],\n//     },\n//   };\n\n//   componentDidMount() {\n//     const params = this.props.match.params;\n//     //从菜单直接点进来，没有type和id\n//     const type = params.type || 'sprint';\n//     const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\n\n//     const title = (type === 'sprint' ? '阶段' : '需求') + id;\n//     this.setState({\n//       title,\n//     });\n\n//     reqTaskList({ type, id }).then((res) => {\n//       const result = res.data;\n//       if (result.code === 0) {\n//         const originalTasks = result.data;\n//         const tasks = sortTasks(originalTasks);\n//         // console.log(tasks);\n//         this.setState({\n//           tasks,\n//           // originalTasks,\n//         });\n//       }\n//     });\n//   }\n\n//   onChange = (e) => {\n//     this.setState({\n//       value: e.target.value,\n//     });\n//   };\n\n//   updateTasks = (tasks) => {\n//     this.setState({\n//       tasks: sortTasks(tasks),\n//     });\n//   };\n\n//   /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n//   方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n//   两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n//   //方案2\n//   onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (!destination) {\n//       return;\n//     }\n\n//     if (\n//       destination.droppableId === source.droppableId &&\n//       destination.index === source.index\n//     ) {\n//       return;\n//     }\n\n//     const start = source.droppableId;\n//     const finish = destination.droppableId;\n\n//     //查询被拖拽的task\n//     const draggedTask = this.state.tasks[start].find(\n//       (task) => task._id === draggableId\n//     );\n//     // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\n//     //   (task) => task._id === draggableId\n//     // );\n\n//     //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n//     draggedTask.status = finish;\n//     if (finish === 'todo') {\n//       draggedTask.startDate = null;\n//       draggedTask.endDate = null;\n//     }\n//     if (finish === 'doing') {\n//       draggedTask.startDate = moment().format('YYYY-MM-DD');\n//       draggedTask.endDate = null;\n//     }\n//     if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\n//     // draggedTaskInOriginalTasks.status = finish;\n\n//     const { tasks } = this.state;\n//     const startTasks = tasks[start];\n//     const finishTasks = tasks[finish];\n\n//     startTasks.splice(source.index, 1);\n//     finishTasks.splice(destination.index, 0, draggedTask);\n\n//     this.setState({\n//       tasks,\n//     });\n//   };\n\n//   render() {\n//     const { tasks, value, title } = this.state;\n//     const tasksOfList = Object.values(tasks).flat();\n\n//     const boardView =\n//       tasksOfList.length === 0 ? (\n//         <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n//       ) : (\n//         <DragDropContext onDragEnd={this.onDragEnd}>\n//           <div style={{ display: 'flex' }}>\n//             {Object.keys(status).map((c, index) => (\n//               <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\n//             ))}\n//           </div>\n//         </DragDropContext>\n//       );\n//     const listView = (\n//       <TaskList\n//         data={tasksOfList}\n//         status={status}\n//         updateTasks={this.updateTasks}\n//       ></TaskList>\n//     );\n\n//     return (\n//       <Card\n//         title={title}\n//         extra={\n//           <Radio.Group\n//             buttonStyle=\"solid\"\n//             onChange={this.onChange}\n//             value={this.state.value}\n//           >\n//             <Radio.Button value=\"board\">\n//               <ProjectOutlined />\n//             </Radio.Button>\n//             <Radio.Button value=\"list\">\n//               <MenuOutlined />\n//             </Radio.Button>\n//           </Radio.Group>\n//         }\n//       >\n//         {value === 'board' ? boardView : listView}\n//       </Card>\n//     );\n//   }\n// }\n\n//hooks\nexport default function Board(props) {\n  const [value, setValue] = useState('board');\n  const [title, setTitle] = useState('');\n  const [tasks, setTasks] = useState({\n    todo: [],\n    doing: [],\n    done: [],\n  });\n\n  useEffect(() => {\n    const params = props.match.params;\n    //从菜单直接点进来，没有type和id\n    const type = params.type || 'sprint';\n    const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\n\n    const title = (type === 'sprint' ? '阶段' : '需求') + id;\n    setTitle(title);\n\n    reqTaskList({ type, id }).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const originalTasks = result.data;\n        const tasks = sortTasks(originalTasks);\n        setTasks(tasks);\n      }\n    });\n  }, []);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const updateTasks = (tasks) => {\n    setTasks(sortTasks(tasks));\n  };\n\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n  //方案2\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = source.droppableId;\n    const finish = destination.droppableId;\n\n    //查询被拖拽的task\n    const draggedTask = tasks[start].find((task) => task._id === draggableId);\n    // const draggedTaskInOriginalTasks = originalTasks.find(\n    //   (task) => task._id === draggableId\n    // );\n\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n    draggedTask.status = finish;\n    if (finish === 'todo') {\n      draggedTask.startDate = null;\n      draggedTask.endDate = null;\n    }\n    if (finish === 'doing') {\n      draggedTask.startDate = moment().format('YYYY-MM-DD');\n      draggedTask.endDate = null;\n    }\n    if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\n    // draggedTaskInOriginalTasks.status = finish;\n\n    const startTasks = tasks[start];\n    const finishTasks = tasks[finish];\n\n    startTasks.splice(source.index, 1);\n    finishTasks.splice(destination.index, 0, draggedTask);\n\n    setTasks(tasks);\n  };\n\n  const tasksOfList = Object.values(tasks).flat();\n\n  const boardView =\n    tasksOfList.length === 0 ? (\n      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n    ) : (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex' }}>\n          {Object.keys(status).map((c, index) => (\n            <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\n          ))}\n        </div>\n      </DragDropContext>\n    );\n  const listView = (\n    <TaskList\n      data={tasksOfList}\n      status={status}\n      updateTasks={updateTasks}\n    ></TaskList>\n  );\n\n  return (\n    <Card\n      title={title}\n      extra={\n        <Radio.Group buttonStyle=\"solid\" onChange={onChange} value={value}>\n          <Radio.Button value=\"board\">\n            <ProjectOutlined />\n          </Radio.Button>\n          <Radio.Button value=\"list\">\n            <MenuOutlined />\n          </Radio.Button>\n        </Radio.Group>\n      }\n    >\n      {value === 'board' ? boardView : listView}\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Form, Select, Modal, Avatar, Space } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function MemberModal({\n  visible,\n  onOk,\n  onCancel,\n  member,\n  users,\n  roles,\n}) {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      forceRender\n      title={member ? '编辑成员' : '添加成员'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"_id\"\n          label=\"项目成员\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目成员！',\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"选择成员\"\n            optionLabelProp=\"title\"\n            optionFilterProp=\"title\"\n          >\n            {users.map((user, index) => (\n              <Option key={index} value={user._id} title={user.username}>\n                <Space>\n                  <Avatar\n                    style={{ backgroundColor: user.avatar }}\n                    icon={<UserOutlined />}\n                  ></Avatar>\n                  <div>\n                    <a> {user.username}</a>\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\n                  </div>\n                </Space>\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"roles\"\n          label=\"成员角色\"\n          rules={[\n            {\n              required: true,\n              message: '请选择成员角色！',\n            },\n          ]}\n        >\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\n            {roles.map((role, index) => (\n              <Option key={index} value={role.name}>\n                {role.name}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from 'antd';\nimport {\n  UserOutlined,\n  DeleteOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\n\nimport MemberModal from '../../../components/member/modal';\nimport { reqMemberList, reqUserList } from '../../../api/index';\n\nconst roleOptions = [\n  {\n    color: '#f56a00',\n    name: '项目经理',\n  },\n  {\n    color: '#7265e6',\n    name: '前端开发',\n  },\n  {\n    color: '#00a2ae',\n    name: '后端开发',\n  },\n  {\n    color: '#ffbf00',\n    name: 'UI设计',\n  },\n];\n\nexport default function Member() {\n  const [users, setUsers] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setMembers(result.data);\n      }\n    });\n\n    //获取所有用户列表（添加用户时用）\n    reqUserList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setUsers(result.data);\n      }\n    });\n  }, []);\n\n  const handleDel = (id) => {\n    const newMembers = members.filter((member) => member._id !== id);\n    setMembers(newMembers);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = (values) => {\n    const user = users.find((user) => user._id === values._id);\n    const users = users.filter((user) => user._id !== values._id);\n    const roles = roleOptions.filter((role) => {\n      return values.roles.findIndex((value) => role.name === value) !== -1;\n    });\n    const newMember = {\n      ...user,\n      roles,\n    };\n    const members = [newMember, ...members];\n    setMembers(members);\n    setUsers(users);\n    setVisible(false);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const columns = [\n    {\n      title: '成员',\n      dataIndex: 'username',\n      render: (text, record) => (\n        <Space>\n          <Avatar\n            style={{ backgroundColor: record.avatar }}\n            icon={<UserOutlined />}\n          ></Avatar>\n          <a>{text}</a>\n        </Space>\n      ),\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      render: (text) => (\n        <span style={{ color: 'rgba(0,0,0,.45)' }}>{text}</span>\n      ),\n    },\n    {\n      title: '角色',\n      dataIndex: 'roles',\n      render: (roles) =>\n        roles.map((role, index) => (\n          <Tag key={index} color={role.color}>\n            {role.name}\n          </Tag>\n        )),\n    },\n    {\n      title: '操作',\n      dataIndex: '_id',\n      key: 'action',\n      render: (_id) => (\n        <Popconfirm\n          placement=\"left\"\n          title=\"确认删除该成员？\"\n          onConfirm={() => handleDel(_id)}\n          okText=\"确认\"\n          cancelText=\"取消\"\n        >\n          <a key=\"delete\">\n            <DeleteOutlined />\n          </a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card\n        title=\"项目成员\"\n        extra={\n          <a onClick={showModal}>\n            <PlusCircleOutlined style={{ fontSize: '24px' }} />\n          </a>\n        }\n      >\n        <Table\n          showHeader={false}\n          pagination={false}\n          rowKey=\"_id\"\n          columns={columns}\n          dataSource={members}\n        />\n      </Card>\n      <MemberModal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        member={null}\n        users={users}\n        roles={roleOptions}\n      ></MemberModal>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Modal, Form, Input, DatePicker } from 'antd';\nimport moment from 'moment';\n\nexport default function TaskModal({ visible, onOk, onCancel }) {\n  const [form] = Form.useForm();\n  //   useEffect(() => {\n  //     form.resetFields();\n  //   });\n\n  return (\n    <Modal\n      forceRender\n      title=\"新增任务\"\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        initialValues={{ createDate: moment() }}\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"content\"\n          label=\"任务内容\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的任务内容！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item name=\"createDate\" label=\"创建日期\">\n          <DatePicker />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Modal, Form, Input, DatePicker, Radio } from 'antd';\nimport moment from 'moment';\n\nexport default function StoryModal({ visible, onOk, onCancel, story }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (story) {\n      const date = moment(story.date);\n      form.setFieldsValue({ ...story, date });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={story ? '编辑需求' : '新增需求'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        initialValues={{ date: moment(), priority: 0 }}\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"role\"\n          label=\"角色\"\n          rules={[\n            {\n              required: true,\n              message: '请输入角色！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"activity\"\n          label=\"行为\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item\n          name=\"businessValue\"\n          label=\"目的\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n        <Form.Item\n          name=\"date\"\n          label=\"提出日期\"\n          rules={[\n            {\n              required: true,\n              message: '请选择提出日期！',\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item name=\"priority\" label=\"优先级\">\n          <Radio.Group name=\"radiogroup\">\n            <Radio value={0}>低</Radio>\n            <Radio value={1}>中</Radio>\n            <Radio value={2}>高</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component, useState, useEffect } from \"react\";\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  EditOutlined,\n  PlusCircleOutlined,\n  ForkOutlined,\n} from \"@ant-design/icons\";\n\nimport TaskProgress from \"../../../components/task-progress/task-progress\";\nimport AddTaskModal from \"../../../components/task/add-modal\";\nimport StoryModal from \"../../../components/story/modal\";\nimport TaskList from \"../task/task\";\nimport {\n  reqCreateTask,\n  reqCreateStory,\n  reqStoryList,\n  reqEditStory,\n} from \"../../../api/index\";\n\nimport { sortTasks, status } from \"../../../utils/index\";\n\nconst { Column } = Table;\n\nconst priority = [\n  {\n    color: \"#2ac06d\",\n    display: \"低\",\n  },\n  {\n    color: \"#f9944a\",\n    display: \"中\",\n  },\n  {\n    color: \"#ff4d4f\",\n    display: \"高\",\n  },\n];\n\nexport default function Story(props) {\n  const [storyModalVisible, setStoryModalVisible] = useState(false);\n  const [taskModalVisible, setTaskModalVisible] = useState(false);\n  const [current, setCurrent] = useState(null);\n  const [storyList, setStoryList] = useState([]);\n\n  useEffect(() => {\n    reqStoryList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        result.data.forEach((story) => {\n          const tasks = story.tasks;\n          story.tasks = sortTasks(tasks);\n        });\n        setStoryList(result.data);\n      }\n    });\n  }, []);\n\n  const showStoryModal = (current) => {\n    setStoryModalVisible(true);\n    setCurrent(current);\n  };\n\n  const showTaskModal = (current) => {\n    setTaskModalVisible(true);\n    setCurrent(current);\n  };\n\n  const handleStoryCancel = (e) => {\n    setStoryModalVisible(false);\n  };\n\n  const handleTaskCancel = (e) => {\n    setTaskModalVisible(false);\n  };\n\n  const handleTaskOk = (values) => {\n    values.createDate = values.createDate.format(\"YYYY-MM-DD\");\n    reqCreateTask(values).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const newStoryList = storyList.map((story) => {\n          if (story._id === current._id) {\n            story.tasks.todo.push(result.data);\n          }\n          return story;\n        });\n        setStoryList(newStoryList);\n        setTaskModalVisible(false);\n      }\n    });\n  };\n\n  const handleStoryOk = (values) => {\n    const _id = current ? current._id : \"\";\n    values.date = values.date.format(\"YYYY-MM-DD\");\n\n    if (_id) {\n      //编辑\n      reqEditStory({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const newStoryList = storyList.map((story) =>\n            story._id === _id ? { ...story, ...result.data } : story\n          );\n          setStoryList(newStoryList);\n          setStoryModalVisible(false);\n        }\n      });\n    } else {\n      reqCreateStory(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          setStoryList([result.data, ...storyList]);\n          setStoryModalVisible(false);\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Card\n        title=\"项目需求\"\n        extra={\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              showStoryModal();\n            }}\n          >\n            <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n          </a>\n        }\n      >\n        <Table\n          dataSource={storyList}\n          pagination={false}\n          rowKey=\"_id\"\n          expandable={{\n            expandedRowRender: (record) => {\n              const data = Object.values(record.tasks).flat();\n              return (\n                <TaskList\n                  data={data}\n                  status={status}\n                  size=\"small\"\n                  editable={false}\n                ></TaskList>\n              );\n            },\n            rowExpandable: (record) =>\n              Object.values(record.tasks).flat().length > 0,\n          }}\n        >\n          <Column\n            width=\"80px\"\n            title=\"优先级\"\n            dataIndex=\"priority\"\n            key=\"priority\"\n            render={(value) => {\n              const p = priority[value];\n              return (\n                <Tag\n                  style={{ width: \"40px\", textAlign: \"center\" }}\n                  color={p.color}\n                >\n                  {p.display}\n                </Tag>\n              );\n            }}\n          />\n          <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\n          <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\n          <Column\n            title=\"目的\"\n            dataIndex=\"businessValue\"\n            key=\"businessValue\"\n            progress\n          />\n\n          <Column\n            title=\"任务进度\"\n            dataIndex=\"_id\"\n            render={(id, record) => {\n              return (\n                <Link to={`/project/board/story/${id}`}>\n                  <TaskProgress\n                    todo={record.tasks.todo.length}\n                    doing={record.tasks.doing.length}\n                    done={record.tasks.done.length}\n                  />\n                </Link>\n              );\n            }}\n          />\n          <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\n          <Column\n            title=\"操作\"\n            key=\"_id\"\n            render={(id, record) => (\n              <>\n                <a onClick={() => showStoryModal(record)}>\n                  <EditOutlined />\n                </a>\n                <Divider type=\"vertical\" />\n                <a onClick={() => showTaskModal(record)}>\n                  <ForkOutlined />\n                </a>\n              </>\n            )}\n          />\n        </Table>\n      </Card>\n\n      <AddTaskModal\n        visible={taskModalVisible}\n        onOk={handleTaskOk}\n        onCancel={handleTaskCancel}\n      ></AddTaskModal>\n      <StoryModal\n        visible={storyModalVisible}\n        onOk={handleStoryOk}\n        onCancel={handleStoryCancel}\n        story={current}\n      ></StoryModal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Transfer, Table, Modal } from 'antd';\nexport default function TaskTransfer({\n  columns,\n  visible,\n  onCancel,\n  onOk,\n  ...restProps\n}) {\n  return (\n    <Modal\n      forceRender\n      title=\"导入任务\"\n      width={1200}\n      visible={visible}\n      okText=\"确定\"\n      cancelText=\"取消\"\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <Transfer\n        rowKey={(record) => record._id}\n        {...restProps}\n        showSelectAll={false}\n      >\n        {({\n          filteredItems,\n          onItemSelectAll,\n          onItemSelect,\n          selectedKeys: listSelectedKeys,\n        }) => {\n          const rowSelection = {\n            onSelectAll(selected, selectedRows) {\n              const treeSelectedKeys = selectedRows.map(({ _id }) => _id);\n              onItemSelectAll(\n                selected ? treeSelectedKeys : listSelectedKeys,\n                selected\n              );\n            },\n            onSelect({ _id }, selected) {\n              onItemSelect(_id, selected);\n            },\n            selectedRowKeys: listSelectedKeys,\n          };\n\n          return (\n            <Table\n              pagination={false}\n              scroll={{ y: 300 }}\n              rowSelection={rowSelection}\n              rowKey=\"_id\"\n              columns={columns}\n              dataSource={filteredItems}\n              size=\"small\"\n              onRow={({ _id }) => ({\n                onClick: () => {\n                  onItemSelect(_id, !listSelectedKeys.includes(_id));\n                },\n              })}\n            />\n          );\n        }}\n      </Transfer>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\nconst receiveSprints = (sprints) => ({\n  type: types.RECEIVE_SPRINTS,\n  data: sprints,\n});\n\nconst createSprints = (sprint) => ({\n  type: types.CREATE_SPRINT,\n  data: sprint,\n});\n\nexport const createSprint = (sprint) => {\n  return async (dispatch) => {\n    const response = await api.reqCreateSprint(sprint);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(createSprints(result.data));\n    }\n  };\n};\n\nexport const getSprints = () => {\n  return async (dispatch) => {\n    const response = await api.reqSprintList();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveSprints(result.data));\n    }\n  };\n};\n","import React, { Component, useState, useEffect, useRef } from \"react\";\nimport { Card, Table, Form, DatePicker, Modal, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { PlusCircleOutlined, AppstoreAddOutlined } from \"@ant-design/icons\";\n\nimport TaskProgress from \"../../../components/task-progress/task-progress\";\nimport TaskTransfer from \"../../../components/task/transfer\";\nimport TaskList from \"../task/task\";\nimport { createSprint, getSprints } from \"../../../redux/sprints/actions\";\nimport { sortTasks, status } from \"../../../utils/index\";\n\nimport {\n  reqTaskList,\n  reqSprintList,\n  reqCreateSprint,\n} from \"../../../api/index\";\n\nimport styles from \"./sprint.module.less\";\n\nconst { RangePicker } = DatePicker;\nconst { Column } = Table;\n\nconst columns = [\n  {\n    dataIndex: \"content\",\n    title: \"任务\",\n  },\n  {\n    dataIndex: \"createDate\",\n    title: \"创建时间\",\n  },\n];\n\nconst Sprint = (props) => {\n  const [visible, setVisible] = useState(false);\n  const [transferVisible, setTransferVisible] = useState(false);\n  const [targetKeys, setTargetKeys] = useState([]);\n  const [sprintList, setSprintList] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(null);\n\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    props.getSprints();\n    reqSprintList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        result.data.forEach((sprint) => {\n          const tasks = sprint.tasks;\n          sprint.tasks = sortTasks(tasks);\n        });\n        setSprintList(result.data);\n      }\n    });\n    reqTaskList().then((res) => {\n      const result = res.data;\n      const tasks = result.data.filter((task) => task.status === \"todo\");\n      if (result.code === 0) {\n        setTasks(tasks);\n      }\n    });\n  }, []);\n\n  const onChange = (nextTargetKeys) => {\n    setTargetKeys(nextTargetKeys);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showTransferModal = (id) => {\n    setTransferVisible(true);\n    setTargetKeys([]);\n    setCurrentId(id);\n  };\n\n  const handleCancel = (e) => {\n    setVisible(false);\n  };\n\n  const handleTransferCancel = (e) => {\n    setTransferVisible(false);\n  };\n\n  const handleOk = (e) => {\n    formRef.current\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value[\"rangeDate\"];\n        const startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n        const endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n        return reqCreateSprint({ startDate, endDate });\n      })\n      .then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const newSprintList = [...sprintList, result.data];\n          setVisible(false);\n          setSprintList(newSprintList);\n          formRef.current.resetFields();\n        }\n      })\n      .catch((info) => {\n        console.log(\"验证失败：\", info);\n      });\n  };\n\n  const handleTransferOk = () => {\n    if (targetKeys.length) {\n      const filterTasks = [];\n      const newTasks = [];\n      tasks.forEach((task) => {\n        targetKeys.includes(task._id)\n          ? filterTasks.push(task)\n          : newTasks.push(task);\n      });\n      const newSprintList = sprintList.map((sprint) =>\n        sprint._id === currentId\n          ? {\n              ...sprint,\n              tasks: {\n                ...sprint.tasks,\n                todo: sprint.tasks.todo.concat(filterTasks),\n              },\n            }\n          : sprint\n      );\n      //todo:设置task的sprintId\n      setSprintList(newSprintList);\n      setTasks(newTasks);\n      setTransferVisible(false);\n    } else {\n      setTransferVisible(false);\n    }\n  };\n\n  const { startDate, endDate } = props.project;\n  const length = sprintList.length;\n  let newStartDate = startDate;\n\n  if (length > 0) {\n    const lastEndDate = sprintList[length - 1].endDate;\n    newStartDate = moment(lastEndDate).add(1, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  return (\n    <div>\n      <Card\n        title=\"项目阶段\"\n        extra={\n          <a onClick={showModal}>\n            <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n          </a>\n        }\n      >\n        <Table\n          dataSource={sprintList}\n          pagination={false}\n          rowKey=\"_id\"\n          rowClassName={(record) => {\n            return moment().isBetween(\n              record.startDate,\n              record.endDate,\n              null,\n              \"[]\"\n            )\n              ? styles.curSprint\n              : null;\n          }}\n          expandable={{\n            expandedRowRender: (record) => {\n              const data = Object.values(record.tasks).flat();\n              return (\n                <TaskList\n                  data={data}\n                  status={status}\n                  size=\"small\"\n                  editable={false}\n                ></TaskList>\n              );\n            },\n            rowExpandable: (record) =>\n              Object.values(record.tasks).flat().length > 0,\n          }}\n        >\n          <Column\n            title=\"阶段周期\"\n            key=\"date\"\n            render={(value, record) => `${record.startDate}~${record.endDate}`}\n          />\n          <Column\n            title=\"任务进度\"\n            dataIndex=\"_id\"\n            render={(id, record) => {\n              return (\n                <Link to={`/project/board/sprint/${id}`}>\n                  <TaskProgress\n                    todo={record.tasks.todo.length}\n                    doing={record.tasks.doing.length}\n                    done={record.tasks.done.length}\n                  />\n                </Link>\n              );\n            }}\n          />\n          <Column\n            title=\"操作\"\n            dataIndex=\"_id\"\n            render={(id) => (\n              <>\n                {/* <Link to=\"/project/board\">\n                    <ProjectOutlined />\n                  </Link>\n                  <Divider type=\"vertical\" /> */}\n                <a\n                  onClick={() => {\n                    showTransferModal(id);\n                  }}\n                >\n                  <AppstoreAddOutlined />\n                </a>\n              </>\n            )}\n          />\n        </Table>\n      </Card>\n\n      <Modal\n        title=\"新增阶段\"\n        width={480}\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        okText=\"确定\"\n        cancelText=\"取消\"\n      >\n        <Form ref={formRef}>\n          <Form.Item\n            name=\"rangeDate\"\n            rules={[\n              {\n                required: true,\n                message: \"请选择阶段时间！\",\n              },\n            ]}\n          >\n            <RangePicker\n              disabledDate={(currentDate) =>\n                !currentDate.isBetween(newStartDate, endDate, \"day\", \"[]\")\n              }\n              defaultPickerValue={[moment(newStartDate)]}\n              style={{\n                width: \"100%\",\n              }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <TaskTransfer\n        onCancel={handleTransferCancel}\n        visible={transferVisible}\n        dataSource={tasks}\n        targetKeys={targetKeys}\n        onOk={handleTransferOk}\n        onChange={onChange}\n        columns={columns}\n      ></TaskTransfer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n  sprints: state.sprints,\n});\n\nconst mapDispatchToProps = { createSprint, getSprints };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { testMessage } from '../../api/index';\n\nexport default class Test extends Component {\n  handleClick = () => {\n    testMessage();\n  };\n\n  render() {\n    return <Button onClick={this.handleClick}>测试请求拦截（全局消息）</Button>;\n  }\n}\n","import React, { useState, useEffect, Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { Layout, Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport Sider from '../../components/sider/sider';\nimport Header from '../../components/header/header';\nimport MyProjects from '../my-projects/my-projects';\nimport Profile from '../project/profile/profile';\nimport Meeting from '../project/meeting/meeting';\nimport Board from '../project/board/board';\nimport Member from '../project/member/member';\nimport Story from '../project/story/story';\nimport Sprint from '../project/sprint/sprint';\nimport Test from '../test/test';\nimport NotFound from '../exception/not-found';\nimport { resetUser, getUser } from '../../redux/user/actions';\nimport { resetProject, getProject } from '../../redux/project/actions';\n\nconst { Content } = Layout;\n\n// class Main extends Component {\n//   state = {\n//     collapsed: false,\n//   };\n\n//   navList = [\n//     {\n//       path: '/',\n//       component: MyProjects,\n//       exact: true,\n//     },\n//     {\n//       path: '/project/profile',\n//       component: Profile,\n//     },\n//     {\n//       path: '/project/member',\n//       component: Member,\n//     },\n//     {\n//       path: '/project/meeting',\n//       component: Meeting,\n//     },\n//     {\n//       path: '/project/story',\n//       component: Story,\n//     },\n//     {\n//       path: '/project/board',\n//       component: Board,\n//       exact: true,\n//     },\n//     {\n//       path: '/project/board/:type/:id',\n//       component: Board,\n//     },\n//     {\n//       path: '/project/sprint',\n//       component: Sprint,\n//     },\n//     {\n//       path: '/test',\n//       component: Test,\n//     },\n//     {\n//       component: NotFound,\n//     },\n//   ];\n\n//   toggle = () => {\n//     this.setState({\n//       collapsed: !this.state.collapsed,\n//     });\n//   };\n\n//   logout = () => {\n//     let that = this;\n//     Modal.confirm({\n//       title: '确认退出登录吗？',\n//       icon: <ExclamationCircleOutlined />,\n//       cancelText: '取消',\n//       okText: '确定',\n//       onOk() {\n//         Cookies.remove('projectId');\n//         Cookies.remove('userId');\n//         that.props.resetUser();\n//         that.props.resetProject();\n//       },\n//     });\n//   };\n\n//   componentDidMount() {\n//     const userId = Cookies.get('userId');\n//     if (userId && !this.props.user._id) {\n//       this.props.getUser();\n//     }\n\n//     const projectId = Cookies.get('projectId');\n//     if (projectId && !this.props.project._id) {\n//       this.props.getProject();\n//     }\n//   }\n\n//   render() {\n//     const userId = Cookies.get('userId');\n//     const projectId = Cookies.get('projectId');\n//     const visiable =\n//       this.props.location.pathname === '/' && !projectId ? false : true;\n//     if (!userId) {\n//       return <Redirect to=\"/login\" />;\n//     }\n//     if (visiable && !projectId) {\n//       return <Redirect to=\"/\" />;\n//     }\n\n//     // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n//     return (\n//       <Layout\n//         style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\n//       >\n//         <Sider visiable={visiable} collapsed={this.state.collapsed} />\n//         <Layout style={{ minHeight: '100vh' }}>\n//           <Header\n//             visiable={visiable}\n//             projectName={this.props.project.projectName}\n//             username={this.props.user.username}\n//             collapsed={this.state.collapsed}\n//             toggle={visiable ? this.toggle : null}\n//             logout={this.logout}\n//           />\n//           <Content style={{ padding: '24px', minHeight: 'auto' }}>\n//             <Switch>\n//               {this.navList.map((nav, index) => (\n//                 <Route key={index} {...nav} />\n//               ))}\n//             </Switch>\n//           </Content>\n//         </Layout>\n//       </Layout>\n//     );\n//   }\n// }\n\nconst navList = [\n  {\n    path: '/',\n    component: MyProjects,\n    exact: true,\n  },\n  {\n    path: '/project/profile',\n    component: Profile,\n  },\n  {\n    path: '/project/member',\n    component: Member,\n  },\n  {\n    path: '/project/meeting',\n    component: Meeting,\n  },\n  {\n    path: '/project/story',\n    component: Story,\n  },\n  {\n    path: '/project/board',\n    component: Board,\n    exact: true,\n  },\n  {\n    path: '/project/board/:type/:id',\n    component: Board,\n  },\n  {\n    path: '/project/sprint',\n    component: Sprint,\n  },\n  {\n    path: '/test',\n    component: Test,\n  },\n  {\n    component: NotFound,\n  },\n];\n\nconst Main = ({\n  resetUser,\n  resetProject,\n  getUser,\n  getProject,\n  location,\n  project,\n  user,\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  useEffect(() => {\n    const userId = Cookies.get('userId');\n    if (userId && !user._id) {\n      getUser();\n    }\n\n    const projectId = Cookies.get('projectId');\n    if (projectId && !project._id) {\n      getProject();\n    }\n  }, []);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const logout = () => {\n    Modal.confirm({\n      title: '确认退出登录吗？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        Cookies.remove('projectId');\n        Cookies.remove('userId');\n        resetUser();\n        resetProject();\n      },\n    });\n  };\n\n  const userId = Cookies.get('userId');\n  const projectId = Cookies.get('projectId');\n  const visiable = location.pathname === '/' && !projectId ? false : true;\n  if (!userId) {\n    return <Redirect to=\"/login\" />;\n  }\n  if (visiable && !projectId) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Layout style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}>\n      <Sider visiable={visiable} collapsed={collapsed} />\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header\n          visiable={visiable}\n          projectName={project.projectName}\n          username={user.username}\n          collapsed={collapsed}\n          toggle={visiable ? toggle : null}\n          logout={logout}\n        />\n        <Content style={{ padding: '24px', minHeight: 'auto' }}>\n          <Switch>\n            {navList.map((nav, index) => (\n              <Route key={index} {...nav} />\n            ))}\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React, { Component } from 'react';\nimport { Card, Descriptions } from 'antd';\n\nexport default function Meeting() {\n  return (\n    <Card>\n      <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\n        <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\n        <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\n        <Descriptions.Item label=\"参会人员\" span={2}>\n          张三，李四，王五\n        </Descriptions.Item>\n        <Descriptions.Item label=\"会议内容\" span={2}>\n          装林步车转体领角认分办为心这因。合般形象者劳斯知管以北拉领到治。示油节走不教反回生去车之热作。\n          <br />\n          她定感认后率民作军里单由办眼平。书强革电式每科去同政形准红实。\n          <br />\n          成们只进华王第规情党圆中前群半自。林达空矿真亲分他话间白华。\n        </Descriptions.Item>\n        <Descriptions.Item label=\"待办事项\">\n          己自美素领段然得示包水济确张何只。由什世向水年北开亲南交就治造。\n          <br />\n          团影光将料受打阶图层志且小被器。生满委物更门称式上及界往派式东向思。\n          <br />\n          节复导应设改八干万期直通成数江。子一二打知拉子实料结越团论等科需展。\n        </Descriptions.Item>\n      </Descriptions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    style={{\n      background: 'none',\n    }}\n    subTitle=\"页面不存在\"\n  />\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}