{"version":3,"sources":["containers/login/login.module.less","components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/item.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","components/task-progress/task-progress.jsx","containers/project/profile/profile.jsx","containers/project/meeting/meeting.jsx","components/board/item.jsx","components/board/column.jsx","components/task/list.jsx","components/task/edit-modal.jsx","containers/project/task/task.jsx","utils/index.js","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","components/task/add-modal.jsx","components/story/modal.jsx","containers/project/story/story.jsx","components/task/transfer.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/test/test.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","RegExp","content","storyId","projectId","createDate","this","status","tasks","todo","doing","done","activity","date","businessValue","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","interceptors","response","use","res","message","error","reqLogin","password","reqRegister","reqCreateProject","reqEditProject","reqTaskList","params","reqMemberList","reqSprintList","reqCreateSprint","reqCreateTask","users","reqCreateStory","role","priority","reqEditStory","testMessage","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","Item","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","BugOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","test","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","MyProjects","projectList","current","showModal","setState","handleConfirm","item","that","Modal","confirm","ExclamationCircleOutlined","push","handleOk","format","handleCancel","extra","PlusCircleOutlined","fontSize","mapDispatchToProps","TaskProgress","genChildren","num","children","element","block","echarts","require","Countdown","Statistic","option","text","legend","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","axisPointer","xAxis","boundaryGap","yAxis","series","areaStyle","lineStyle","Profile","setTimeout","chart","init","setOption","on","resize","gutter","hoverable","valueStyle","ref","el","height","Meeting","size","bordered","column","task","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","displayDate","Group","placement","avatar","droppableId","id","taskList","droppableProps","List","editable","p","Option","Select","StoryModal","useState","setStatus","selectedUsers","showSearch","optionFilterProp","optionLabelProp","onChange","target","Task","setVisible","setTask","setUsers","setData","filter","indexOf","reqEditTask","updateTasks","sortTasks","sortedTasks","Array","isArray","Board","onDragEnd","destination","source","start","finish","draggedTask","find","startTasks","finishTasks","splice","match","tasksOfList","flat","boardView","image","Empty","PRESENTED_IMAGE_SIMPLE","c","listView","buttonStyle","Button","MenuOutlined","MemberModal","member","roles","allowClear","roleOptions","Member","members","columns","handleDel","DeleteOutlined","TaskModal","story","Story","storyModalVisible","taskModalVisible","storyList","showStoryModal","showTaskModal","handleStoryCancel","handleTaskCancel","handleTaskOk","handleStoryOk","expandable","expandedRowRender","rowExpandable","textAlign","progress","ForkOutlined","TaskTransfer","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","onSelect","selectedRowKeys","scroll","y","onRow","includes","createSprints","sprint","Sprint","transferVisible","targetKeys","sprintList","currentId","nextTargetKeys","showTransferModal","handleTransferCancel","handleTransferOk","filterTasks","concat","getSprints","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","AppstoreAddOutlined","disabledDate","currentDate","defaultPickerValue","createSprint","Test","handleClick","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.23a90bb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2HGpQcOxDIzDn9vTQMCg0m\",\"date\":\"_1FIFhu2ilokbdq6x52XLA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\r\n\r\nconst initUser = {\r\n  username: '',\r\n  email: '',\r\n  msg: '',\r\n};\r\n\r\nexport function user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case types.AUTH_SUCCESS:\r\n      return action.data;\r\n    case types.RECEIVE_USER:\r\n      return action.data;\r\n    case types.RESET_USER:\r\n      return {\r\n        ...initUser,\r\n        msg: action.data,\r\n      };\r\n    case types.ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        msg: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","//获取项目列表\r\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\r\n//新增项目到列表\r\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\r\n//选择并切换至该项目\r\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\r\n//退出时注销当前选择的项目\r\nexport const RESET_PROJECT = 'RESET_PROJECT';\r\n//项目请求出错\r\nexport const ERROR_MSG = 'ERROR_MSG';\r\n","import * as types from './action-types';\r\n\r\nconst initProject = {\r\n  projectName: '',\r\n  startDate: null,\r\n  endDate: null,\r\n  description: '',\r\n  msg: '',\r\n};\r\n\r\nexport function project(state = initProject, action) {\r\n  switch (action.type) {\r\n    case types.SWITCH_PROJECT:\r\n      return action.data;\r\n    case types.RESET_PROJECT:\r\n      return {\r\n        ...initProject,\r\n        msg: action.data,\r\n      };\r\n    case types.ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        msg: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export function projectList(state = [], action) {\r\n//   switch (action.type) {\r\n//     case types.RECEIVE_PROJECT_LIST:\r\n//       return action.data;\r\n//     case types.RECEIVE_NEW_PROJECT:\r\n//       return [action.data, ...state];\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n","import * as types from './action-types';\r\n\r\nconst initSprints = [];\r\n\r\nexport function sprints(state = initSprints, action) {\r\n  switch (action.type) {\r\n    case types.RECEIVE_SPRINTS:\r\n      return action.data;\r\n    case types.CREATE_SPRINT:\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/*\r\n包含多个用于生成新的state 的reducer 函数的模块\r\n*/\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { user } from './user/reduces';\r\nimport { project } from './project/reduces';\r\nimport { sprints } from './sprints/reduces';\r\n\r\n// 返回合并后的reducer 函数\r\nexport default combineReducers({\r\n  user,\r\n  project,\r\n  sprints,\r\n  // projectList,\r\n});\r\n","//验证成功\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\n//获取当前用户\r\nexport const RECEIVE_USER = 'RECEIVE_USER';\r\n\r\n//用户请求出错\r\nexport const ERROR_MSG = 'ERROR_MSG';\r\n\r\nexport const RESET_USER = 'RESET_USER';\r\n","//获取当前项目冲刺周期\r\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\r\n//新增冲刺周期\r\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\r\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from 'mockjs';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst api = 'http://mock';\r\n\r\nMock.mock(`${api}/users/login`, 'post', function (options) {\r\n  const _id = Mock.mock('@id');\r\n  Cookies.set('userId', _id);\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: JSON.parse(options.body).username,\r\n      _id,\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/register`, 'post', function (options) {\r\n  const body = JSON.parse(options.body);\r\n  if (body.username === 'guoyunxiang') {\r\n    return {\r\n      code: 1,\r\n      msg: '用户名已经被注册',\r\n    };\r\n  }\r\n  const _id = Mock.mock('@id');\r\n  Cookies.set('userId', _id);\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: body.username,\r\n      _id,\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/user`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: Mock.mock('@last'),\r\n      _id: Cookies.get('userId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/list`, 'get', function () {\r\n  const { data } = Mock.mock({\r\n    'data|5-10': [\r\n      {\r\n        _id: '@id',\r\n        projectName: '@ctitle',\r\n        description: '@cparagraph(2,3)',\r\n        startDate: '2020-07-14',\r\n        endDate: '2020-12-24',\r\n      },\r\n    ],\r\n  });\r\n  return {\r\n    code: 0,\r\n    data: [\r\n      // {\r\n      //   _id: \"1000000000\",\r\n      //   projectName: \"BesTV互联网电视助手\",\r\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\r\n      //   startDate: \"2020-08-04\",\r\n      //   endDate: \"2020-12-31\",\r\n      // },\r\n      ...data,\r\n    ],\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/projects/edit/` + '.*'), 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/project`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      projectName: Mock.mock('@ctitle'),\r\n      description: Mock.mock('@cparagraph(2,3)'),\r\n      _id: Cookies.get('projectId'),\r\n      startDate: '2020-07-14',\r\n      endDate: '2020-12-24',\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/tasks/list` + '.*'), 'get', function (options) {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|10-15': [\r\n        {\r\n          _id: '@id',\r\n          content: '@csentence',\r\n          'status|1': ['todo', 'doing', 'done'],\r\n          storyId: '@id',\r\n          projectId: Cookies.get('projectId'),\r\n          createDate: '@date',\r\n          startDate: function () {\r\n            return this.status !== 'todo' ? Mock.mock('@date') : null;\r\n          },\r\n          endDate: function () {\r\n            return this.status === 'done' ? Mock.mock('@date') : null;\r\n          },\r\n          'users|0-5': [\r\n            {\r\n              _id: '@id',\r\n              'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n              username: '@last',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/members`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|8-12': [\r\n        {\r\n          _id: '@id',\r\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n          username: '@last',\r\n          email: '@email',\r\n          'roles|1-4': [\r\n            {\r\n              'color|1': ['#f56a00', '#7265e6', '#00a2ae', '#ffbf00'],\r\n              'name|1': ['项目经理', '前端开发', '后端开发', 'UI设计'],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|5-8': [\r\n        {\r\n          _id: '@id',\r\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n          username: '@last',\r\n          email: '@email',\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/sprints/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      _id: Mock.mock('@id'),\r\n      ...JSON.parse(options.body),\r\n      tasks: {\r\n        todo: [],\r\n        doing: [],\r\n        done: [],\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/sprints/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: [\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-07-14',\r\n        endDate: '2020-07-30',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: function () {\r\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\r\n              },\r\n              endDate: function () {\r\n                return this.status === 'done' ? Mock.mock('@date') : null;\r\n              },\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-07-31',\r\n        endDate: '2020-08-26',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: function () {\r\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\r\n              },\r\n              endDate: function () {\r\n                return this.status === 'done' ? Mock.mock('@date') : null;\r\n              },\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-08-27',\r\n        endDate: '2020-09-13',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: function () {\r\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\r\n              },\r\n              endDate: function () {\r\n                return this.status === 'done' ? Mock.mock('@date') : null;\r\n              },\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/stories/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|8-10': [\r\n        {\r\n          _id: '@id',\r\n          'role|1': ['用户', 'VIP', '管理员', '项目经理'],\r\n          activity: '@cword(10, 15)',\r\n          date: '@date',\r\n          'priority|1': [0, 1, 2],\r\n          businessValue: '@cword(10, 15)',\r\n          'tasks|3-5': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: function () {\r\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\r\n              },\r\n              endDate: function () {\r\n                return this.status === 'done' ? Mock.mock('@date') : null;\r\n              },\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/tasks/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n      projectId: Cookies.get('projectId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/storys/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n      tasks: {\r\n        todo: [],\r\n        doing: [],\r\n        done: [],\r\n      },\r\n      projectId: Cookies.get('projectId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/storys/edit/` + '.*'), 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/tasks/edit/` + '.*'), 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/test`, 'get', {\r\n  code: 1,\r\n  msg: '请求返回的非正常信息',\r\n});\r\n","import axios from 'axios';\r\nimport '../mock/mock';\r\nimport { message } from 'antd';\r\n\r\nconst api = 'http://mock';\r\n\r\naxios.interceptors.response.use((response) => {\r\n  const res = response.data;\r\n  if (response.status === 200 && res.code !== 0) {\r\n    message.error(res.msg);\r\n  } else {\r\n    return response;\r\n  }\r\n});\r\n\r\nexport default function ajax(url = '', data = {}, type = 'GET') {\r\n  if (type === 'GET') {\r\n    let dataStr = '';\r\n    Object.keys(data).forEach((key) => {\r\n      dataStr += key + '=' + data[key] + '&';\r\n    });\r\n    if (dataStr) {\r\n      dataStr = '?' + dataStr.substring(0, dataStr.length - 1);\r\n    }\r\n    return axios.get(api + url + dataStr);\r\n  } else {\r\n    return axios.post(api + url, data);\r\n  }\r\n}\r\n","import ajax from './ajax';\r\n\r\nexport const reqLogin = ({ username, password }) => {\r\n  return ajax('/users/login', { username, password }, 'POST');\r\n};\r\n\r\nexport const reqRegister = ({ username, password }) => {\r\n  return ajax('/users/register', { username, password }, 'POST');\r\n};\r\n\r\nexport const reqUser = () => {\r\n  return ajax('/users/user');\r\n};\r\n\r\n//获取所有注册用户列表\r\nexport const reqUserList = () => {\r\n  return ajax('/users/list');\r\n};\r\n\r\n//新增项目\r\nexport const reqCreateProject = ({\r\n  projectName,\r\n  startDate,\r\n  endDate,\r\n  description,\r\n}) => {\r\n  return ajax(\r\n    '/projects/create',\r\n    { projectName, startDate, endDate, description },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//编辑项目\r\nexport const reqEditProject = ({\r\n  _id,\r\n  projectName,\r\n  startDate,\r\n  endDate,\r\n  description,\r\n}) => {\r\n  return ajax(\r\n    `/projects/edit/${_id}`,\r\n    { _id, projectName, startDate, endDate, description },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//获取项目信息\r\nexport const reqProject = () => {\r\n  return ajax('/projects/project');\r\n};\r\n\r\n//获取项目列表\r\nexport const reqProjectList = () => {\r\n  return ajax('/projects/list');\r\n};\r\n\r\n//根据projectId获取阶段下或者用户故事下的任务列表\r\nexport const reqTaskList = (params) => {\r\n  return ajax('/tasks/list', params);\r\n};\r\n\r\n//根据projectId获取成员列表\r\nexport const reqMemberList = () => {\r\n  return ajax('/projects/members');\r\n};\r\n\r\n//根据projectId获取冲刺周期列表\r\nexport const reqSprintList = () => {\r\n  return ajax('/sprints/list');\r\n};\r\n//新增冲刺周期\r\nexport const reqCreateSprint = ({ startDate, endDate }) => {\r\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\r\n};\r\n\r\n//根据projectId获取用户故事列表\r\nexport const reqStoryList = () => {\r\n  return ajax('/stories/list');\r\n};\r\n\r\n//根据projectId获取任务列表\r\n// export const reqTaskList = () => {\r\n//   return ajax('/tasks/list');\r\n// };\r\n\r\n//新增任务\r\nexport const reqCreateTask = ({\r\n  content,\r\n  createDate,\r\n  status = 'todo',\r\n  users = [],\r\n}) => {\r\n  return ajax('/tasks/create', { content, createDate, status, users }, 'POST');\r\n};\r\n\r\n//新增用户故事\r\nexport const reqCreateStory = ({\r\n  role,\r\n  activity,\r\n  priority,\r\n  businessValue,\r\n  date,\r\n}) => {\r\n  return ajax(\r\n    '/storys/create',\r\n    { role, activity, priority, businessValue, date },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//编辑用户故事\r\nexport const reqEditStory = ({\r\n  _id,\r\n  role,\r\n  activity,\r\n  priority,\r\n  businessValue,\r\n  date,\r\n}) => {\r\n  return ajax(\r\n    `/storys/edit/${_id}`,\r\n    { _id, role, activity, priority, businessValue, date },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//编辑任务\r\nexport const reqEditTask = (task) => {\r\n  return ajax(`/tasks/edit/${task._id}`, task, 'POST');\r\n};\r\n\r\n//测试全局消息\r\nexport const testMessage = () => {\r\n  return ajax('/test');\r\n};\r\n","import * as types from \"./action-types\";\r\nimport * as api from \"../../api\";\r\n\r\n//用户\r\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\r\n\r\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\r\n\r\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\r\n\r\nexport const resetUser = (msg) => {\r\n  return { type: types.RESET_USER, data: msg };\r\n};\r\n\r\n//登录\r\nexport const login = (user) => {\r\n  const { username, password } = user;\r\n  if (!username || !password) {\r\n    return errorMsg(\"请输入用户名和密码\");\r\n  }\r\n  return async (dispatch) => {\r\n    const response = await api.reqLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n//注册\r\nexport const register = (user) => {\r\n  const { username, password, password2 } = user;\r\n  if (!username || !password || !password2) {\r\n    return errorMsg(\"请输入用户名和密码\");\r\n  }\r\n  if (password !== password2) {\r\n    return errorMsg(\"输入的密码不一致\");\r\n  }\r\n  return async (dispatch) => {\r\n    const response = await api.reqRegister(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n//获取用户信息\r\nexport const getUser = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqUser();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(receiveUser(result.data));\r\n    } else {\r\n      dispatch(resetUser(result.msg));\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, Button, Alert, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport styles from \"./login.module.less\";\r\n\r\nimport { login } from \"../../redux/user/actions\";\r\n\r\nclass Login extends Component {\r\n  onFinish = (user) => {\r\n    this.props.login(user);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace(\"/register\");\r\n  };\r\n\r\n  render() {\r\n    const userId = Cookies.get(\"userId\");\r\n    const { msg } = this.props.user;\r\n    if (userId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.main}>\r\n            <Form\r\n              wrapperCol={{ span: 24 }}\r\n              name=\"loginForm\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.onFinish}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入用户名！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"用户名\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    登录\r\n                  </Button>\r\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\r\n                    注册账号\r\n                  </Button>\r\n                </Space>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Form, Input, Button, Alert, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport styles from \"../login/login.module.less\";\r\n\r\nimport { register } from \"../../redux/user/actions\";\r\n\r\nclass Register extends Component {\r\n  onFinish = (user) => {\r\n    this.props.register(user);\r\n    console.log(\"Success:\", user);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const userId = Cookies.get(\"userId\");\r\n    const { msg } = this.props.user;\r\n    if (userId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.main}>\r\n            <Form\r\n              wrapperCol={{ span: 24 }}\r\n              name=\"loginForm\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.onFinish}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入用户名！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"用户名\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请再次输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    注册\r\n                  </Button>\r\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\r\n                    已有账号\r\n                  </Button>\r\n                </Space>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { register })(\r\n  Register\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  TeamOutlined,\r\n  ProjectOutlined,\r\n  UserOutlined,\r\n  CarryOutOutlined,\r\n  SolutionOutlined,\r\n  ProfileOutlined,\r\n  SnippetsOutlined,\r\n  BugOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport styles from './sider.module.less';\r\n\r\nclass Sider extends Component {\r\n  static propTypes = {\r\n    collapsed: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  menuList = [\r\n    // 包含所有导航组件的相关信息数据\r\n    {\r\n      path: '/project/profile',\r\n      title: '项目状态',\r\n      icon: <ProfileOutlined />,\r\n    },\r\n    {\r\n      path: '/project/member',\r\n      title: '成员管理',\r\n      icon: <TeamOutlined />,\r\n    },\r\n    {\r\n      path: '/project/story',\r\n      title: '需求分析',\r\n      icon: <SolutionOutlined />,\r\n    },\r\n    {\r\n      path: '/project/sprint',\r\n      title: '阶段设置',\r\n      icon: <CarryOutOutlined />,\r\n    },\r\n    {\r\n      path: '/project/board',\r\n      title: '任务看板',\r\n      icon: <ProjectOutlined />,\r\n    },\r\n    {\r\n      path: '/project/meeting',\r\n      title: '会议纪要',\r\n      icon: <SnippetsOutlined />,\r\n    },\r\n    {\r\n      path: '/account',\r\n      title: '个人中心',\r\n      icon: <UserOutlined />,\r\n    },\r\n    {\r\n      path: '/test',\r\n      title: '功能测试',\r\n      icon: <BugOutlined />,\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const visiable = this.props.visiable;\r\n    const currentPath = this.props.location.pathname;\r\n    let selectedMenu = this.menuList\r\n      .findIndex((menu) => new RegExp(menu.path).test(currentPath))\r\n      .toString();\r\n    // if (!visiable) return null;\r\n    return (\r\n      <Layout.Sider\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={this.props.collapsed}\r\n        className={styles.sider}\r\n        style={{\r\n          display: visiable ? '' : 'none',\r\n        }}\r\n      >\r\n        <div className={styles.logo}>PMS</div>\r\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\r\n          {this.menuList.map((menu, index) => (\r\n            <Menu.Item\r\n              key={index}\r\n              icon={menu.icon}\r\n              onClick={() => {\r\n                if (menu.path) this.props.history.replace(menu.path);\r\n              }}\r\n            >\r\n              {menu.title}\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu>\r\n      </Layout.Sider>\r\n    );\r\n  }\r\n}\r\n\r\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\r\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\r\nexport default withRouter(Sider);\r\n","import React from 'react';\r\nimport { Layout, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport styles from './header.module.less';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Layout.Header className={styles.header}>\r\n      {props.visiable &&\r\n        React.createElement(\r\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: styles.trigger,\r\n            onClick: props.toggle,\r\n          }\r\n        )}\r\n      <div className={styles.title}>\r\n        <Link to=\"/\">{props.projectName}</Link>\r\n      </div>\r\n      <div>\r\n        <Avatar\r\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\r\n          icon={<UserOutlined />}\r\n        />\r\n        {props.username}\r\n      </div>\r\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Column } = Table;\r\n\r\nexport default function ProjectList(props) {\r\n  const data = props.data;\r\n  return (\r\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\r\n      <Column\r\n        title=\"信息\"\r\n        dataIndex=\"projectName\"\r\n        key=\"projectName\"\r\n        render={(value, record) => (\r\n          <>\r\n            <h4>\r\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\r\n            </h4>\r\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\r\n              {record.description}\r\n            </div>\r\n          </>\r\n        )}\r\n      />\r\n      <Column\r\n        title=\"时间\"\r\n        key=\"date\"\r\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\r\n      />\r\n      <Column\r\n        title=\"操作\"\r\n        dataIndex=\"_id\"\r\n        key=\"action\"\r\n        render={(_id, record) => (\r\n          <a\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.onItemEditClick(record);\r\n            }}\r\n          >\r\n            <EditOutlined />\r\n          </a>\r\n        )}\r\n      />\r\n    </Table>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Input, DatePicker, Modal } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (project) {\r\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\r\n      form.setFieldsValue({ ...project, rangeDate });\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={project ? '编辑项目' : '创建项目'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            // form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"projectName\"\r\n          label=\"项目名称\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入项目名称！',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"rangeDate\"\r\n          label=\"项目时间\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择项目时间！',\r\n            },\r\n          ]}\r\n        >\r\n          <RangePicker\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"项目简介\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符的项目简介！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as types from './action-types';\r\nimport * as api from '../../api';\r\n\r\n//项目\r\n// const receiveProjectList = (projectList) => ({\r\n//   type: types.RECEIVE_PROJECT_LIST,\r\n//   data: projectList,\r\n// });\r\n\r\n// const receiveNewProject = (project) => ({\r\n//   type: types.RECEIVE_NEW_PROJECT,\r\n//   data: project,\r\n// });\r\n\r\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\r\n\r\nexport const switchProject = (project) => ({\r\n  type: types.SWITCH_PROJECT,\r\n  data: project,\r\n});\r\n\r\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\r\n\r\n// export const createProject = (project) => {\r\n//   return async (dispatch) => {\r\n//     const response = await api.reqCreateProject(project);\r\n//     const result = response.data;\r\n//     if (result.code === 0) {\r\n//       dispatch(receiveNewProject(result.data));\r\n//     } else {\r\n//       dispatch(errorMsg(result.msg));\r\n//     }\r\n//   };\r\n// };\r\n\r\nexport const getProject = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqProject();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(switchProject(result.data));\r\n    } else {\r\n      dispatch(resetProject(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// export const getProjectList = () => {\r\n//   return async (dispatch) => {\r\n//     const response = await api.reqProjectList();\r\n//     const result = response.data;\r\n//     if (result.code === 0) {\r\n//       dispatch(receiveProjectList(result.data));\r\n//     }\r\n//   };\r\n// };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { Card, Modal } from 'antd';\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ProjectList from '../../components/project/list';\r\nimport ProjectModal from '../../components/project/modal';\r\nimport {\r\n  // createProject,\r\n  // getProjectList,\r\n  switchProject,\r\n} from '../../redux/project/actions';\r\nimport {\r\n  reqProjectList,\r\n  reqCreateProject,\r\n  reqEditProject,\r\n} from '../../api/index';\r\n\r\nclass MyProjects extends Component {\r\n  state = {\r\n    visible: false,\r\n    projectList: [],\r\n    current: null,\r\n  };\r\n\r\n  showModal = (current) => {\r\n    this.setState({\r\n      visible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  handleConfirm = (item) => {\r\n    let that = this;\r\n    Modal.confirm({\r\n      title: '选择并切换至该项目？',\r\n      icon: <ExclamationCircleOutlined />,\r\n      cancelText: '取消',\r\n      okText: '确定',\r\n      onOk() {\r\n        that.props.switchProject(item);\r\n        //todo:重置store.state中的sprints\r\n        Cookies.set('projectId', item._id);\r\n        that.props.history.push('/project/profile');\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOk = (values) => {\r\n    const current = this.state.current;\r\n    const _id = current ? current._id : '';\r\n    const rangeDate = values['rangeDate'];\r\n    values.startDate = rangeDate[0].format('YYYY-MM-DD');\r\n    values.endDate = rangeDate[1].format('YYYY-MM-DD');\r\n\r\n    if (_id) {\r\n      //编辑\r\n      reqEditProject({ ...values, _id }).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          const projectList = this.state.projectList.map((project) =>\r\n            project._id === _id ? result.data : project\r\n          );\r\n          this.setState({\r\n            projectList,\r\n            visible: false,\r\n          });\r\n          //如果修改的是当前选择的项目\r\n          if (_id === this.props.project._id)\r\n            this.props.switchProject(result.data);\r\n        }\r\n      });\r\n    } else {\r\n      //创建\r\n      reqCreateProject(values).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          this.setState({\r\n            projectList: [result.data, ...this.state.projectList],\r\n            visible: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqProjectList().then((res) => {\r\n      const result = res.data;\r\n      // console.log(result);\r\n      if (result.code === 0) {\r\n        this.setState({\r\n          projectList: result.data,\r\n        });\r\n      }\r\n    });\r\n    // this.props.getProjectList();\r\n  }\r\n\r\n  render() {\r\n    // const data = this.props.projectList;\r\n    const { projectList, current } = this.state;\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"我的项目\"\r\n          extra={\r\n            <a\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.showModal();\r\n              }}\r\n            >\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <ProjectList\r\n            data={projectList}\r\n            onConfirm={this.handleConfirm}\r\n            onItemEditClick={this.showModal}\r\n          ></ProjectList>\r\n        </Card>\r\n\r\n        <ProjectModal\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          project={current}\r\n        ></ProjectModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // projectList: state.projectList,\r\n  project: state.project,\r\n});\r\n\r\nconst mapDispatchToProps = { switchProject };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './task-progress.module.less';\r\n\r\nfunction TaskProgress(props) {\r\n  function genChildren(num, className) {\r\n    let children = [];\r\n    for (let index = 0; index < num; index++) {\r\n      const element = (\r\n        <div key={index} className={`${styles.block} ${className}`}></div>\r\n      );\r\n      children.push(element);\r\n    }\r\n    return children;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      {genChildren(props.todo, styles.todo)}\r\n      {genChildren(props.doing, styles.doing)}\r\n      {genChildren(props.done, styles.done)}\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskProgress.propTypes = {\r\n  todo: PropTypes.number.isRequired,\r\n  doing: PropTypes.number.isRequired,\r\n  done: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TaskProgress;\r\n","import React, { Component } from 'react';\r\nimport { Card, Row, Col, Statistic } from 'antd';\r\nimport moment from 'moment';\r\nimport { TeamOutlined } from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\n\r\nvar echarts = require('echarts/lib/echarts');\r\nrequire('echarts/lib/chart/line');\r\nrequire('echarts/lib/component/tooltip');\r\nrequire('echarts/lib/component/title');\r\nrequire('echarts/lib/component/legend');\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst option = {\r\n  title: {\r\n    text: '燃尽图',\r\n  },\r\n  legend: {\r\n    data: ['剩余任务'],\r\n    selectedMode: false,\r\n    top: 10,\r\n  },\r\n  grid: {\r\n    left: '2%',\r\n    right: '2%',\r\n    bottom: '2%',\r\n    containLabel: true,\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'cross',\r\n    },\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    boundaryGap: false,\r\n    data: [\r\n      '09-17',\r\n      '09-18',\r\n      '09-19',\r\n      '09-20',\r\n      '09-21',\r\n      '09-22',\r\n      '09-23',\r\n      '09-24',\r\n      '09-25',\r\n      '09-26',\r\n      '09-27',\r\n      '09-28',\r\n      '09-29',\r\n    ],\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n  },\r\n  series: [\r\n    {\r\n      name: '剩余任务',\r\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\r\n      type: 'line',\r\n      areaStyle: {},\r\n    },\r\n    {\r\n      data: [\r\n        ['09-17', 56],\r\n        ['09-29', 0],\r\n      ],\r\n      type: 'line',\r\n      lineStyle: {\r\n        type: 'dashed',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class Profile extends Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      const chart = echarts.init(this.chart, 'light');\r\n      chart.setOption(option);\r\n      chart.on('finished', () => {\r\n        chart.resize();\r\n      });\r\n    }, 0);\r\n\r\n    // const chart = echarts.init(this.chart);\r\n    // chart.setOption(option);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <>\r\n      //   <div>\r\n      //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\r\n      //   </div>\r\n      //   <div>目前未开始10个，进行中10个，已结束10个。</div>\r\n      // </>\r\n      <div>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/sprint');\r\n              }}\r\n            >\r\n              <Countdown\r\n                title=\"距离阶段结束\"\r\n                value={moment('2020-10-12')}\r\n                format=\"D 天 H 时\"\r\n                valueStyle={{ color: '#cf1322' }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/board');\r\n              }}\r\n            >\r\n              <Statistic title=\"阶段任务\" value={56} />\r\n              {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/member');\r\n              }}\r\n            >\r\n              <Statistic\r\n                title=\"项目成员\"\r\n                value={13}\r\n                prefix={<TeamOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Card>\r\n              <div\r\n                ref={(el) => {\r\n                  this.chart = el;\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '400px',\r\n                }}\r\n              ></div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Descriptions } from \"antd\";\r\n\r\nexport default class Meeting extends Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\r\n          <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\r\n          <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\r\n          <Descriptions.Item label=\"参会人员\" span={2}>\r\n            张三，李四，王五\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"会议内容\" span={2}>\r\n            装林步车转体领角认分办为心这因。合般形象者劳斯知管以北拉领到治。示油节走不教反回生去车之热作。\r\n            <br />\r\n            她定感认后率民作军里单由办眼平。书强革电式每科去同政形准红实。\r\n            <br />\r\n            成们只进华王第规情党圆中前群半自。林达空矿真亲分他话间白华。\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"待办事项\">\r\n            己自美素领段然得示包水济确张何只。由什世向水年北开亲南交就治造。\r\n            <br />\r\n            团影光将料受打阶图层志且小被器。生满委物更门称式上及界往派式东向思。\r\n            <br />\r\n            节复导应设改八干万期直通成数江。子一二打知拉子实料结越团论等科需展。\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Card, Avatar, Tooltip } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport styles from './item.module.less';\r\nimport moment from 'moment';\r\n\r\n// const getItemStyle = (isDragging, draggableStyle) => ({\r\n//   // change background colour if dragging\r\n//   background: isDragging ? 'lightgreen' : '',\r\n//   // styles we need to apply on draggables\r\n//   ...draggableStyle,\r\n// });\r\nconst displayDate = (task) => {\r\n  switch (task.status) {\r\n    case 'todo':\r\n      return (\r\n        // <Tooltip title={task.createDate} placement=\"top\">\r\n        //   {'创建于' + moment(task.createDate).fromNow()}\r\n        // </Tooltip>\r\n        '创建于' + moment(task.createDate).format('MM-DD')\r\n      );\r\n    case 'doing':\r\n      return (\r\n        // <Tooltip title={task.startDate} placement=\"top\">\r\n        //   {'开始于' + moment(task.startDate).fromNow()}\r\n        // </Tooltip>\r\n        '开始于' + moment(task.startDate).format('MM-DD')\r\n      );\r\n    case 'done':\r\n      return (\r\n        // <Tooltip title={task.endDate} placement=\"top\">\r\n        //   {'完成于' + moment(task.endDate).fromNow()}\r\n        // </Tooltip>\r\n        '完成于' + moment(task.endDate).format('MM-DD')\r\n      );\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default class Item extends Component {\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <Draggable\r\n        draggableId={task._id}\r\n        index={index}\r\n        // isDragDisabled={task.status === 'done'}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className={styles.container}\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            // style={getItemStyle(\r\n            //   snapshot.isDragging,\r\n            //   provided.draggableProps.style\r\n            // )}\r\n          >\r\n            <Card hoverable={true}>\r\n              <p>{task.content}</p>\r\n              <div className={styles.date}>{displayDate(task)}</div>\r\n              <div>\r\n                <Avatar.Group>\r\n                  {task.users.map((user) => (\r\n                    <Tooltip\r\n                      key={user._id}\r\n                      title={user.username}\r\n                      placement=\"top\"\r\n                    >\r\n                      <Avatar\r\n                        style={{ backgroundColor: user.avatar }}\r\n                        icon={<UserOutlined />}\r\n                      />\r\n                    </Tooltip>\r\n                  ))}\r\n                </Avatar.Group>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './item';\r\n\r\nimport styles from './column.module.less';\r\n\r\n// const getListStyle = (isDraggingOver) => ({\r\n//   background: isDraggingOver ? 'lightblue' : '',\r\n// });\r\n\r\nexport default class Column extends Component {\r\n  render() {\r\n    const { status, tasks } = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h4 className={styles.title} style={{ backgroundColor: status.color }}>\r\n          {status.display}\r\n        </h4>\r\n        <Droppable\r\n          droppableId={this.props.id}\r\n          // isDropDisabled={this.props.id === 'todo'}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              className={styles.taskList}\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              // style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {tasks.map((task, index) => (\r\n                <Item key={task._id} task={task} index={index} />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\r\nimport { UserOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nconst { Column } = Table;\r\n\r\nexport default function List(props) {\r\n  const {\r\n    data,\r\n    status,\r\n    size = 'default',\r\n    onItemEditClick,\r\n    editable = true,\r\n  } = props;\r\n\r\n  return (\r\n    <Table dataSource={data} pagination={false} rowKey=\"_id\" size={size}>\r\n      <Column\r\n        width=\"90px\"\r\n        title=\"状态\"\r\n        dataIndex=\"status\"\r\n        key=\"status\"\r\n        render={(value) => {\r\n          const p = status[value];\r\n          return <Tag color={p.color}>{p.display}</Tag>;\r\n        }}\r\n      />\r\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\r\n      <Column\r\n        title=\"参与者\"\r\n        dataIndex=\"users\"\r\n        key=\"users\"\r\n        render={(users) => (\r\n          <Avatar.Group>\r\n            {users.map((user) => (\r\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\r\n                <Avatar\r\n                  style={{ backgroundColor: user.avatar }}\r\n                  icon={<UserOutlined />}\r\n                />\r\n              </Tooltip>\r\n            ))}\r\n          </Avatar.Group>\r\n        )}\r\n      />\r\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\r\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\r\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\r\n      {editable ? (\r\n        <Column\r\n          title=\"操作\"\r\n          dataIndex=\"_id\"\r\n          key=\"action\"\r\n          render={(_id, record) => (\r\n            <a\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                onItemEditClick(record);\r\n              }}\r\n            >\r\n              <EditOutlined />\r\n            </a>\r\n          )}\r\n        />\r\n      ) : null}\r\n    </Table>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  DatePicker,\r\n  Radio,\r\n  Select,\r\n  Avatar,\r\n  Space,\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function StoryModal({ visible, onOk, onCancel, task, users }) {\r\n  const [status, setStatus] = useState();\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (task) {\r\n      setStatus(task.status);\r\n      const startDate = task.startDate ? moment(task.startDate) : moment();\r\n      const endDate = task.endDate ? moment(task.endDate) : moment();\r\n      const selectedUsers = task.users.map((user) => user._id);\r\n      form.setFieldsValue({\r\n        ...task,\r\n        selectedUsers,\r\n        startDate,\r\n        endDate,\r\n      });\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  }, [task]);\r\n\r\n  function handleChange(e) {\r\n    setStatus(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title=\"编辑任务\"\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"selectedUsers\"\r\n          label=\"参与者\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择参与者！',\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder=\"选择参与者\"\r\n            optionFilterProp=\"title\"\r\n            optionLabelProp=\"title\"\r\n            mode=\"multiple\"\r\n          >\r\n            {users.map((user, index) => (\r\n              <Option key={index} value={user._id} title={user.username}>\r\n                <Space>\r\n                  <Avatar\r\n                    style={{ backgroundColor: user.avatar }}\r\n                    icon={<UserOutlined />}\r\n                  ></Avatar>\r\n                  <div>\r\n                    <a> {user.username}</a>\r\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\r\n                  </div>\r\n                </Space>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"status\" label=\"状态\">\r\n          <Radio.Group name=\"radiogroup\" onChange={handleChange}>\r\n            <Radio value=\"todo\">未开始</Radio>\r\n            <Radio value=\"doing\">进行中</Radio>\r\n            <Radio value=\"done\">已完成</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        {status !== 'todo' ? (\r\n          <Form.Item\r\n            name=\"startDate\"\r\n            label=\"开始日期\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请选择开始日期！',\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker />\r\n          </Form.Item>\r\n        ) : null}\r\n        {status === 'done' ? (\r\n          <Form.Item\r\n            name=\"endDate\"\r\n            label=\"完成日期\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请选择完成日期！',\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker />\r\n          </Form.Item>\r\n        ) : null}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport List from '../../../components/task/list';\r\nimport Modal from '../../../components/task/edit-modal';\r\nimport { reqMemberList, reqEditTask } from '../../../api/index';\r\nexport default function Task(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [task, setTask] = useState({ users: [] });\r\n  const [users, setUsers] = useState([]);\r\n  const [data, setData] = useState();\r\n  function showModal(task) {\r\n    setVisible(true);\r\n    setTask(task);\r\n  }\r\n\r\n  function handleCancel() {\r\n    setVisible(false);\r\n  }\r\n\r\n  function handleOk(values) {\r\n    values.startDate = values.startDate\r\n      ? values.startDate.format('YYYY-MM-DD')\r\n      : null;\r\n    values.endDate = values.endDate\r\n      ? values.endDate.format('YYYY-MM-DD')\r\n      : null;\r\n    values.users = users.filter(\r\n      (user) => values.selectedUsers.indexOf(user._id) !== -1\r\n    );\r\n    const _id = task._id;\r\n    reqEditTask({ ...task, ...values }).then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const taskList = data.map((task) =>\r\n          task._id === _id ? result.data : task\r\n        );\r\n        props.updateTasks(taskList);\r\n        setVisible(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (users.length === 0) {\r\n      reqMemberList().then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          setUsers(result.data);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      <List {...props} data={data} onItemEditClick={showModal}></List>\r\n      <Modal\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        task={task}\r\n        users={[...task.users, ...users]}\r\n      ></Modal>\r\n    </>\r\n  );\r\n}\r\n","import Cookies from 'js-cookie';\r\nexport function getRedirectTo() {\r\n  const projectId = Cookies.get('projectId');\r\n  return projectId ? '/project/profile' : '/';\r\n}\r\n\r\nexport function sortTasks(tasks) {\r\n  let sortedTasks = {\r\n    todo: [],\r\n    doing: [],\r\n    done: [],\r\n  };\r\n  if (Array.isArray(tasks)) {\r\n    tasks.forEach((task) => {\r\n      sortedTasks[task.status].push(task);\r\n    });\r\n  }\r\n  return sortedTasks;\r\n}\r\n\r\nexport const status = {\r\n  todo: {\r\n    color: '#4a9ff9',\r\n    display: '未开始',\r\n  },\r\n  doing: {\r\n    color: '#f9944a',\r\n    display: '进行中',\r\n  },\r\n  done: {\r\n    color: '#2ac06d',\r\n    display: '已完成',\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { Card, Radio, Empty } from 'antd';\r\nimport { MenuOutlined, ProjectOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport Column from '../../../components/board/column';\r\nimport TaskList from '../task/task';\r\nimport { reqTaskList } from '../../../api/index';\r\nimport { sortTasks, status } from '../../../utils/index';\r\n\r\nexport default class Board extends Component {\r\n  state = {\r\n    value: 'board',\r\n    title: '',\r\n    // originalTasks: [],\r\n    tasks: {\r\n      todo: [],\r\n      doing: [],\r\n      done: [],\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const params = this.props.match.params;\r\n    //从菜单直接点进来，没有type和id\r\n    const type = params.type || 'sprint';\r\n    const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\r\n\r\n    const title = (type === 'sprint' ? '阶段' : '需求') + id;\r\n    this.setState({\r\n      title,\r\n    });\r\n\r\n    reqTaskList({ type, id }).then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const originalTasks = result.data;\r\n        const tasks = sortTasks(originalTasks);\r\n        // console.log(tasks);\r\n        this.setState({\r\n          tasks,\r\n          // originalTasks,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  updateTasks = (tasks) => {\r\n    this.setState({\r\n      tasks: sortTasks(tasks),\r\n    });\r\n  };\r\n\r\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\r\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\r\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\r\n\r\n  //方案2\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const start = source.droppableId;\r\n    const finish = destination.droppableId;\r\n\r\n    //查询被拖拽的task\r\n    const draggedTask = this.state.tasks[start].find(\r\n      (task) => task._id === draggableId\r\n    );\r\n    // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\r\n    //   (task) => task._id === draggableId\r\n    // );\r\n\r\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\r\n    draggedTask.status = finish;\r\n    if (finish === 'todo') {\r\n      draggedTask.startDate = null;\r\n      draggedTask.endDate = null;\r\n    }\r\n    if (finish === 'doing') {\r\n      draggedTask.startDate = moment().format('YYYY-MM-DD');\r\n      draggedTask.endDate = null;\r\n    }\r\n    if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\r\n    // draggedTaskInOriginalTasks.status = finish;\r\n\r\n    const { tasks } = this.state;\r\n    const startTasks = tasks[start];\r\n    const finishTasks = tasks[finish];\r\n\r\n    startTasks.splice(source.index, 1);\r\n    finishTasks.splice(destination.index, 0, draggedTask);\r\n\r\n    this.setState({\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasks, value, title } = this.state;\r\n    const tasksOfList = Object.values(tasks).flat();\r\n\r\n    const boardView =\r\n      tasksOfList.length === 0 ? (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n      ) : (\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div style={{ display: 'flex' }}>\r\n            {Object.keys(status).map((c, index) => (\r\n              <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\r\n            ))}\r\n          </div>\r\n        </DragDropContext>\r\n      );\r\n    const listView = (\r\n      <TaskList\r\n        data={tasksOfList}\r\n        status={status}\r\n        updateTasks={this.updateTasks}\r\n      ></TaskList>\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        title={title}\r\n        extra={\r\n          <Radio.Group\r\n            buttonStyle=\"solid\"\r\n            onChange={this.onChange}\r\n            value={this.state.value}\r\n          >\r\n            <Radio.Button value=\"board\">\r\n              <ProjectOutlined />\r\n            </Radio.Button>\r\n            <Radio.Button value=\"list\">\r\n              <MenuOutlined />\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        }\r\n      >\r\n        {value === 'board' ? boardView : listView}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Form, Select, Modal, Avatar, Space } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function MemberModal({\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n  member,\r\n  users,\r\n  roles,\r\n}) {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={member ? '编辑成员' : '添加成员'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"_id\"\r\n          label=\"项目成员\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择项目成员！',\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder=\"选择成员\"\r\n            optionLabelProp=\"title\"\r\n            optionFilterProp=\"title\"\r\n          >\r\n            {users.map((user, index) => (\r\n              <Option key={index} value={user._id} title={user.username}>\r\n                <Space>\r\n                  <Avatar\r\n                    style={{ backgroundColor: user.avatar }}\r\n                    icon={<UserOutlined />}\r\n                  ></Avatar>\r\n                  <div>\r\n                    <a> {user.username}</a>\r\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\r\n                  </div>\r\n                </Space>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"roles\"\r\n          label=\"成员角色\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择成员角色！',\r\n            },\r\n          ]}\r\n        >\r\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\r\n            {roles.map((role, index) => (\r\n              <Option key={index} value={role.name}>\r\n                {role.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport MemberModal from '../../../components/member/modal';\r\nimport { reqMemberList, reqUserList } from '../../../api/index';\r\n\r\nconst roleOptions = [\r\n  {\r\n    color: '#f56a00',\r\n    name: '项目经理',\r\n  },\r\n  {\r\n    color: '#7265e6',\r\n    name: '前端开发',\r\n  },\r\n  {\r\n    color: '#00a2ae',\r\n    name: '后端开发',\r\n  },\r\n  {\r\n    color: '#ffbf00',\r\n    name: 'UI设计',\r\n  },\r\n];\r\n\r\nexport default class Member extends Component {\r\n  state = {\r\n    users: [],\r\n    members: [],\r\n    visible: false,\r\n  };\r\n  columns = [\r\n    {\r\n      title: '成员',\r\n      dataIndex: 'username',\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Avatar\r\n            style={{ backgroundColor: record.avatar }}\r\n            icon={<UserOutlined />}\r\n          ></Avatar>\r\n          <a>{text}</a>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: '邮箱',\r\n      dataIndex: 'email',\r\n      render: (text) => (\r\n        <span style={{ color: 'rgba(0,0,0,.45)' }}>{text}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: '角色',\r\n      dataIndex: 'roles',\r\n      render: (roles) =>\r\n        roles.map((role, index) => (\r\n          <Tag key={index} color={role.color}>\r\n            {role.name}\r\n          </Tag>\r\n        )),\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: '_id',\r\n      key: 'action',\r\n      render: (_id) => (\r\n        <Popconfirm\r\n          placement=\"left\"\r\n          title=\"确认删除该成员？\"\r\n          onConfirm={() => this.handleDel(_id)}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <a key=\"delete\">\r\n            <DeleteOutlined />\r\n          </a>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  handleDel = (id) => {\r\n    const members = this.state.members.filter((member) => member._id !== id);\r\n    this.setState({ members });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = (values) => {\r\n    const user = this.state.users.find((user) => user._id === values._id);\r\n    const users = this.state.users.filter((user) => user._id !== values._id);\r\n    const roles = roleOptions.filter((role) => {\r\n      return values.roles.findIndex((value) => role.name === value) !== -1;\r\n    });\r\n    const newMember = {\r\n      ...user,\r\n      roles,\r\n    };\r\n    const members = [newMember, ...this.state.members];\r\n    this.setState({\r\n      members,\r\n      users,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqMemberList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const members = result.data;\r\n        this.setState({\r\n          members,\r\n        });\r\n      }\r\n    });\r\n\r\n    //获取所有用户列表（添加用户时用）\r\n    reqUserList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const users = result.data;\r\n        this.setState({\r\n          users,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目成员\"\r\n          extra={\r\n            <a onClick={this.showModal}>\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            showHeader={false}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            columns={this.columns}\r\n            dataSource={this.state.members}\r\n          />\r\n        </Card>\r\n        <MemberModal\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          member={null}\r\n          users={this.state.users}\r\n          roles={roleOptions}\r\n        ></MemberModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Modal, Form, Input, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default function TaskModal({ visible, onOk, onCancel }) {\r\n  const [form] = Form.useForm();\r\n  //   useEffect(() => {\r\n  //     form.resetFields();\r\n  //   });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title=\"新增任务\"\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        initialValues={{ createDate: moment() }}\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"content\"\r\n          label=\"任务内容\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符的任务内容！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"createDate\" label=\"创建日期\">\r\n          <DatePicker />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Modal, Form, Input, DatePicker, Radio } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default function StoryModal({ visible, onOk, onCancel, story }) {\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (story) {\r\n      const date = moment(story.date);\r\n      form.setFieldsValue({ ...story, date });\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={story ? '编辑需求' : '新增需求'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        initialValues={{ date: moment(), priority: 0 }}\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"role\"\r\n          label=\"角色\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入角色！',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"activity\"\r\n          label=\"行为\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"businessValue\"\r\n          label=\"目的\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"date\"\r\n          label=\"提出日期\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择提出日期！',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item name=\"priority\" label=\"优先级\">\r\n          <Radio.Group name=\"radiogroup\">\r\n            <Radio value={0}>低</Radio>\r\n            <Radio value={1}>中</Radio>\r\n            <Radio value={2}>高</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  EditOutlined,\r\n  PlusCircleOutlined,\r\n  ForkOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\nimport AddTaskModal from '../../../components/task/add-modal';\r\nimport StoryModal from '../../../components/story/modal';\r\nimport TaskList from '../task/task';\r\nimport {\r\n  reqCreateTask,\r\n  reqCreateStory,\r\n  reqStoryList,\r\n  reqEditStory,\r\n} from '../../../api/index';\r\n\r\nimport { sortTasks, status } from '../../../utils/index';\r\n\r\nconst { Column } = Table;\r\n\r\nconst priority = [\r\n  {\r\n    color: '#2ac06d',\r\n    display: '低',\r\n  },\r\n  {\r\n    color: '#f9944a',\r\n    display: '中',\r\n  },\r\n  {\r\n    color: '#ff4d4f',\r\n    display: '高',\r\n  },\r\n];\r\n\r\nexport default class Story extends Component {\r\n  state = {\r\n    storyModalVisible: false,\r\n    taskModalVisible: false,\r\n    current: null,\r\n    storyList: [],\r\n  };\r\n  showStoryModal = (current) => {\r\n    this.setState({\r\n      storyModalVisible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  showTaskModal = (current) => {\r\n    this.setState({\r\n      taskModalVisible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  handleStoryCancel = (e) => {\r\n    this.setState({\r\n      storyModalVisible: false,\r\n    });\r\n  };\r\n\r\n  handleTaskCancel = (e) => {\r\n    this.setState({\r\n      taskModalVisible: false,\r\n    });\r\n  };\r\n\r\n  handleTaskOk = (values) => {\r\n    values.createDate = values.createDate.format('YYYY-MM-DD');\r\n    reqCreateTask(values).then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const storyList = this.state.storyList.map((story) => {\r\n          if (story._id === this.state.current._id) {\r\n            story.tasks.todo.push(result.data);\r\n          }\r\n          return story;\r\n        });\r\n        this.setState({\r\n          storyList,\r\n          taskModalVisible: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleStoryOk = (values) => {\r\n    const current = this.state.current;\r\n    const _id = current ? current._id : '';\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n\r\n    if (_id) {\r\n      //编辑\r\n      reqEditStory({ ...values, _id }).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          const storyList = this.state.storyList.map((story) =>\r\n            story._id === _id ? { ...story, ...result.data } : story\r\n          );\r\n          this.setState({\r\n            storyList,\r\n            storyModalVisible: false,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      reqCreateStory(values).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          this.setState({\r\n            storyList: [result.data, ...this.state.storyList],\r\n            storyModalVisible: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqStoryList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        result.data.forEach((story) => {\r\n          const tasks = story.tasks;\r\n          story.tasks = sortTasks(tasks);\r\n        });\r\n        this.setState({\r\n          storyList: result.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      taskModalVisible,\r\n      storyModalVisible,\r\n      storyList,\r\n      current,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目需求\"\r\n          extra={\r\n            <a\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.showStoryModal();\r\n              }}\r\n            >\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={storyList}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            expandable={{\r\n              expandedRowRender: (record) => {\r\n                const data = Object.values(record.tasks).flat();\r\n                return (\r\n                  <TaskList\r\n                    data={data}\r\n                    status={status}\r\n                    size=\"small\"\r\n                    editable={false}\r\n                  ></TaskList>\r\n                );\r\n              },\r\n              rowExpandable: (record) =>\r\n                Object.values(record.tasks).flat().length > 0,\r\n            }}\r\n          >\r\n            <Column\r\n              width=\"80px\"\r\n              title=\"优先级\"\r\n              dataIndex=\"priority\"\r\n              key=\"priority\"\r\n              render={(value) => {\r\n                const p = priority[value];\r\n                return (\r\n                  <Tag\r\n                    style={{ width: '40px', textAlign: 'center' }}\r\n                    color={p.color}\r\n                  >\r\n                    {p.display}\r\n                  </Tag>\r\n                );\r\n              }}\r\n            />\r\n            <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\r\n            <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\r\n            <Column\r\n              title=\"目的\"\r\n              dataIndex=\"businessValue\"\r\n              key=\"businessValue\"\r\n              progress\r\n            />\r\n\r\n            <Column\r\n              title=\"任务进度\"\r\n              dataIndex=\"_id\"\r\n              render={(id, record) => {\r\n                return (\r\n                  <Link to={`/project/board/story/${id}`}>\r\n                    <TaskProgress\r\n                      todo={record.tasks.todo.length}\r\n                      doing={record.tasks.doing.length}\r\n                      done={record.tasks.done.length}\r\n                    />\r\n                  </Link>\r\n                );\r\n              }}\r\n            />\r\n            <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\r\n            <Column\r\n              title=\"操作\"\r\n              key=\"_id\"\r\n              render={(id, record) => (\r\n                <>\r\n                  <a onClick={() => this.showStoryModal(record)}>\r\n                    <EditOutlined />\r\n                  </a>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={() => this.showTaskModal(record)}>\r\n                    <ForkOutlined />\r\n                  </a>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n        </Card>\r\n\r\n        <AddTaskModal\r\n          visible={taskModalVisible}\r\n          onOk={this.handleTaskOk}\r\n          onCancel={this.handleTaskCancel}\r\n        ></AddTaskModal>\r\n        <StoryModal\r\n          visible={storyModalVisible}\r\n          onOk={this.handleStoryOk}\r\n          onCancel={this.handleStoryCancel}\r\n          story={current}\r\n        ></StoryModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Transfer, Table, Modal } from 'antd';\r\nexport default function TaskTransfer({\r\n  columns,\r\n  visible,\r\n  onCancel,\r\n  onOk,\r\n  ...restProps\r\n}) {\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title=\"导入任务\"\r\n      width={1200}\r\n      visible={visible}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n      onOk={onOk}\r\n      onCancel={onCancel}\r\n    >\r\n      <Transfer\r\n        rowKey={(record) => record._id}\r\n        {...restProps}\r\n        showSelectAll={false}\r\n      >\r\n        {({\r\n          filteredItems,\r\n          onItemSelectAll,\r\n          onItemSelect,\r\n          selectedKeys: listSelectedKeys,\r\n        }) => {\r\n          const rowSelection = {\r\n            onSelectAll(selected, selectedRows) {\r\n              const treeSelectedKeys = selectedRows.map(({ _id }) => _id);\r\n              onItemSelectAll(\r\n                selected ? treeSelectedKeys : listSelectedKeys,\r\n                selected\r\n              );\r\n            },\r\n            onSelect({ _id }, selected) {\r\n              onItemSelect(_id, selected);\r\n            },\r\n            selectedRowKeys: listSelectedKeys,\r\n          };\r\n\r\n          return (\r\n            <Table\r\n              pagination={false}\r\n              scroll={{ y: 300 }}\r\n              rowSelection={rowSelection}\r\n              rowKey=\"_id\"\r\n              columns={columns}\r\n              dataSource={filteredItems}\r\n              size=\"small\"\r\n              onRow={({ _id }) => ({\r\n                onClick: () => {\r\n                  onItemSelect(_id, !listSelectedKeys.includes(_id));\r\n                },\r\n              })}\r\n            />\r\n          );\r\n        }}\r\n      </Transfer>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as types from './action-types';\r\nimport * as api from '../../api';\r\n\r\nconst receiveSprints = (sprints) => ({\r\n  type: types.RECEIVE_SPRINTS,\r\n  data: sprints,\r\n});\r\n\r\nconst createSprints = (sprint) => ({\r\n  type: types.CREATE_SPRINT,\r\n  data: sprint,\r\n});\r\n\r\nexport const createSprint = (sprint) => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqCreateSprint(sprint);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(createSprints(result.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSprints = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqSprintList();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(receiveSprints(result.data));\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Form, DatePicker, Modal, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { PlusCircleOutlined, AppstoreAddOutlined } from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\nimport TaskTransfer from '../../../components/task/transfer';\r\nimport TaskList from '../task/task';\r\nimport { createSprint, getSprints } from '../../../redux/sprints/actions';\r\nimport { sortTasks, status } from '../../../utils/index';\r\n\r\nimport {\r\n  reqTaskList,\r\n  reqSprintList,\r\n  reqCreateSprint,\r\n} from '../../../api/index';\r\n\r\nimport styles from './sprint.module.less';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Column } = Table;\r\n\r\nconst columns = [\r\n  {\r\n    dataIndex: 'content',\r\n    title: '任务',\r\n  },\r\n  {\r\n    dataIndex: 'createDate',\r\n    title: '创建时间',\r\n  },\r\n];\r\n\r\nclass Sprint extends Component {\r\n  state = {\r\n    visible: false,\r\n    transferVisible: false,\r\n    targetKeys: [],\r\n    sprintList: [],\r\n    tasks: [],\r\n    currentId: null,\r\n  };\r\n\r\n  onChange = (nextTargetKeys) => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showTransferModal = (id) => {\r\n    this.setState({\r\n      transferVisible: true,\r\n      targetKeys: [],\r\n      currentId: id,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleTransferCancel = (e) => {\r\n    this.setState({\r\n      transferVisible: false,\r\n    });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.form\r\n      .validateFields()\r\n      .then((value) => {\r\n        const rangeDate = value['rangeDate'];\r\n        const startDate = rangeDate[0].format('YYYY-MM-DD');\r\n        const endDate = rangeDate[1].format('YYYY-MM-DD');\r\n        return reqCreateSprint({ startDate, endDate });\r\n      })\r\n      .then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          const sprintList = [...this.state.sprintList, result.data];\r\n          this.setState({\r\n            visible: false,\r\n            sprintList,\r\n          });\r\n          this.form.resetFields();\r\n        }\r\n      })\r\n      .catch((info) => {\r\n        console.log('验证失败：', info);\r\n      });\r\n  };\r\n\r\n  handleTransferOk = () => {\r\n    const { targetKeys, currentId } = this.state;\r\n    if (targetKeys.length) {\r\n      const filterTasks = [];\r\n      const tasks = [];\r\n      this.state.tasks.forEach((task) => {\r\n        targetKeys.includes(task._id)\r\n          ? filterTasks.push(task)\r\n          : tasks.push(task);\r\n      });\r\n      const sprintList = this.state.sprintList.map((sprint) =>\r\n        sprint._id === currentId\r\n          ? {\r\n              ...sprint,\r\n              tasks: {\r\n                ...sprint.tasks,\r\n                todo: sprint.tasks.todo.concat(filterTasks),\r\n              },\r\n            }\r\n          : sprint\r\n      );\r\n      //todo:设置task的sprintId\r\n      this.setState({ sprintList, tasks, transferVisible: false });\r\n    } else {\r\n      this.setState({ transferVisible: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getSprints();\r\n    reqSprintList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        result.data.forEach((sprint) => {\r\n          const tasks = sprint.tasks;\r\n          sprint.tasks = sortTasks(tasks);\r\n        });\r\n        this.setState({\r\n          sprintList: result.data,\r\n        });\r\n      }\r\n    });\r\n    reqTaskList().then((res) => {\r\n      const result = res.data;\r\n      const tasks = result.data.filter((task) => task.status === 'todo');\r\n      if (result.code === 0) {\r\n        this.setState({\r\n          tasks,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { startDate, endDate } = this.props.project;\r\n\r\n    const { targetKeys, tasks, transferVisible, sprintList } = this.state;\r\n    // const sprints = this.props.sprints;\r\n    const length = sprintList.length;\r\n\r\n    let newStartDate = startDate;\r\n\r\n    if (length > 0) {\r\n      const lastEndDate = sprintList[length - 1].endDate;\r\n      newStartDate = moment(lastEndDate).add(1, 'days').format('YYYY-MM-DD');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目阶段\"\r\n          extra={\r\n            <a onClick={this.showModal}>\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={sprintList}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            rowClassName={(record) => {\r\n              return moment().isBetween(\r\n                record.startDate,\r\n                record.endDate,\r\n                null,\r\n                '[]'\r\n              )\r\n                ? styles.curSprint\r\n                : null;\r\n            }}\r\n            expandable={{\r\n              expandedRowRender: (record) => {\r\n                const data = Object.values(record.tasks).flat();\r\n                return (\r\n                  <TaskList\r\n                    data={data}\r\n                    status={status}\r\n                    size=\"small\"\r\n                    editable={false}\r\n                  ></TaskList>\r\n                );\r\n              },\r\n              rowExpandable: (record) =>\r\n                Object.values(record.tasks).flat().length > 0,\r\n            }}\r\n          >\r\n            <Column\r\n              title=\"阶段周期\"\r\n              key=\"date\"\r\n              render={(value, record) =>\r\n                `${record.startDate}~${record.endDate}`\r\n              }\r\n            />\r\n            <Column\r\n              title=\"任务进度\"\r\n              dataIndex=\"_id\"\r\n              render={(id, record) => {\r\n                return (\r\n                  <Link to={`/project/board/sprint/${id}`}>\r\n                    <TaskProgress\r\n                      todo={record.tasks.todo.length}\r\n                      doing={record.tasks.doing.length}\r\n                      done={record.tasks.done.length}\r\n                    />\r\n                  </Link>\r\n                );\r\n              }}\r\n            />\r\n            <Column\r\n              title=\"操作\"\r\n              dataIndex=\"_id\"\r\n              render={(id) => (\r\n                <>\r\n                  {/* <Link to=\"/project/board\">\r\n                    <ProjectOutlined />\r\n                  </Link>\r\n                  <Divider type=\"vertical\" /> */}\r\n                  <a\r\n                    onClick={() => {\r\n                      this.showTransferModal(id);\r\n                    }}\r\n                  >\r\n                    <AppstoreAddOutlined />\r\n                  </a>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n        </Card>\r\n\r\n        <Modal\r\n          title=\"新增阶段\"\r\n          width={480}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form ref={(el) => (this.form = el)}>\r\n            <Form.Item\r\n              name=\"rangeDate\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请选择阶段时间！',\r\n                },\r\n              ]}\r\n            >\r\n              <RangePicker\r\n                disabledDate={(currentDate) =>\r\n                  !currentDate.isBetween(newStartDate, endDate, 'day', '[]')\r\n                }\r\n                defaultPickerValue={[moment(newStartDate)]}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        <TaskTransfer\r\n          onCancel={this.handleTransferCancel}\r\n          visible={transferVisible}\r\n          dataSource={tasks}\r\n          targetKeys={targetKeys}\r\n          onOk={this.handleTransferOk}\r\n          onChange={this.onChange}\r\n          columns={columns}\r\n        ></TaskTransfer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // projectList: state.projectList,\r\n  project: state.project,\r\n  sprints: state.sprints,\r\n});\r\n\r\nconst mapDispatchToProps = { createSprint, getSprints };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport { testMessage } from '../../api/index';\r\n\r\nexport default class Test extends Component {\r\n  handleClick = () => {\r\n    testMessage();\r\n  };\r\n\r\n  render() {\r\n    return <Button onClick={this.handleClick}>测试请求拦截（全局消息）</Button>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Result } from 'antd';\r\n\r\nexport default () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    style={{\r\n      background: 'none',\r\n    }}\r\n    subTitle=\"页面不存在\"\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { Layout, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Sider from '../../components/sider/sider';\r\nimport Header from '../../components/header/header';\r\nimport MyProjects from '../my-projects/my-projects';\r\nimport Profile from '../project/profile/profile';\r\nimport Meeting from '../project/meeting/meeting';\r\nimport Board from '../project/board/board';\r\nimport Member from '../project/member/member';\r\nimport Story from '../project/story/story';\r\nimport Sprint from '../project/sprint/sprint';\r\nimport Test from '../test/test';\r\nimport NotFound from '../exception/not-found';\r\nimport { resetUser, getUser } from '../../redux/user/actions';\r\nimport { resetProject, getProject } from '../../redux/project/actions';\r\n\r\nconst { Content } = Layout;\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  navList = [\r\n    {\r\n      path: '/',\r\n      component: MyProjects,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: '/project/profile',\r\n      component: Profile,\r\n    },\r\n    {\r\n      path: '/project/member',\r\n      component: Member,\r\n    },\r\n    {\r\n      path: '/project/meeting',\r\n      component: Meeting,\r\n    },\r\n    {\r\n      path: '/project/story',\r\n      component: Story,\r\n    },\r\n    {\r\n      path: '/project/board',\r\n      component: Board,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: '/project/board/:type/:id',\r\n      component: Board,\r\n    },\r\n    {\r\n      path: '/project/sprint',\r\n      component: Sprint,\r\n    },\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n    },\r\n    {\r\n      component: NotFound,\r\n    },\r\n  ];\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    let that = this;\r\n    Modal.confirm({\r\n      title: '确认退出登录吗？',\r\n      icon: <ExclamationCircleOutlined />,\r\n      cancelText: '取消',\r\n      okText: '确定',\r\n      onOk() {\r\n        Cookies.remove('projectId');\r\n        Cookies.remove('userId');\r\n        that.props.resetUser();\r\n        that.props.resetProject();\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = Cookies.get('userId');\r\n    if (userId && !this.props.user._id) {\r\n      this.props.getUser();\r\n    }\r\n\r\n    const projectId = Cookies.get('projectId');\r\n    if (projectId && !this.props.project._id) {\r\n      this.props.getProject();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const userId = Cookies.get('userId');\r\n    const projectId = Cookies.get('projectId');\r\n    const visiable =\r\n      this.props.location.pathname === '/' && !projectId ? false : true;\r\n    if (!userId) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (visiable && !projectId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\r\n\r\n    return (\r\n      <Layout\r\n        style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\r\n      >\r\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Header\r\n            visiable={visiable}\r\n            projectName={this.props.project.projectName}\r\n            username={this.props.user.username}\r\n            collapsed={this.state.collapsed}\r\n            toggle={visiable ? this.toggle : null}\r\n            logout={this.logout}\r\n          />\r\n          <Content style={{ padding: '24px', minHeight: 'auto' }}>\r\n            <Switch>\r\n              {this.navList.map((nav, index) => (\r\n                <Route key={index} {...nav} />\r\n              ))}\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  project: state.project,\r\n});\r\n\r\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport locale from \"antd/es/locale/zh_CN\";\r\n\r\nimport store from \"./redux/store\";\r\nimport Login from \"./containers/login/login\";\r\nimport Register from \"./containers/register/register\";\r\nimport Main from \"./containers/main/main\";\r\n\r\nimport \"moment/locale/zh-cn\";\r\nimport \"./assets/less/index.less\";\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={locale}>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route component={Main} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Provider>\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}