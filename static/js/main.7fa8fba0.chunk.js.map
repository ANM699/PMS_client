{"version":3,"sources":["components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/task.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/form.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","containers/project/meeting/meeting.jsx","components/board/task.jsx","components/board/column.jsx","containers/project/board/board.jsx","containers/project/member/member.jsx","containers/project/story/story.jsx","containers/project/profile/profile.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js","containers/login/login.module.less"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","combineReducers","user","state","action","type","data","project","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","taskName","storyId","projectId","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","reqLogin","password","reqRegister","reqCreateProject","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","this","to","className","styles","container","content","main","wrapperCol","span","name","initialValues","remember","Item","message","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","response","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SnippetsOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","AreaChartOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","ProjectList","size","dataSource","renderItem","item","actions","EditOutlined","Meta","placement","onConfirm","okText","cancelText","RangePicker","DatePicker","ProjectForm","ref","formRef","labelCol","label","width","min","TextArea","rows","switchProject","resetProject","MyProjects","visible","projectList","showModal","setState","handleConfirm","push","handleOk","e","form","validateFields","then","value","rangeDate","format","res","resetFields","catch","info","handleCancel","marginBottom","PlusOutlined","onOk","onCancel","el","mapDispatchToProps","Meeting","Task","draggableId","task","provided","snapshot","innerRef","draggableProps","dragHandleProps","hoverable","textAlign","Group","users","avatar","Column","id","droppableId","taskList","droppableProps","tasks","Board","todo","doing","done","onDragEnd","destination","source","start","finish","draggedTask","find","status","startTasks","finishTasks","splice","Member","members","columns","dataIndex","render","text","record","color","roles","role","handleDel","DeleteOutlined","that","Modal","confirm","ExclamationCircleOutlined","filter","member","showHeader","pagination","rowKey","Story","Profile","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","top","left","right","bottom","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.7fa8fba0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3cggNLZEWOO97z_1lNBvEc\"};","import * as types from \"./action-types\";\n\nconst initUser = {\n  username: \"\",\n  email: \"\",\n  msg: \"\",\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return {\n        ...action.data,\n      };\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  // projectList,\n});\n","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from \"mockjs\";\nimport Cookies from \"js-cookie\";\n\nconst api = \"http://mock\";\n\nMock.mock(`${api}/users/login`, \"post\", function (options) {\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, \"post\", function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === \"guoyunxiang\") {\n    return {\n      code: 1,\n      msg: \"用户名已经被注册\",\n    };\n  }\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock(\"@last\"),\n      _id: Cookies.get(\"userId\"),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, \"get\", function () {\n  const { data } = Mock.mock({\n    \"data|5-10\": [\n      {\n        _id: \"@id\",\n        projectName: \"@ctitle\",\n        description: \"@cparagraph(2,3)\",\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: '1000000000',\n      //   projectName: 'BesTV互联网电视助手',\n      //   description: '通过微信小程序实现登录，点播，聊天等大小屏互动功能。',\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock(\"@id\"),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock(\"@ctitle\"),\n      description: Mock.mock(\"@cparagraph(2,3)\"),\n      _id: Cookies.get(\"projectId\"),\n    },\n  };\n});\n\nMock.mock(`${api}/tasks/list`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|10-20\": [\n        {\n          _id: \"@id\",\n          taskName: \"@csentence\",\n          \"status|1\": [\"todo\", \"doing\", \"done\"],\n          storyId: \"@id\",\n          projectId: Cookies.get(\"projectId\"),\n          \"users|0-5\": [\n            {\n              _id: \"@id\",\n              \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n              username: \"@last\",\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|8-12\": [\n        {\n          _id: \"@id\",\n          \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n          username: \"@last\",\n          email: \"@email\",\n          \"roles|1-4\": [\n            {\n              \"color|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\", \"#ffbf00\"],\n              \"name|1\": [\"项目经理\", \"前端开发\", \"后端开发\", \"UI设计\"],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n","import axios from \"axios\";\nimport \"../mock/mock\";\n\nconst api = \"http://mock\";\n\nexport default function ajax(url = \"\", data = {}, type = \"GET\") {\n  if (type === \"GET\") {\n    let dataStr = \"\";\n    Object.keys(data).forEach((key) => {\n      dataStr += key + \"=\" + data[key] + \"&\";\n    });\n    if (dataStr) {\n      dataStr = \"?\" + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from \"./ajax\";\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax(\"/users/login\", { username, password }, \"POST\");\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax(\"/users/register\", { username, password }, \"POST\");\n};\n\nexport const reqUser = () => {\n  return ajax(\"/users/user\");\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    \"/projects/create\",\n    { projectName, startDate, endDate, description },\n    \"POST\"\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax(\"/projects/project\");\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax(\"/projects/list\");\n};\n\n//根据projectId获取任务列表\nexport const reqTaskList = () => {\n  return ajax(\"/tasks/list\");\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax(\"/projects/members\");\n};\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./login.module.less\";\n\nimport { login } from \"../../redux/user/actions\";\n\nclass Login extends Component {\n  onFinish = (user) => {\n    this.props.login(user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toRegister = () => {\n    this.props.history.replace(\"/register\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    登录\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\n                    注册账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"../login/login.module.less\";\n\nimport { register } from \"../../redux/user/actions\";\n\nclass Register extends Component {\n  onFinish = (user) => {\n    this.props.register(user);\n    console.log(\"Success:\", user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toLogin = () => {\n    this.props.history.replace(\"/login\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password2\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请再次输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    注册\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\n                    已有账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  AreaChartOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./sider.module.less\";\n\nclass Sider extends Component {\n  static propTypes = {\n    collapsed: PropTypes.bool.isRequired,\n  };\n\n  menuList = [\n    // 包含所有导航组件的相关信息数据\n    {\n      path: \"/project/profile\",\n      title: \"项目状态\",\n      icon: <ProfileOutlined />,\n    },\n    {\n      path: \"/project/member\",\n      title: \"成员管理\",\n      icon: <TeamOutlined />,\n    },\n    {\n      path: \"/project/meeting\",\n      title: \"会议纪要\",\n      icon: <SnippetsOutlined />,\n    },\n    {\n      path: \"/project/story\",\n      title: \"用户故事\",\n      icon: <SolutionOutlined />,\n    },\n    {\n      path: \"\",\n      title: \"项目阶段（冲刺周期列表）\",\n      icon: <CarryOutOutlined />,\n    },\n    {\n      path: \"/project/board\",\n      title: \"任务看板\",\n      icon: <ProjectOutlined />,\n    },\n    {\n      path: \"\",\n      title: \"燃尽图\",\n      icon: <AreaChartOutlined />,\n    },\n  ];\n\n  render() {\n    const visiable = this.props.visiable;\n    const currentPath = this.props.history.location.pathname;\n    const selectedMenu = this.menuList\n      .findIndex((menu) => menu.path === currentPath)\n      .toString();\n    // if (!visiable) return null;\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible\n        collapsed={this.props.collapsed}\n        className={styles.sider}\n        style={{\n          display: visiable ? \"\" : \"none\",\n        }}\n      >\n        <div className={styles.logo}>PMS</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n          {this.menuList.map((menu, index) => (\n            <Menu.Item\n              key={index}\n              icon={menu.icon}\n              onClick={() => {\n                if (menu.path) this.props.history.replace(menu.path);\n              }}\n            >\n              {menu.title}\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from \"react\";\nimport { Layout, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./header.module.less\";\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {React.createElement(\n        props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n        {\n          className: styles.trigger,\n          onClick: props.toggle,\n        }\n      )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: \"#00a2ae\", marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { List, Popconfirm } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst ProjectList = (props) => {\n  const data = props.data;\n  return (\n    <List\n      size=\"large\"\n      dataSource={data}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <a key=\"edit\">\n              <EditOutlined />\n            </a>,\n          ]}\n        >\n          <List.Item.Meta\n            title={\n              <Popconfirm\n                placement=\"right\"\n                title=\"选择并切换至该项目？\"\n                onConfirm={() => props.onConfirm(item)}\n                okText=\"确认\"\n                cancelText=\"取消\"\n              >\n                <a>{item.projectName}</a>\n              </Popconfirm>\n            }\n            description={item.description}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport { Form, Input, DatePicker } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nconst ProjectForm = (props) => {\n  return (\n    <Form\n      ref={props.formRef}\n      labelCol={{\n        span: 7,\n      }}\n      wrapperCol={{\n        span: 13,\n      }}\n    >\n      <Form.Item\n        name=\"projectName\"\n        label=\"项目名称\"\n        rules={[\n          {\n            required: true,\n            message: \"请输入项目名称！\",\n          },\n        ]}\n      >\n        <Input placeholder=\"请输入\" />\n      </Form.Item>\n      <Form.Item\n        name=\"rangeDate\"\n        label=\"项目时间\"\n        rules={[\n          {\n            required: true,\n            message: \"请选择选择项目时间！\",\n          },\n        ]}\n      >\n        <RangePicker\n          style={{\n            width: \"100%\",\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"description\"\n        label=\"项目简介\"\n        rules={[\n          {\n            required: true,\n            message: \"请输入至少五个字符的项目简介！\",\n            min: 5,\n          },\n        ]}\n      >\n        <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ProjectForm;\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { Card, Button, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport ProjectList from \"../../components/project/list\";\nimport ProjectForm from \"../../components/project/form\";\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from \"../../redux/project/actions\";\nimport { reqProjectList, reqCreateProject } from \"../../api/index\";\n\nclass MyProjects extends Component {\n  state = {\n    visible: false,\n    projectList: [],\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleConfirm = (item) => {\n    this.props.switchProject(item);\n    Cookies.set(\"projectId\", item._id);\n    this.props.history.push(\"/project/profile\");\n  };\n\n  handleOk = (e) => {\n    this.form\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value[\"rangeDate\"];\n        value.startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n        value.endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n        // this.props.createProject(value);\n        reqCreateProject(value).then((res) => {\n          const result = res.data;\n          if (result.code === 0) {\n            this.setState({\n              projectList: [result.data, ...this.state.projectList],\n            });\n          }\n        });\n        this.form.resetFields();\n        this.setState({\n          visible: false,\n        });\n      })\n      .catch((info) => {\n        console.log(\"验证失败：\", info);\n      });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      // console.log(result);\n      if (result.code === 0) {\n        this.setState({\n          projectList: result.data,\n        });\n      }\n    });\n    // this.props.getProjectList();\n  }\n\n  render() {\n    // const data = this.props.projectList;\n    const data = this.state.projectList;\n    return (\n      <div>\n        <Card title=\"我的项目\">\n          <Button\n            type=\"dashed\"\n            style={{\n              width: \"100%\",\n              marginBottom: 8,\n            }}\n            onClick={this.showModal}\n          >\n            <PlusOutlined />\n            创建项目\n          </Button>\n          <ProjectList data={data} onConfirm={this.handleConfirm}></ProjectList>\n        </Card>\n\n        <Modal\n          title=\"创建项目\"\n          width={640}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"保存\"\n          cancelText=\"取消\"\n        >\n          <ProjectForm formRef={(el) => (this.form = el)}></ProjectForm>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n","import React, { Component } from \"react\";\n\nexport default class Meeting extends Component {\n  render() {\n    return <div>meeting</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Card, Avatar, Tooltip } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport styles from \"./task.module.less\";\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : '',\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// });\n\nexport default class Task extends Component {\n  render() {\n    return (\n      <Draggable draggableId={this.props.task._id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className={styles.container}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            // style={getItemStyle(\n            //   snapshot.isDragging,\n            //   provided.draggableProps.style\n            // )}\n          >\n            <Card hoverable={true}>\n              <p>{this.props.task.taskName}</p>\n              <div style={{ textAlign: \"right\" }}>\n                <Avatar.Group>\n                  {this.props.task.users.map((user) => (\n                    <Tooltip\n                      key={user._id}\n                      title={user.username}\n                      placement=\"top\"\n                    >\n                      <Avatar\n                        style={{ backgroundColor: user.avatar }}\n                        icon={<UserOutlined />}\n                      />\n                    </Tooltip>\n                  ))}\n                </Avatar.Group>\n              </div>\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Task from \"./task\";\n\nimport styles from \"./column.module.less\";\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? 'lightblue' : '',\n// });\n\nexport default class Column extends Component {\n  render() {\n    let backgroundColor;\n    switch (this.props.id) {\n      case \"todo\":\n        backgroundColor = \"#4a9ff9\";\n        break;\n      case \"doing\":\n        backgroundColor = \"#f9944a\";\n        break;\n      case \"done\":\n        backgroundColor = \"#2ac06d\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <div className={styles.container}>\n        <h3 className={styles.title} style={{ backgroundColor }}>\n          {this.props.title}\n        </h3>\n        <Droppable droppableId={this.props.id}>\n          {(provided) => (\n            <div\n              className={styles.taskList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              // style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.props.tasks.map((task, index) => (\n                <Task key={task._id} task={task} index={index} />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nimport Column from \"../../../components/board/column\";\nimport { reqTaskList } from \"../../../api/index\";\n\nexport default class Board extends Component {\n  state = {\n    tasks: {\n      todo: [],\n      doing: [],\n      done: [],\n    },\n  };\n\n  componentDidMount() {\n    reqTaskList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const tasks = this.state.tasks;\n        result.data.forEach((task) => {\n          tasks[task.status].push(task);\n        });\n        // console.log(tasks);\n        this.setState({\n          tasks,\n        });\n      }\n    });\n  }\n\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n  //方案2\n  onDragEnd = (result) => {\n    console.log(result);\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = source.droppableId;\n    const finish = destination.droppableId;\n\n    //查询被拖拽的task\n    const draggedTask = this.state.tasks[start].find(\n      (task) => task._id === draggableId\n    );\n\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n    draggedTask.status = finish;\n\n    const { tasks } = this.state;\n    const startTasks = tasks[start];\n    const finishTasks = tasks[finish];\n\n    startTasks.splice(source.index, 1);\n    finishTasks.splice(destination.index, 0, draggedTask);\n\n    this.setState({\n      tasks,\n    });\n  };\n  render() {\n    const { tasks } = this.state;\n    return (\n      // <DragDropContext onDragEnd={this.onDragEnd}>\n      //   <div style={{ display: 'flex' }}>\n      //     {this.state.columnOrder.map((columnId) => {\n      //       const column = this.state.columns[columnId];\n      //       const tasks = column.taskIds.map(\n      //         (taskId) => this.state.tasks[taskId]\n      //       );\n      //       return <Column key={column.id} column={column} tasks={tasks} />;\n      //     })}\n      //   </div>\n      // </DragDropContext>\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div style={{ display: \"flex\" }}>\n          <Column title=\"未开始\" id=\"todo\" tasks={tasks.todo} />\n          <Column title=\"进行中\" id=\"doing\" tasks={tasks.doing} />\n          <Column title=\"已完成\" id=\"done\" tasks={tasks.done} />\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Avatar, Card, Tag, Space, Table, Modal } from \"antd\";\nimport {\n  UserOutlined,\n  DeleteOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport { reqMemberList } from \"../../../api/index\";\n\nexport default class Member extends Component {\n  state = {\n    members: [],\n  };\n  columns = [\n    {\n      title: \"成员\",\n      dataIndex: \"username\",\n      render: (text, record) => (\n        <Space>\n          <Avatar\n            style={{ backgroundColor: record.avatar }}\n            icon={<UserOutlined />}\n          ></Avatar>\n          {/* <div> */}\n          <a>{text}</a>\n          {/* <div style={{ color: \"rgba(0,0,0,.45)\" }}>{record.email}</div> */}\n          {/* </div> */}\n        </Space>\n      ),\n    },\n    {\n      title: \"邮箱\",\n      dataIndex: \"email\",\n      render: (text) => <div style={{ color: \"rgba(0,0,0,.45)\" }}>{text}</div>,\n    },\n    {\n      title: \"角色\",\n      dataIndex: \"roles\",\n      render: (roles) =>\n        roles.map((role, index) => (\n          <Tag key={index} color={role.color}>\n            {role.name}\n          </Tag>\n        )),\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"_id\",\n      key: \"action\",\n      render: (_id) => (\n        <a\n          onClick={() => {\n            this.handleDel(_id);\n          }}\n        >\n          <DeleteOutlined />\n        </a>\n      ),\n    },\n  ];\n\n  handleDel = (id) => {\n    var that = this;\n    Modal.confirm({\n      title: \"确认删除该成员吗？\",\n      icon: <ExclamationCircleOutlined />,\n      cancelText: \"取消\",\n      okText: \"确定\",\n      onOk() {\n        const members = that.state.members.filter((member) => member._id != id);\n        that.setState({ members });\n      },\n    });\n  };\n  componentDidMount() {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const members = result.data;\n        this.setState({\n          members,\n        });\n      }\n    });\n  }\n  render() {\n    return (\n      <Card>\n        <Table\n          showHeader={false}\n          pagination={false}\n          rowKey=\"_id\"\n          columns={this.columns}\n          dataSource={this.state.members}\n        />\n      </Card>\n\n      // <Card>\n      //   <List\n      //     itemLayout=\"horizontal\"\n      //     dataSource={this.state.members}\n      //     renderItem={(item) => (\n      //       <List.Item\n      //         actions={[\n      //           <a onClick={this.handleDel}>\n      //             <DeleteOutlined />\n      //           </a>,\n      //         ]}\n      //       >\n      //         <List.Item.Meta\n      //           avatar={\n      //             <Avatar\n      //               style={{ backgroundColor: item.avatar }}\n      //               icon={<UserOutlined />}\n      //             />\n      //           }\n      //           title={<a>{item.username}</a>}\n      //           description={item.email}\n      //         />\n      //         {item.roles.map((role, index) => (\n      //           <Tag key={index} color={role.color}>\n      //             {role.name}\n      //           </Tag>\n      //         ))}\n      //       </List.Item>\n      //     )}\n      //   />\n      // </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Story extends Component {\n  render() {\n    return <div>story</div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Profile extends Component {\n  render() {\n    return <div>profile</div>;\n  }\n}\n","import React from 'react';\nimport { Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    style={{\n      background: 'none',\n    }}\n    subTitle=\"页面不存在\"\n  />\n);\n","import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { Layout, Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\n\nimport Sider from \"../../components/sider/sider\";\nimport Header from \"../../components/header/header\";\nimport MyProjects from \"../my-projects/my-projects\";\nimport Meeting from \"../project/meeting/meeting\";\nimport Board from \"../project/board/board\";\nimport Member from \"../project/member/member\";\nimport Story from \"../project/story/story\";\nimport Profile from \"../project/profile/profile\";\nimport NotFound from \"../exception/not-found\";\nimport { resetUser, getUser } from \"../../redux/user/actions\";\nimport { resetProject, getProject } from \"../../redux/project/actions\";\n\nconst { Content } = Layout;\n\nclass Main extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  navList = [\n    {\n      path: \"/\",\n      component: MyProjects,\n      exact: true,\n    },\n    {\n      path: \"/project/profile\",\n      component: Profile,\n    },\n    {\n      path: \"/project/member\",\n      component: Member,\n    },\n    {\n      path: \"/project/meeting\",\n      component: Meeting,\n    },\n    {\n      path: \"/project/story\",\n      component: Story,\n    },\n    {\n      path: \"/project/board\",\n      component: Board,\n    },\n    {\n      component: NotFound,\n    },\n  ];\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  logout = () => {\n    let that = this;\n    Modal.confirm({\n      title: \"确认退出登录吗？\",\n      icon: <ExclamationCircleOutlined />,\n      cancelText: \"取消\",\n      okText: \"确定\",\n      onOk() {\n        Cookies.remove(\"projectId\");\n        Cookies.remove(\"userId\");\n        that.props.resetUser();\n        that.props.resetProject();\n      },\n    });\n  };\n\n  componentDidMount() {\n    const userId = Cookies.get(\"userId\");\n    if (userId && !this.props.user._id) {\n      this.props.getUser();\n    }\n\n    const projectId = Cookies.get(\"projectId\");\n    if (projectId && !this.props.project._id) {\n      this.props.getProject();\n    }\n  }\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const projectId = Cookies.get(\"projectId\");\n    const visiable =\n      this.props.location.pathname === \"/\" && !projectId ? false : true;\n    if (!userId) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (visiable && !projectId) {\n      return <Redirect to=\"/\" />;\n    }\n\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n    return (\n      <Layout\n        style={{ position: \"fixed\", top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <Header\n            projectName={this.props.project.projectName}\n            username={this.props.user.username}\n            collapsed={this.state.collapsed}\n            toggle={visiable ? this.toggle : null}\n            logout={this.logout}\n          />\n          <Content style={{ padding: \"24px\", minHeight: \"auto\" }}>\n            <Switch>\n              {this.navList.map((nav, index) => (\n                <Route key={index} {...nav} />\n              ))}\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};"],"sourceRoot":""}