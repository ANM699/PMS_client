{"version":3,"sources":["redux/sprints/action-types.js","redux/project/actions.js","components/sider/sider.module.less","redux/user/action-types.js","redux/user/reduces.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/store.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","containers/main/main.jsx","index.js","redux/project/action-types.js","containers/login/login.module.less","mock/mock.js","api/ajax.js","api/index.js","components/header/header.module.less"],"names":["RECEIVE_SPRINTS","CREATE_SPRINT","switchProject","project","type","types","data","resetProject","msg","getProject","dispatch","a","api","response","result","code","module","exports","AUTH_SUCCESS","RECEIVE_USER","ERROR_MSG","RESET_USER","initUser","username","email","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","authSuccess","errorMsg","resetUser","connect","login","password","history","userId","Cookies","get","to","className","styles","container","content","main","style","textAlign","wrapperCol","span","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","message","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","replace","register","password2","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","BugOutlined","withRouter","props","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","RegExp","test","toString","Sider","trigger","collapsible","collapsed","sider","display","logo","theme","mode","selectedKeys","map","index","key","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","MyProjects","lazy","Profile","Meeting","Board","Member","Story","Sprint","Test","NotFound","Content","Layout","navList","component","exact","mapDispatchToProps","getUser","useState","setCollapsed","useEffect","_id","projectId","position","top","left","right","bottom","minHeight","Modal","confirm","ExclamationCircleOutlined","cancelText","okText","onOk","remove","padding","fallback","marginTop","nav","ReactDOM","render","locale","store","Login","Register","Main","document","getElementById","SWITCH_PROJECT","RESET_PROJECT","Mock","mock","options","set","JSON","parse","body","storyId","createDate","this","status","tasks","todo","doing","done","activity","date","businessValue","ajax","url","dataStr","Object","keys","forEach","substring","length","axios","post","interceptors","use","res","error","reqLogin","reqRegister","reqUser","reqUserList","reqCreateProject","reqEditProject","reqProject","reqProjectList","reqTaskList","params","reqMemberList","reqSprintList","reqCreateSprint","reqStoryList","reqCreateTask","users","reqCreateStory","role","priority","reqEditStory","reqEditTask","task","testMessage"],"mappings":"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","file":"static/js/main.c1962ced.chunk.js","sourcesContent":["//获取当前项目冲刺周期\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\n//新增冲刺周期\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_2ePKAwmTfVHT5axtynuOpk\",\"logo\":\"_1_8MQr-m8toVMjgg8Sa7Nz\"};","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","import * as types from './action-types';\n\nconst initUser = {\n  username: '',\n  email: '',\n  msg: '',\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return action.data;\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","import * as types from './action-types';\n\nconst initSprints = [];\n\nexport function sprints(state = initSprints, action) {\n  switch (action.type) {\n    case types.RECEIVE_SPRINTS:\n      return action.data;\n    case types.CREATE_SPRINT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\nimport { sprints } from './sprints/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  sprints,\n  // projectList,\n});\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./login.module.less\";\n\nimport { login } from \"../../redux/user/actions\";\n\n// class Login extends Component {\n//   onFinish = (user) => {\n//     this.props.login(user);\n//   };\n\n//   onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n//   toRegister = () => {\n//     this.props.history.replace(\"/register\");\n//   };\n\n//   render() {\n//     const userId = Cookies.get(\"userId\");\n//     const { msg } = this.props.user;\n//     if (userId) {\n//       return <Redirect to=\"/\" />;\n//     }\n//     return (\n//       <div className={styles.container}>\n//         <div className={styles.content}>\n//           <div className={styles.main}>\n//             <Form\n//               wrapperCol={{ span: 24 }}\n//               name=\"loginForm\"\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={this.onFinish}\n//               onFinishFailed={this.onFinishFailed}\n//             >\n//               <Form.Item>\n//                 {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"username\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入用户名！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input\n//                   prefix={<UserOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"用户名\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item>\n//                 <Space>\n//                   <Button type=\"primary\" htmlType=\"submit\">\n//                     登录\n//                   </Button>\n//                   <Button htmlType=\"button\" onClick={this.toRegister}>\n//                     注册账号\n//                   </Button>\n//                 </Space>\n//               </Form.Item>\n//             </Form>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nconst Login = ({ login, history, user }) => {\n  const onFinish = (user) => {\n    login(user);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const toRegister = () => {\n    history.replace(\"/register\");\n  };\n\n  const userId = Cookies.get(\"userId\");\n  const { msg } = user;\n\n  if (userId) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <div className={styles.main}>\n          <h1 style={{ textAlign: \"center\" }}>项目管理系统</h1>\n          <Form\n            wrapperCol={{ span: 24 }}\n            name=\"loginForm\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item>\n              {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n            </Form.Item>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入用户名！\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"用户名\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请输入密码！\",\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  登录\n                </Button>\n                <Button htmlType=\"button\" onClick={toRegister}>\n                  注册账号\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Form, Input, Button, Alert, Space } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport Cookies from 'js-cookie';\n\nimport styles from '../login/login.module.less';\n\nimport { register } from '../../redux/user/actions';\n\n// class Register extends Component {\n//   onFinish = (user) => {\n//     this.props.register(user);\n//     console.log(\"Success:\", user);\n//   };\n\n//   onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n//   toLogin = () => {\n//     this.props.history.replace(\"/login\");\n//   };\n\n//   render() {\n//     const userId = Cookies.get(\"userId\");\n//     const { msg } = this.props.user;\n//     if (userId) {\n//       return <Redirect to=\"/\" />;\n//     }\n//     return (\n//       <div className={styles.container}>\n//         <div className={styles.content}>\n//           <div className={styles.main}>\n//             <Form\n//               wrapperCol={{ span: 24 }}\n//               name=\"loginForm\"\n//               initialValues={{\n//                 remember: true,\n//               }}\n//               onFinish={this.onFinish}\n//               onFinishFailed={this.onFinishFailed}\n//             >\n//               <Form.Item>\n//                 {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"username\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入用户名！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input\n//                   prefix={<UserOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"用户名\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item\n//                 name=\"password2\"\n//                 rules={[\n//                   {\n//                     required: true,\n//                     message: \"请再次输入密码！\",\n//                   },\n//                 ]}\n//               >\n//                 <Input.Password\n//                   prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//                   placeholder=\"密码\"\n//                 />\n//               </Form.Item>\n//               <Form.Item>\n//                 <Space>\n//                   <Button type=\"primary\" htmlType=\"submit\">\n//                     注册\n//                   </Button>\n//                   <Button htmlType=\"button\" onClick={this.toLogin}>\n//                     已有账号\n//                   </Button>\n//                 </Space>\n//               </Form.Item>\n//             </Form>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nconst Register = ({ register, history, user }) => {\n  const onFinish = (user) => {\n    register(user);\n    // console.log('Success:', user);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const toLogin = () => {\n    history.replace('/login');\n  };\n\n  const userId = Cookies.get('userId');\n  const { msg } = user;\n\n  if (userId) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <div className={styles.main}>\n          <Form\n            wrapperCol={{ span: 24 }}\n            name=\"loginForm\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item>\n              {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n            </Form.Item>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名！',\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"用户名\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入密码！',\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password2\"\n              rules={[\n                {\n                  required: true,\n                  message: '请再次输入密码！',\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Space>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  注册\n                </Button>\n                <Button htmlType=\"button\" onClick={toLogin}>\n                  已有账号\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  UserOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n  BugOutlined,\n} from '@ant-design/icons';\n\nimport styles from './sider.module.less';\n\nconst menuList = [\n  // 包含所有导航组件的相关信息数据\n  {\n    path: '/project/profile',\n    title: '项目状态',\n    icon: <ProfileOutlined />,\n  },\n  {\n    path: '/project/member',\n    title: '成员管理',\n    icon: <TeamOutlined />,\n  },\n  {\n    path: '/project/story',\n    title: '需求分析',\n    icon: <SolutionOutlined />,\n  },\n  {\n    path: '/project/sprint',\n    title: '阶段设置',\n    icon: <CarryOutOutlined />,\n  },\n  {\n    path: '/project/board',\n    title: '任务看板',\n    icon: <ProjectOutlined />,\n  },\n  {\n    path: '/project/meeting',\n    title: '会议纪要',\n    icon: <SnippetsOutlined />,\n  },\n  {\n    path: '/account',\n    title: '个人中心',\n    icon: <UserOutlined />,\n  },\n  {\n    path: '/test',\n    title: '功能测试',\n    icon: <BugOutlined />,\n  },\n];\n\nconst Sider = (props) => {\n  const visiable = props.visiable;\n  const currentPath = props.location.pathname;\n  let selectedMenu = menuList\n    .findIndex((menu) => new RegExp(menu.path).test(currentPath))\n    .toString();\n  // if (!visiable) return null;\n  return (\n    <Layout.Sider\n      trigger={null}\n      collapsible\n      collapsed={props.collapsed}\n      className={styles.sider}\n      style={{\n        display: visiable ? '' : 'none',\n      }}\n    >\n      <div className={styles.logo}>PMS</div>\n      <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n        {menuList.map((menu, index) => (\n          <Menu.Item\n            key={index}\n            icon={menu.icon}\n            onClick={() => {\n              if (menu.path) props.history.replace(menu.path);\n            }}\n          >\n            {menu.title}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Layout.Sider>\n  );\n};\n\nSider.propTypes = {\n  collapsed: PropTypes.bool.isRequired,\n};\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport styles from './header.module.less';\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {props.visiable &&\n        React.createElement(\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n          {\n            className: styles.trigger,\n            onClick: props.toggle,\n          }\n        )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, Component, lazy, Suspense } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { Layout, Modal, Spin } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport Sider from '../../components/sider/sider';\nimport Header from '../../components/header/header';\n// import MyProjects from '../my-projects/my-projects';\n// import Profile from '../project/profile/profile';\n// import Meeting from '../project/meeting/meeting';\n// import Board from '../project/board/board';\n// import Member from '../project/member/member';\n// import Story from '../project/story/story';\n// import Sprint from '../project/sprint/sprint';\n// import Test from '../test/test';\n// import NotFound from '../exception/not-found';\nimport { resetUser, getUser } from '../../redux/user/actions';\nimport { resetProject, getProject } from '../../redux/project/actions';\n\n//懒加载（代码分割）\nconst MyProjects = lazy(() => import('../my-projects/my-projects'));\nconst Profile = lazy(() => import('../project/profile/profile'));\nconst Meeting = lazy(() => import('../project/meeting/meeting'));\nconst Board = lazy(() => import('../project/board/board'));\nconst Member = lazy(() => import('../project/member/member'));\nconst Story = lazy(() => import('../project/story/story'));\nconst Sprint = lazy(() => import('../project/sprint/sprint'));\nconst Test = lazy(() => import('../test/test'));\nconst NotFound = lazy(() => import('../exception/not-found'));\n\nconst { Content } = Layout;\n\n// class Main extends Component {\n//   state = {\n//     collapsed: false,\n//   };\n\n//   navList = [\n//     {\n//       path: '/',\n//       component: MyProjects,\n//       exact: true,\n//     },\n//     {\n//       path: '/project/profile',\n//       component: Profile,\n//     },\n//     {\n//       path: '/project/member',\n//       component: Member,\n//     },\n//     {\n//       path: '/project/meeting',\n//       component: Meeting,\n//     },\n//     {\n//       path: '/project/story',\n//       component: Story,\n//     },\n//     {\n//       path: '/project/board',\n//       component: Board,\n//       exact: true,\n//     },\n//     {\n//       path: '/project/board/:type/:id',\n//       component: Board,\n//     },\n//     {\n//       path: '/project/sprint',\n//       component: Sprint,\n//     },\n//     {\n//       path: '/test',\n//       component: Test,\n//     },\n//     {\n//       component: NotFound,\n//     },\n//   ];\n\n//   toggle = () => {\n//     this.setState({\n//       collapsed: !this.state.collapsed,\n//     });\n//   };\n\n//   logout = () => {\n//     let that = this;\n//     Modal.confirm({\n//       title: '确认退出登录吗？',\n//       icon: <ExclamationCircleOutlined />,\n//       cancelText: '取消',\n//       okText: '确定',\n//       onOk() {\n//         Cookies.remove('projectId');\n//         Cookies.remove('userId');\n//         that.props.resetUser();\n//         that.props.resetProject();\n//       },\n//     });\n//   };\n\n//   componentDidMount() {\n//     const userId = Cookies.get('userId');\n//     if (userId && !this.props.user._id) {\n//       this.props.getUser();\n//     }\n\n//     const projectId = Cookies.get('projectId');\n//     if (projectId && !this.props.project._id) {\n//       this.props.getProject();\n//     }\n//   }\n\n//   render() {\n//     const userId = Cookies.get('userId');\n//     const projectId = Cookies.get('projectId');\n//     const visiable =\n//       this.props.location.pathname === '/' && !projectId ? false : true;\n//     if (!userId) {\n//       return <Redirect to=\"/login\" />;\n//     }\n//     if (visiable && !projectId) {\n//       return <Redirect to=\"/\" />;\n//     }\n\n//     // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n//     return (\n//       <Layout\n//         style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\n//       >\n//         <Sider visiable={visiable} collapsed={this.state.collapsed} />\n//         <Layout style={{ minHeight: '100vh' }}>\n//           <Header\n//             visiable={visiable}\n//             projectName={this.props.project.projectName}\n//             username={this.props.user.username}\n//             collapsed={this.state.collapsed}\n//             toggle={visiable ? this.toggle : null}\n//             logout={this.logout}\n//           />\n//           <Content style={{ padding: '24px', minHeight: 'auto' }}>\n//             <Switch>\n//               {this.navList.map((nav, index) => (\n//                 <Route key={index} {...nav} />\n//               ))}\n//             </Switch>\n//           </Content>\n//         </Layout>\n//       </Layout>\n//     );\n//   }\n// }\n\nconst navList = [\n  {\n    path: '/',\n    component: MyProjects,\n    exact: true,\n  },\n  {\n    path: '/project/profile',\n    component: Profile,\n  },\n  {\n    path: '/project/member',\n    component: Member,\n  },\n  {\n    path: '/project/meeting',\n    component: Meeting,\n  },\n  {\n    path: '/project/story',\n    component: Story,\n  },\n  {\n    path: '/project/board',\n    component: Board,\n    exact: true,\n  },\n  {\n    path: '/project/board/:type/:id',\n    component: Board,\n  },\n  {\n    path: '/project/sprint',\n    component: Sprint,\n  },\n  {\n    path: '/test',\n    component: Test,\n  },\n  {\n    component: NotFound,\n  },\n];\n\nconst Main = ({\n  resetUser,\n  resetProject,\n  getUser,\n  getProject,\n  location,\n  project,\n  user,\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  useEffect(() => {\n    const userId = Cookies.get('userId');\n    if (userId && !user._id) {\n      getUser();\n    }\n\n    const projectId = Cookies.get('projectId');\n    if (projectId && !project._id) {\n      getProject();\n    }\n  }, []);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const logout = () => {\n    Modal.confirm({\n      title: '确认退出登录吗？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        Cookies.remove('projectId');\n        Cookies.remove('userId');\n        resetUser();\n        resetProject();\n      },\n    });\n  };\n\n  const userId = Cookies.get('userId');\n  const projectId = Cookies.get('projectId');\n  const visiable = location.pathname === '/' && !projectId ? false : true;\n  if (!userId) {\n    return <Redirect to=\"/login\" />;\n  }\n  if (visiable && !projectId) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Layout style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}>\n      <Sider visiable={visiable} collapsed={collapsed} />\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header\n          visiable={visiable}\n          projectName={project.projectName}\n          username={user.username}\n          collapsed={collapsed}\n          toggle={visiable ? toggle : null}\n          logout={logout}\n        />\n        <Content\n          style={{ padding: '24px', minHeight: 'auto', textAlign: 'center' }}\n        >\n          <Suspense fallback={<Spin style={{ marginTop: '200px' }} />}>\n            <Switch>\n              {navList.map((nav, index) => (\n                <Route key={index} {...nav} />\n              ))}\n            </Switch>\n          </Suspense>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3VXkKl9a2sQ0xj2FBjEKKe\",\"content\":\"_1ACFXM1-G0hntoId8kYMpa\",\"main\":\"_1JqLikno_Z1wS3gAbAC5XS\"};","import Mock from 'mockjs';\nimport Cookies from 'js-cookie';\n\nconst api = 'http://mock';\n\nMock.mock(`${api}/users/login`, 'post', function (options) {\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, 'post', function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === 'guoyunxiang') {\n    return {\n      code: 1,\n      msg: '用户名已经被注册',\n    };\n  }\n  const _id = Mock.mock('@id');\n  Cookies.set('userId', _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock('@last'),\n      _id: Cookies.get('userId'),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, 'get', function () {\n  const { data } = Mock.mock({\n    'data|5-10': [\n      {\n        _id: '@id',\n        projectName: '@ctitle',\n        description: '@cparagraph(2,3)',\n        startDate: '2020-07-14',\n        endDate: '2020-12-24',\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: \"1000000000\",\n      //   projectName: \"BesTV互联网电视助手\",\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\n      //   startDate: \"2020-08-04\",\n      //   endDate: \"2020-12-31\",\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/projects/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, 'get', function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock('@ctitle'),\n      description: Mock.mock('@cparagraph(2,3)'),\n      _id: Cookies.get('projectId'),\n      startDate: '2020-07-14',\n      endDate: '2020-12-24',\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/list` + '.*'), 'get', function (options) {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|10-15': [\n        {\n          _id: '@id',\n          content: '@csentence',\n          'status|1': ['todo', 'doing', 'done'],\n          storyId: '@id',\n          projectId: Cookies.get('projectId'),\n          createDate: '@date',\n          startDate: function () {\n            return this.status !== 'todo' ? Mock.mock('@date') : null;\n          },\n          endDate: function () {\n            return this.status === 'done' ? Mock.mock('@date') : null;\n          },\n          'users|0-5': [\n            {\n              _id: '@id',\n              'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n              username: '@last',\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-12': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n          'roles|1-4': [\n            {\n              'color|1': ['#f56a00', '#7265e6', '#00a2ae', '#ffbf00'],\n              'name|1': ['项目经理', '前端开发', '后端开发', 'UI设计'],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/users/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|5-8': [\n        {\n          _id: '@id',\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n          username: '@last',\n          email: '@email',\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/sprints/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      _id: Mock.mock('@id'),\n      ...JSON.parse(options.body),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n    },\n  };\n});\n\nMock.mock(`${api}/sprints/list`, 'get', function () {\n  return {\n    code: 0,\n    data: [\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-14',\n        endDate: '2020-07-30',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-07-31',\n        endDate: '2020-08-26',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n      {\n        _id: Mock.mock('@id'),\n        startDate: '2020-08-27',\n        endDate: '2020-09-13',\n        ...Mock.mock({\n          'tasks|10-20': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        }),\n      },\n    ],\n  };\n});\n\nMock.mock(`${api}/stories/list`, 'get', function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      'data|8-10': [\n        {\n          _id: '@id',\n          'role|1': ['用户', 'VIP', '管理员', '项目经理'],\n          activity: '@cword(10, 15)',\n          date: '@date',\n          'priority|1': [0, 1, 2],\n          businessValue: '@cword(10, 15)',\n          'tasks|3-5': [\n            {\n              _id: '@id',\n              content: '@csentence',\n              'status|1': ['todo', 'doing', 'done'],\n              projectId: Cookies.get('projectId'),\n              createDate: '@date',\n              startDate: function () {\n                return this.status !== 'todo' ? Mock.mock('@date') : null;\n              },\n              endDate: function () {\n                return this.status === 'done' ? Mock.mock('@date') : null;\n              },\n              'users|0-5': [\n                {\n                  _id: '@id',\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\n                  username: '@last',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/tasks/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(`${api}/storys/create`, 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock('@id'),\n      tasks: {\n        todo: [],\n        doing: [],\n        done: [],\n      },\n      projectId: Cookies.get('projectId'),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/storys/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/edit/` + '.*'), 'post', function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/test`, 'get', {\n  code: 1,\n  msg: '请求返回的非正常信息',\n});\n","import axios from 'axios';\nimport '../mock/mock';\nimport { message } from 'antd';\n\nconst api = 'http://mock';\n\naxios.interceptors.response.use((response) => {\n  const res = response.data;\n  if (response.status === 200 && res.code !== 0) {\n    message.error(res.msg);\n  } else {\n    return response;\n  }\n});\n\nexport default function ajax(url = '', data = {}, type = 'GET') {\n  if (type === 'GET') {\n    let dataStr = '';\n    Object.keys(data).forEach((key) => {\n      dataStr += key + '=' + data[key] + '&';\n    });\n    if (dataStr) {\n      dataStr = '?' + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from './ajax';\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax('/users/login', { username, password }, 'POST');\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax('/users/register', { username, password }, 'POST');\n};\n\nexport const reqUser = () => {\n  return ajax('/users/user');\n};\n\n//获取所有注册用户列表\nexport const reqUserList = () => {\n  return ajax('/users/list');\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    '/projects/create',\n    { projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//编辑项目\nexport const reqEditProject = ({\n  _id,\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    `/projects/edit/${_id}`,\n    { _id, projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax('/projects/project');\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax('/projects/list');\n};\n\n//根据projectId获取阶段下或者用户故事下的任务列表\nexport const reqTaskList = (params) => {\n  return ajax('/tasks/list', params);\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax('/projects/members');\n};\n\n//根据projectId获取冲刺周期列表\nexport const reqSprintList = () => {\n  return ajax('/sprints/list');\n};\n//新增冲刺周期\nexport const reqCreateSprint = ({ startDate, endDate }) => {\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\n};\n\n//根据projectId获取用户故事列表\nexport const reqStoryList = () => {\n  return ajax('/stories/list');\n};\n\n//根据projectId获取任务列表\n// export const reqTaskList = () => {\n//   return ajax('/tasks/list');\n// };\n\n//新增任务\nexport const reqCreateTask = ({\n  content,\n  createDate,\n  status = 'todo',\n  users = [],\n}) => {\n  return ajax('/tasks/create', { content, createDate, status, users }, 'POST');\n};\n\n//新增用户故事\nexport const reqCreateStory = ({\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    '/storys/create',\n    { role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//编辑用户故事\nexport const reqEditStory = ({\n  _id,\n  role,\n  activity,\n  priority,\n  businessValue,\n  date,\n}) => {\n  return ajax(\n    `/storys/edit/${_id}`,\n    { _id, role, activity, priority, businessValue, date },\n    'POST'\n  );\n};\n\n//编辑任务\nexport const reqEditTask = (task) => {\n  return ajax(`/tasks/edit/${task._id}`, task, 'POST');\n};\n\n//测试全局消息\nexport const testMessage = () => {\n  return ajax('/test');\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_2dmT7mMO3V78oU1M9erjYS\",\"logout\":\"_2-nIPoFrKM2JM0BGhJH2W3\",\"trigger\":\"a0tYrmkDv02119uNzclj0\",\"title\":\"_1JJYX5P9WwbaV1VDsK_2t0\"};"],"sourceRoot":""}