{"version":3,"sources":["components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/task.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","containers/project/profile/profile.jsx","containers/project/meeting/meeting.jsx","components/board/task.jsx","components/board/column.jsx","components/board/list.jsx","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","components/task-progress/task-progress.jsx","containers/project/story/story.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js","containers/login/login.module.less"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","content","storyId","projectId","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","reqLogin","password","reqRegister","reqCreateProject","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","this","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","Item","message","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","response","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","AreaChartOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","MyProjects","projectList","current","showModal","id","find","setState","handleConfirm","item","that","Modal","confirm","ExclamationCircleOutlined","push","handleOk","format","res","handleCancel","extra","PlusCircleOutlined","fontSize","mapDispatchToProps","Profile","Meeting","size","bordered","column","Task","draggableId","task","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","hoverable","textAlign","Group","users","placement","avatar","droppableId","taskList","droppableProps","tasks","List","status","p","todo","doing","done","Board","onChange","e","target","onDragEnd","destination","source","start","finish","draggedTask","startTasks","finishTasks","splice","originalTasks","tasksOfList","flat","boardView","c","listView","buttonStyle","Button","MenuOutlined","Option","Select","MemberModal","member","roles","forceRender","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","allowClear","role","roleOptions","Member","members","columns","text","handleDel","DeleteOutlined","filter","TaskProgress","genChildren","num","element","block","priority","Story","stories","activity","date","businessValue","progress","ForkOutlined","createSprints","sprint","Sprint","createSprint","getSprints","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","FileAddOutlined","el","disabledDate","currentDate","defaultPickerValue","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","top","left","right","bottom","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.debb67ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3cggNLZEWOO97z_1lNBvEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\n\nconst initUser = {\n  username: '',\n  email: '',\n  msg: '',\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return action.data;\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","import * as types from './action-types';\n\nconst initSprints = [];\n\nexport function sprints(state = initSprints, action) {\n  switch (action.type) {\n    case types.RECEIVE_SPRINTS:\n      return action.data;\n    case types.CREATE_SPRINT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\nimport { sprints } from './sprints/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  sprints,\n  // projectList,\n});\n","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","//获取当前项目冲刺周期\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\n//新增冲刺周期\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from \"mockjs\";\nimport Cookies from \"js-cookie\";\n\nconst api = \"http://mock\";\n\nMock.mock(`${api}/users/login`, \"post\", function (options) {\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, \"post\", function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === \"guoyunxiang\") {\n    return {\n      code: 1,\n      msg: \"用户名已经被注册\",\n    };\n  }\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock(\"@last\"),\n      _id: Cookies.get(\"userId\"),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, \"get\", function () {\n  const { data } = Mock.mock({\n    \"data|5-10\": [\n      {\n        _id: \"@id\",\n        projectName: \"@ctitle\",\n        description: \"@cparagraph(2,3)\",\n        startDate: \"2020-07-14\",\n        endDate: \"2020-12-24\",\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: '1000000000',\n      //   projectName: 'BesTV互联网电视助手',\n      //   description: '通过微信小程序实现登录，点播，聊天等大小屏互动功能。',\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock(\"@id\"),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock(\"@ctitle\"),\n      description: Mock.mock(\"@cparagraph(2,3)\"),\n      _id: Cookies.get(\"projectId\"),\n      startDate: \"2020-07-14\",\n      endDate: \"2020-12-24\",\n    },\n  };\n});\n\nMock.mock(`${api}/tasks/list`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|10-20\": [\n        {\n          _id: \"@id\",\n          content: \"@csentence\",\n          \"status|1\": [\"todo\", \"doing\", \"done\"],\n          storyId: \"@id\",\n          projectId: Cookies.get(\"projectId\"),\n          \"users|0-5\": [\n            {\n              _id: \"@id\",\n              \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n              username: \"@last\",\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|8-12\": [\n        {\n          _id: \"@id\",\n          \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n          username: \"@last\",\n          email: \"@email\",\n          \"roles|1-4\": [\n            {\n              \"color|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\", \"#ffbf00\"],\n              \"name|1\": [\"项目经理\", \"前端开发\", \"后端开发\", \"UI设计\"],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/users/list`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|5-8\": [\n        {\n          _id: \"@id\",\n          \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n          username: \"@last\",\n          email: \"@email\",\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/sprints/create`, \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      _id: Mock.mock(\"@id\"),\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/sprints/list`, \"get\", function () {\n  return {\n    code: 0,\n    data: [\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-07-14\",\n        endDate: \"2020-07-30\",\n      },\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-07-31\",\n        endDate: \"2020-08-26\",\n      },\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-08-27\",\n        endDate: \"2020-09-13\",\n      },\n    ],\n  };\n});\n","import axios from \"axios\";\nimport \"../mock/mock\";\n\nconst api = \"http://mock\";\n\nexport default function ajax(url = \"\", data = {}, type = \"GET\") {\n  if (type === \"GET\") {\n    let dataStr = \"\";\n    Object.keys(data).forEach((key) => {\n      dataStr += key + \"=\" + data[key] + \"&\";\n    });\n    if (dataStr) {\n      dataStr = \"?\" + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from './ajax';\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax('/users/login', { username, password }, 'POST');\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax('/users/register', { username, password }, 'POST');\n};\n\nexport const reqUser = () => {\n  return ajax('/users/user');\n};\n\n//获取所有注册用户列表\nexport const reqUserList = () => {\n  return ajax('/users/list');\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    '/projects/create',\n    { projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax('/projects/project');\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax('/projects/list');\n};\n\n//根据projectId获取任务列表\nexport const reqTaskList = () => {\n  return ajax('/tasks/list');\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax('/projects/members');\n};\n\n//根据projectId获取冲刺周期列表list\nexport const reqSprintList = () => {\n  return ajax('/sprints/list');\n};\n//新增冲刺周期\nexport const reqCreateSprint = ({ startDate, endDate }) => {\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\n};\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./login.module.less\";\n\nimport { login } from \"../../redux/user/actions\";\n\nclass Login extends Component {\n  onFinish = (user) => {\n    this.props.login(user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toRegister = () => {\n    this.props.history.replace(\"/register\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    登录\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\n                    注册账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"../login/login.module.less\";\n\nimport { register } from \"../../redux/user/actions\";\n\nclass Register extends Component {\n  onFinish = (user) => {\n    this.props.register(user);\n    console.log(\"Success:\", user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toLogin = () => {\n    this.props.history.replace(\"/login\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password2\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请再次输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    注册\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\n                    已有账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  AreaChartOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n} from '@ant-design/icons';\n\nimport styles from './sider.module.less';\n\nclass Sider extends Component {\n  static propTypes = {\n    collapsed: PropTypes.bool.isRequired,\n  };\n\n  menuList = [\n    // 包含所有导航组件的相关信息数据\n    {\n      path: '/project/profile',\n      title: '项目状态',\n      icon: <ProfileOutlined />,\n    },\n    {\n      path: '/project/member',\n      title: '成员管理',\n      icon: <TeamOutlined />,\n    },\n    {\n      path: '/project/story',\n      title: '需求分析',\n      icon: <SolutionOutlined />,\n    },\n    {\n      path: '/project/sprint',\n      title: '阶段设置',\n      icon: <CarryOutOutlined />,\n    },\n    {\n      path: '/project/board',\n      title: '任务看板',\n      icon: <ProjectOutlined />,\n    },\n    {\n      path: '/project/meeting',\n      title: '会议纪要',\n      icon: <SnippetsOutlined />,\n    },\n    {\n      path: '',\n      title: '燃尽图',\n      icon: <AreaChartOutlined />,\n    },\n  ];\n\n  render() {\n    const visiable = this.props.visiable;\n    const currentPath = this.props.history.location.pathname;\n    const selectedMenu = this.menuList\n      .findIndex((menu) => menu.path === currentPath)\n      .toString();\n    // if (!visiable) return null;\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible\n        collapsed={this.props.collapsed}\n        className={styles.sider}\n        style={{\n          display: visiable ? '' : 'none',\n        }}\n      >\n        <div className={styles.logo}>PMS</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n          {this.menuList.map((menu, index) => (\n            <Menu.Item\n              key={index}\n              icon={menu.icon}\n              onClick={() => {\n                if (menu.path) this.props.history.replace(menu.path);\n              }}\n            >\n              {menu.title}\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport styles from './header.module.less';\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {props.visiable &&\n        React.createElement(\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n          {\n            className: styles.trigger,\n            onClick: props.toggle,\n          }\n        )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Table } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\n\nexport default function ProjectList(props) {\n  const data = props.data;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        title=\"信息\"\n        dataIndex=\"projectName\"\n        key=\"projectName\"\n        render={(value, record) => (\n          <>\n            <h4>\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\n            </h4>\n            <div style={{ color: 'rgba(0,0,0,.45)', marginTop: '4px' }}>\n              {record.description}\n            </div>\n          </>\n        )}\n      />\n      <Column\n        title=\"时间\"\n        key=\"date\"\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\n      />\n      <Column\n        title=\"操作\"\n        dataIndex=\"_id\"\n        key=\"action\"\n        render={(_id) => (\n          <a\n            onClick={() => {\n              props.onItemEditClick(_id);\n            }}\n          >\n            <EditOutlined />\n          </a>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Form, Input, DatePicker, Modal } from \"antd\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (project) {\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\n      form.setFieldsValue({ ...project, rangeDate });\n    } else {\n      form.resetFields();\n    }\n  }, [form, project]);\n\n  return (\n    <Modal\n      // forceRender\n      title={project ? \"编辑项目\" : \"创建项目\"}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log(\"验证失败：\", info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"projectName\"\n          label=\"项目名称\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入项目名称！\",\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"rangeDate\"\n          label=\"项目时间\"\n          rules={[\n            {\n              required: true,\n              message: \"请选择选择项目时间！\",\n            },\n          ]}\n        >\n          <RangePicker\n            style={{\n              width: \"100%\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"项目简介\"\n          rules={[\n            {\n              required: true,\n              message: \"请输入至少五个字符的项目简介！\",\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { Card, Modal } from \"antd\";\nimport {\n  PlusCircleOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport ProjectList from \"../../components/project/list\";\nimport ProjectModal from \"../../components/project/modal\";\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from \"../../redux/project/actions\";\nimport { reqProjectList, reqCreateProject } from \"../../api/index\";\n\nclass MyProjects extends Component {\n  state = {\n    visible: false,\n    projectList: [],\n    current: null,\n  };\n\n  showModal = (id) => {\n    let current = null;\n    if (id) {\n      current = this.state.projectList.find((project) => project._id === id);\n    }\n    this.setState({\n      visible: true,\n      current,\n    });\n  };\n\n  handleConfirm = (item) => {\n    let that = this;\n    Modal.confirm({\n      title: \"选择并切换至该项目？\",\n      icon: <ExclamationCircleOutlined />,\n      cancelText: \"取消\",\n      okText: \"确定\",\n      onOk() {\n        that.props.switchProject(item);\n        //todo:重置store.state中的sprints\n        Cookies.set(\"projectId\", item._id);\n        that.props.history.push(\"/project/profile\");\n      },\n    });\n  };\n\n  handleOk = (values) => {\n    const rangeDate = values[\"rangeDate\"];\n    values.startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n    values.endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n    reqCreateProject(values).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        this.setState({\n          projectList: [result.data, ...this.state.projectList],\n          visible: false,\n        });\n      }\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      // console.log(result);\n      if (result.code === 0) {\n        this.setState({\n          projectList: result.data,\n        });\n      }\n    });\n    // this.props.getProjectList();\n  }\n\n  render() {\n    // const data = this.props.projectList;\n    const { projectList, current } = this.state;\n    return (\n      <div>\n        <Card\n          title=\"我的项目\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n            </a>\n          }\n        >\n          <ProjectList\n            data={projectList}\n            onConfirm={this.handleConfirm}\n            onItemEditClick={this.showModal}\n          ></ProjectList>\n        </Card>\n\n        <ProjectModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          project={current}\n        ></ProjectModal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n","import React, { Component } from 'react';\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <>\n        <div>\n          当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\n        </div>\n        <div>目前未开始10个，进行中10个，已结束10个。</div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Descriptions } from 'antd';\n\nexport default class Meeting extends Component {\n  render() {\n    return (\n      <Card>\n        <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\n          <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\n          <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\n          <Descriptions.Item label=\"参会人员\" span={2}>\n            张三，李四，王五\n          </Descriptions.Item>\n          <Descriptions.Item label=\"会议内容\" span={2}>\n            Data disk type: MongoDB\n            <br />\n            Database version: 3.4\n            <br />\n            Package: dds.mongo.mid\n            <br />\n            Storage space: 10 GB\n            <br />\n            Replication factor: 3\n            <br />\n            Region: East China 1\n          </Descriptions.Item>\n          <Descriptions.Item label=\"待办事项\">\n            Data disk type: MongoDB\n            <br />\n            Database version: 3.4\n            <br />\n            Package: dds.mongo.mid\n            <br />\n            Storage space: 10 GB\n            <br />\n            Replication factor: 3\n            <br />\n            Region: East China 1\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Card, Avatar, Tooltip } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport styles from \"./task.module.less\";\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : '',\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// });\n\nexport default class Task extends Component {\n  render() {\n    return (\n      <Draggable draggableId={this.props.task._id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className={styles.container}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            // style={getItemStyle(\n            //   snapshot.isDragging,\n            //   provided.draggableProps.style\n            // )}\n          >\n            <Card hoverable={true}>\n              <p>{this.props.task.content}</p>\n              <div style={{ textAlign: \"right\" }}>\n                <Avatar.Group>\n                  {this.props.task.users.map((user) => (\n                    <Tooltip\n                      key={user._id}\n                      title={user.username}\n                      placement=\"top\"\n                    >\n                      <Avatar\n                        style={{ backgroundColor: user.avatar }}\n                        icon={<UserOutlined />}\n                      />\n                    </Tooltip>\n                  ))}\n                </Avatar.Group>\n              </div>\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task';\n\nimport styles from './column.module.less';\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? 'lightblue' : '',\n// });\n\nexport default class Column extends Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <h4\n          className={styles.title}\n          style={{ backgroundColor: this.props.title.color }}\n        >\n          {this.props.title.display}\n        </h4>\n        <Droppable droppableId={this.props.id}>\n          {(provided) => (\n            <div\n              className={styles.taskList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              // style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.props.tasks.map((task, index) => (\n                <Task key={task._id} task={task} index={index} />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\n\nexport default function List(props) {\n  const { data, status } = props;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        width=\"90px\"\n        title=\"状态\"\n        dataIndex=\"status\"\n        key=\"status\"\n        render={(value) => {\n          const p = status[value];\n          return <Tag color={p.color}>{p.display}</Tag>;\n        }}\n      />\n      <Column title=\"任务内容\" dataIndex=\"content\" key=\"content\" />\n      <Column\n        title=\"参与者\"\n        dataIndex=\"users\"\n        key=\"users\"\n        render={(users) => (\n          <Avatar.Group>\n            {users.map((user) => (\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\n                <Avatar\n                  style={{ backgroundColor: user.avatar }}\n                  icon={<UserOutlined />}\n                />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Card, Radio } from \"antd\";\nimport { MenuOutlined, ProjectOutlined } from \"@ant-design/icons\";\nimport Column from \"../../../components/board/column\";\nimport List from \"../../../components/board/list\";\nimport { reqTaskList } from \"../../../api/index\";\n\nconst status = {\n  todo: {\n    color: \"#4a9ff9\",\n    display: \"未开始\",\n  },\n  doing: {\n    color: \"#f9944a\",\n    display: \"进行中\",\n  },\n  done: {\n    color: \"#2ac06d\",\n    display: \"已完成\",\n  },\n};\n\nexport default class Board extends Component {\n  state = {\n    value: \"board\",\n    // originalTasks: [],\n    tasks: {\n      todo: [],\n      doing: [],\n      done: [],\n    },\n  };\n\n  componentDidMount() {\n    reqTaskList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const originalTasks = result.data;\n        const tasks = this.state.tasks;\n        originalTasks.forEach((task) => {\n          tasks[task.status].push(task);\n        });\n        // console.log(tasks);\n        this.setState({\n          tasks,\n          // originalTasks,\n        });\n      }\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n  //方案2\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = source.droppableId;\n    const finish = destination.droppableId;\n\n    //查询被拖拽的task\n    const draggedTask = this.state.tasks[start].find(\n      (task) => task._id === draggableId\n    );\n    // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\n    //   (task) => task._id === draggableId\n    // );\n\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n    draggedTask.status = finish;\n    // draggedTaskInOriginalTasks.status = finish;\n\n    const { tasks } = this.state;\n    const startTasks = tasks[start];\n    const finishTasks = tasks[finish];\n\n    startTasks.splice(source.index, 1);\n    finishTasks.splice(destination.index, 0, draggedTask);\n\n    this.setState({\n      tasks,\n    });\n  };\n\n  render() {\n    const { tasks, value } = this.state;\n    const tasksOfList = Object.values(tasks).flat();\n\n    const boardView = (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div style={{ display: \"flex\" }}>\n          {Object.keys(tasks).map((c, index) => (\n            <Column title={status[c]} id={c} key={index} tasks={tasks[c]} />\n          ))}\n        </div>\n      </DragDropContext>\n    );\n\n    const listView = <List data={tasksOfList} status={status}></List>;\n\n    return (\n      <Card\n        title=\"阶段\"\n        extra={\n          <Radio.Group\n            buttonStyle=\"solid\"\n            onChange={this.onChange}\n            value={this.state.value}\n          >\n            <Radio.Button value=\"board\">\n              <ProjectOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"list\">\n              {\" \"}\n              <MenuOutlined />\n            </Radio.Button>\n          </Radio.Group>\n        }\n      >\n        {value === \"board\" ? boardView : listView}\n      </Card>\n    );\n  }\n}\n","import React from \"react\";\nimport { Form, Select, Modal } from \"antd\";\n\nconst { Option } = Select;\n\nexport default function MemberModal({\n  visible,\n  onOk,\n  onCancel,\n  member,\n  users,\n  roles,\n}) {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      forceRender\n      title={member ? \"编辑成员\" : \"添加成员\"}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log(\"验证失败：\", info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"_id\"\n          label=\"项目成员\"\n          rules={[\n            {\n              required: true,\n              message: \"请选择项目成员！\",\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"选择成员\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) => {\n              console.log(option);\n              return (\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              );\n            }}\n          >\n            {users.map((user, index) => (\n              <Option key={index} value={user._id}>\n                {user.username}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"roles\"\n          label=\"成员角色\"\n          rules={[\n            {\n              required: true,\n              message: \"请选择成员角色！\",\n            },\n          ]}\n        >\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\n            {roles.map((role, index) => (\n              <Option key={index} value={role.name}>\n                {role.name}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from \"antd\";\nimport {\n  UserOutlined,\n  DeleteOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport MemberModal from \"../../../components/member/modal\";\nimport { reqMemberList, reqUserList } from \"../../../api/index\";\n\nconst roleOptions = [\n  {\n    color: \"#f56a00\",\n    name: \"项目经理\",\n  },\n  {\n    color: \"#7265e6\",\n    name: \"前端开发\",\n  },\n  {\n    color: \"#00a2ae\",\n    name: \"后端开发\",\n  },\n  {\n    color: \"#ffbf00\",\n    name: \"UI设计\",\n  },\n];\n\nexport default class Member extends Component {\n  state = {\n    users: [],\n    members: [],\n    visible: false,\n  };\n  columns = [\n    {\n      title: \"成员\",\n      dataIndex: \"username\",\n      render: (text, record) => (\n        <Space>\n          <Avatar\n            style={{ backgroundColor: record.avatar }}\n            icon={<UserOutlined />}\n          ></Avatar>\n          <a>{text}</a>\n        </Space>\n      ),\n    },\n    {\n      title: \"邮箱\",\n      dataIndex: \"email\",\n      render: (text) => <div style={{ color: \"rgba(0,0,0,.45)\" }}>{text}</div>,\n    },\n    {\n      title: \"角色\",\n      dataIndex: \"roles\",\n      render: (roles) =>\n        roles.map((role, index) => (\n          <Tag key={index} color={role.color}>\n            {role.name}\n          </Tag>\n        )),\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"_id\",\n      key: \"action\",\n      render: (_id) => (\n        <Popconfirm\n          placement=\"left\"\n          title=\"确认删除该成员？\"\n          onConfirm={() => this.handleDel(_id)}\n          okText=\"确认\"\n          cancelText=\"取消\"\n        >\n          <a key=\"delete\">\n            <DeleteOutlined />\n          </a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  handleDel = (id) => {\n    const members = this.state.members.filter((member) => member._id !== id);\n    this.setState({ members });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = (values) => {\n    const user = this.state.users.find((user) => user._id === values._id);\n    const users = this.state.users.filter((user) => user._id !== values._id);\n    const roles = roleOptions.filter((role) => {\n      return values.roles.findIndex((value) => role.name === value) !== -1;\n    });\n    const newMember = {\n      ...user,\n      roles,\n    };\n    const members = [newMember, ...this.state.members];\n    this.setState({\n      members,\n      users,\n      visible: false,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const members = result.data;\n        this.setState({\n          members,\n        });\n      }\n    });\n\n    //获取所有用户列表（添加用户时用）\n    reqUserList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const users = result.data;\n        this.setState({\n          users,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Card\n          title=\"项目成员\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n            </a>\n          }\n        >\n          <Table\n            showHeader={false}\n            pagination={false}\n            rowKey=\"_id\"\n            columns={this.columns}\n            dataSource={this.state.members}\n          />\n        </Card>\n        <MemberModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          member={null}\n          users={this.state.users}\n          roles={roleOptions}\n        ></MemberModal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction TaskProgress(props) {\n  function genChildren(num, className) {\n    let children = [];\n    for (let index = 0; index < num; index++) {\n      const element = (\n        <div key={index} className={`${styles.block} ${className}`}></div>\n      );\n      children.push(element);\n    }\n    return children;\n  }\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","import React, { Component } from \"react\";\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  EditOutlined,\n  PlusCircleOutlined,\n  ForkOutlined,\n} from \"@ant-design/icons\";\n\nimport TaskProgress from \"../../../components/task-progress/task-progress\";\n\nconst { Column } = Table;\n\nconst priority = [\n  {\n    color: \"#2ac06d\",\n    display: \"低\",\n  },\n  {\n    color: \"#f9944a\",\n    display: \"中\",\n  },\n  {\n    color: \"#ff4d4f\",\n    display: \"高\",\n  },\n];\n\nexport default class Story extends Component {\n  state = {\n    visible: false,\n    stories: [\n      {\n        _id: \"1232312313\",\n        role: \"用户\",\n        activity: \"选择首页弹出的标签\",\n        date: \"2010-1-1\",\n        priority: 2,\n        businessValue: \"分析用户画像，智能推荐分析用户画像，智能推荐\",\n        tasks: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      },\n    ],\n  };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Card\n          title=\"项目需求\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={this.state.stories}\n            pagination={false}\n            rowKey=\"_id\"\n          >\n            <Column\n              width=\"80px\"\n              title=\"优先级\"\n              dataIndex=\"priority\"\n              key=\"priority\"\n              render={(value) => {\n                const p = priority[value];\n                return (\n                  <Tag\n                    style={{ width: \"40px\", textAlign: \"center\" }}\n                    color={p.color}\n                  >\n                    {p.display}\n                  </Tag>\n                );\n              }}\n            />\n            <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\n            <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\n            <Column\n              title=\"目的\"\n              dataIndex=\"businessValue\"\n              key=\"businessValue\"\n              progress\n            />\n\n            <Column\n              title=\"任务进度\"\n              key=\"progress\"\n              render={() => (\n                <Link to=\"/project/board\">\n                  <TaskProgress todo={3} doing={5} done={4} />\n                </Link>\n              )}\n            />\n            <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\n            <Column\n              title=\"操作\"\n              key=\"tasks\"\n              render={() => (\n                <>\n                  <a>\n                    <EditOutlined />\n                  </a>\n                  <Divider type=\"vertical\" />\n                  <a>\n                    <ForkOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <Modal\n          title=\"新增需求\"\n          width={480}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        ></Modal>\n      </div>\n    );\n  }\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\nconst receiveSprints = (sprints) => ({\n  type: types.RECEIVE_SPRINTS,\n  data: sprints,\n});\n\nconst createSprints = (sprint) => ({\n  type: types.CREATE_SPRINT,\n  data: sprint,\n});\n\nexport const createSprint = (sprint) => {\n  return async (dispatch) => {\n    const response = await api.reqCreateSprint(sprint);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(createSprints(result.data));\n    }\n  };\n};\n\nexport const getSprints = () => {\n  return async (dispatch) => {\n    const response = await api.reqSprintList();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveSprints(result.data));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Card, Table, Form, DatePicker, Modal, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { PlusCircleOutlined, FileAddOutlined } from \"@ant-design/icons\";\n\nimport TaskProgress from \"../../../components/task-progress/task-progress\";\nimport { createSprint, getSprints } from \"../../../redux/sprints/actions\";\n\nimport styles from \"./sprint.module.less\";\n\nconst { RangePicker } = DatePicker;\nconst { Column } = Table;\n\nclass Sprint extends Component {\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleOk = (e) => {\n    this.form\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value[\"rangeDate\"];\n        const startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n        const endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n        this.props.createSprint({ startDate, endDate });\n        this.setState({\n          visible: false,\n        });\n        this.form.resetFields();\n      })\n      .catch((info) => {\n        console.log(\"验证失败：\", info);\n      });\n  };\n\n  componentDidMount() {\n    this.props.getSprints();\n  }\n\n  render() {\n    const { startDate, endDate } = this.props.project;\n    const sprints = this.props.sprints;\n    const length = sprints.length;\n\n    let newStartDate = startDate;\n\n    if (length > 0) {\n      const lastEndDate = sprints[length - 1].endDate;\n      newStartDate = moment(lastEndDate).add(1, \"days\").format(\"YYYY-MM-DD\");\n    }\n\n    return (\n      <div>\n        <Card\n          title=\"项目阶段\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={sprints}\n            pagination={false}\n            rowKey=\"_id\"\n            rowClassName={(record) => {\n              return moment().isBetween(\n                record.startDate,\n                record.endDate,\n                null,\n                \"[]\"\n              )\n                ? styles.curSprint\n                : null;\n            }}\n          >\n            <Column\n              title=\"阶段时间\"\n              key=\"date\"\n              render={(value, record) =>\n                `${record.startDate}~${record.endDate}`\n              }\n            />\n            <Column\n              title=\"任务进度\"\n              key=\"status\"\n              render={() => (\n                <Link to=\"/project/board\">\n                  <TaskProgress todo={3} doing={5} done={4} />\n                </Link>\n              )}\n            />\n            <Column\n              title=\"操作\"\n              key=\"tasks\"\n              render={() => (\n                <>\n                  {/* <Link to=\"/project/board\">\n                    <ProjectOutlined />\n                  </Link>\n                  <Divider type=\"vertical\" /> */}\n                  <a>\n                    <FileAddOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <Modal\n          title=\"新增阶段\"\n          width={480}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        >\n          <Form ref={(el) => (this.form = el)}>\n            <Form.Item\n              name=\"rangeDate\"\n              rules={[\n                {\n                  required: true,\n                  message: \"请选择阶段时间！\",\n                },\n              ]}\n            >\n              <RangePicker\n                disabledDate={(currentDate) =>\n                  !currentDate.isBetween(newStartDate, endDate, \"day\", \"[]\")\n                }\n                defaultPickerValue={[moment(newStartDate)]}\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n  sprints: state.sprints,\n});\n\nconst mapDispatchToProps = { createSprint, getSprints };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\n","import React from 'react';\nimport { Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    style={{\n      background: 'none',\n    }}\n    subTitle=\"页面不存在\"\n  />\n);\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { Layout, Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport Sider from '../../components/sider/sider';\nimport Header from '../../components/header/header';\nimport MyProjects from '../my-projects/my-projects';\nimport Profile from '../project/profile/profile';\nimport Meeting from '../project/meeting/meeting';\nimport Board from '../project/board/board';\nimport Member from '../project/member/member';\nimport Story from '../project/story/story';\nimport Sprint from '../project/sprint/sprint';\nimport NotFound from '../exception/not-found';\nimport { resetUser, getUser } from '../../redux/user/actions';\nimport { resetProject, getProject } from '../../redux/project/actions';\n\nconst { Content } = Layout;\n\nclass Main extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  navList = [\n    {\n      path: '/',\n      component: MyProjects,\n      exact: true,\n    },\n    {\n      path: '/project/profile',\n      component: Profile,\n    },\n    {\n      path: '/project/member',\n      component: Member,\n    },\n    {\n      path: '/project/meeting',\n      component: Meeting,\n    },\n    {\n      path: '/project/story',\n      component: Story,\n    },\n    {\n      path: '/project/board',\n      component: Board,\n    },\n    {\n      path: '/project/sprint',\n      component: Sprint,\n    },\n    {\n      component: NotFound,\n    },\n  ];\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  logout = () => {\n    let that = this;\n    Modal.confirm({\n      title: '确认退出登录吗？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        Cookies.remove('projectId');\n        Cookies.remove('userId');\n        that.props.resetUser();\n        that.props.resetProject();\n      },\n    });\n  };\n\n  componentDidMount() {\n    const userId = Cookies.get('userId');\n    if (userId && !this.props.user._id) {\n      this.props.getUser();\n    }\n\n    const projectId = Cookies.get('projectId');\n    if (projectId && !this.props.project._id) {\n      this.props.getProject();\n    }\n  }\n\n  render() {\n    const userId = Cookies.get('userId');\n    const projectId = Cookies.get('projectId');\n    const visiable =\n      this.props.location.pathname === '/' && !projectId ? false : true;\n    if (!userId) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (visiable && !projectId) {\n      return <Redirect to=\"/\" />;\n    }\n\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n    return (\n      <Layout\n        style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header\n            visiable={visiable}\n            projectName={this.props.project.projectName}\n            username={this.props.user.username}\n            collapsed={this.state.collapsed}\n            toggle={visiable ? this.toggle : null}\n            logout={this.logout}\n          />\n          <Content style={{ padding: '24px', minHeight: 'auto' }}>\n            <Switch>\n              {this.navList.map((nav, index) => (\n                <Route key={index} {...nav} />\n              ))}\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};"],"sourceRoot":""}