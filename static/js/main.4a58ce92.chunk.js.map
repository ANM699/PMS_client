{"version":3,"sources":["containers/login/login.module.less","components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/task.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","components/task-progress/task-progress.jsx","containers/project/profile/profile.jsx","containers/project/meeting/meeting.jsx","components/board/task.jsx","components/board/column.jsx","components/board/list.jsx","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","containers/project/story/story.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","RegExp","content","storyId","projectId","createDate","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","reqLogin","password","reqRegister","reqCreateProject","reqEditProject","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","this","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","Item","message","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","response","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","test","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","MyProjects","projectList","current","showModal","setState","handleConfirm","item","that","Modal","confirm","ExclamationCircleOutlined","push","handleOk","format","res","handleCancel","extra","PlusCircleOutlined","fontSize","mapDispatchToProps","TaskProgress","genChildren","num","children","element","block","todo","doing","done","echarts","require","Countdown","Statistic","option","text","legend","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","axisPointer","xAxis","boundaryGap","yAxis","series","areaStyle","lineStyle","Profile","setTimeout","chart","init","setOption","on","resize","gutter","hoverable","valueStyle","ref","el","height","Meeting","size","bordered","column","Task","task","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","date","status","displayDate","Group","users","placement","avatar","tasks","droppableId","id","taskList","droppableProps","List","p","Board","onChange","target","onDragEnd","destination","source","start","finish","draggedTask","find","startTasks","finishTasks","splice","params","match","originalTasks","tasksOfList","flat","boardView","image","Empty","PRESENTED_IMAGE_SIMPLE","c","listView","buttonStyle","Button","MenuOutlined","Option","Select","MemberModal","member","roles","showSearch","optionFilterProp","allowClear","role","roleOptions","Member","members","columns","handleDel","DeleteOutlined","filter","priority","Story","stories","activity","businessValue","textAlign","progress","ForkOutlined","createSprints","sprint","Sprint","createSprint","getSprints","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","FileAddOutlined","disabledDate","currentDate","defaultPickerValue","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.4a58ce92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3cggNLZEWOO97z_1lNBvEc\",\"date\":\"_2r7rIaJ0agJIx-AY05KPPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\n\nconst initUser = {\n  username: '',\n  email: '',\n  msg: '',\n};\n\nexport function user(state = initUser, action) {\n  switch (action.type) {\n    case types.AUTH_SUCCESS:\n      return action.data;\n    case types.RECEIVE_USER:\n      return action.data;\n    case types.RESET_USER:\n      return {\n        ...initUser,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","//获取项目列表\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\n//新增项目到列表\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\n//选择并切换至该项目\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\n//退出时注销当前选择的项目\nexport const RESET_PROJECT = 'RESET_PROJECT';\n//项目请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n","import * as types from './action-types';\n\nconst initProject = {\n  projectName: '',\n  startDate: null,\n  endDate: null,\n  description: '',\n  msg: '',\n};\n\nexport function project(state = initProject, action) {\n  switch (action.type) {\n    case types.SWITCH_PROJECT:\n      return action.data;\n    case types.RESET_PROJECT:\n      return {\n        ...initProject,\n        msg: action.data,\n      };\n    case types.ERROR_MSG:\n      return {\n        ...state,\n        msg: action.data,\n      };\n    default:\n      return state;\n  }\n}\n\n// export function projectList(state = [], action) {\n//   switch (action.type) {\n//     case types.RECEIVE_PROJECT_LIST:\n//       return action.data;\n//     case types.RECEIVE_NEW_PROJECT:\n//       return [action.data, ...state];\n//     default:\n//       return state;\n//   }\n// }\n","import * as types from './action-types';\n\nconst initSprints = [];\n\nexport function sprints(state = initSprints, action) {\n  switch (action.type) {\n    case types.RECEIVE_SPRINTS:\n      return action.data;\n    case types.CREATE_SPRINT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/*\n包含多个用于生成新的state 的reducer 函数的模块\n*/\nimport { combineReducers } from 'redux';\n\nimport { user } from './user/reduces';\nimport { project } from './project/reduces';\nimport { sprints } from './sprints/reduces';\n\n// 返回合并后的reducer 函数\nexport default combineReducers({\n  user,\n  project,\n  sprints,\n  // projectList,\n});\n","//验证成功\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\n//获取当前用户\nexport const RECEIVE_USER = 'RECEIVE_USER';\n\n//用户请求出错\nexport const ERROR_MSG = 'ERROR_MSG';\n\nexport const RESET_USER = 'RESET_USER';\n","//获取当前项目冲刺周期\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\n//新增冲刺周期\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from \"mockjs\";\nimport Cookies from \"js-cookie\";\n\nconst api = \"http://mock\";\n\nMock.mock(`${api}/users/login`, \"post\", function (options) {\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: JSON.parse(options.body).username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/register`, \"post\", function (options) {\n  const body = JSON.parse(options.body);\n  if (body.username === \"guoyunxiang\") {\n    return {\n      code: 1,\n      msg: \"用户名已经被注册\",\n    };\n  }\n  const _id = Mock.mock(\"@id\");\n  Cookies.set(\"userId\", _id);\n  return {\n    code: 0,\n    data: {\n      username: body.username,\n      _id,\n    },\n  };\n});\n\nMock.mock(`${api}/users/user`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      username: Mock.mock(\"@last\"),\n      _id: Cookies.get(\"userId\"),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/list`, \"get\", function () {\n  const { data } = Mock.mock({\n    \"data|5-10\": [\n      {\n        _id: \"@id\",\n        projectName: \"@ctitle\",\n        description: \"@cparagraph(2,3)\",\n        startDate: \"2020-07-14\",\n        endDate: \"2020-12-24\",\n      },\n    ],\n  });\n  return {\n    code: 0,\n    data: [\n      // {\n      //   _id: \"1000000000\",\n      //   projectName: \"BesTV互联网电视助手\",\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\n      //   startDate: \"2020-08-04\",\n      //   endDate: \"2020-12-31\",\n      // },\n      ...data,\n    ],\n  };\n});\n\nMock.mock(`${api}/projects/create`, \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n      _id: Mock.mock(\"@id\"),\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/projects/edit/` + \".*\"), \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/projects/project`, \"get\", function () {\n  return {\n    code: 0,\n    data: {\n      projectName: Mock.mock(\"@ctitle\"),\n      description: Mock.mock(\"@cparagraph(2,3)\"),\n      _id: Cookies.get(\"projectId\"),\n      startDate: \"2020-07-14\",\n      endDate: \"2020-12-24\",\n    },\n  };\n});\n\nMock.mock(RegExp(`${api}/tasks/list` + \".*\"), \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|10-15\": [\n        {\n          _id: \"@id\",\n          content: \"@csentence\",\n          \"status|1\": [\"todo\", \"doing\", \"done\"],\n          storyId: \"@id\",\n          projectId: Cookies.get(\"projectId\"),\n          createDate: \"2020-07-14\",\n          startDate: \"2020-09-15\",\n          endDate: \"2020-09-22\",\n          \"users|0-5\": [\n            {\n              _id: \"@id\",\n              \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n              username: \"@last\",\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/projects/members`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|8-12\": [\n        {\n          _id: \"@id\",\n          \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n          username: \"@last\",\n          email: \"@email\",\n          \"roles|1-4\": [\n            {\n              \"color|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\", \"#ffbf00\"],\n              \"name|1\": [\"项目经理\", \"前端开发\", \"后端开发\", \"UI设计\"],\n            },\n          ],\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/users/list`, \"get\", function () {\n  return {\n    code: 0,\n    ...Mock.mock({\n      \"data|5-8\": [\n        {\n          _id: \"@id\",\n          \"avatar|1\": [\"#f56a00\", \"#7265e6\", \"#00a2ae\"],\n          username: \"@last\",\n          email: \"@email\",\n        },\n      ],\n    }),\n  };\n});\n\nMock.mock(`${api}/sprints/create`, \"post\", function (options) {\n  return {\n    code: 0,\n    data: {\n      _id: Mock.mock(\"@id\"),\n      ...JSON.parse(options.body),\n    },\n  };\n});\n\nMock.mock(`${api}/sprints/list`, \"get\", function () {\n  return {\n    code: 0,\n    data: [\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-07-14\",\n        endDate: \"2020-07-30\",\n      },\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-07-31\",\n        endDate: \"2020-08-26\",\n      },\n      {\n        _id: Mock.mock(\"@id\"),\n        startDate: \"2020-08-27\",\n        endDate: \"2020-09-13\",\n      },\n    ],\n  };\n});\n","import axios from \"axios\";\nimport \"../mock/mock\";\n\nconst api = \"http://mock\";\n\nexport default function ajax(url = \"\", data = {}, type = \"GET\") {\n  if (type === \"GET\") {\n    let dataStr = \"\";\n    Object.keys(data).forEach((key) => {\n      dataStr += key + \"=\" + data[key] + \"&\";\n    });\n    if (dataStr) {\n      dataStr = \"?\" + dataStr.substring(0, dataStr.length - 1);\n    }\n    return axios.get(api + url + dataStr);\n  } else {\n    return axios.post(api + url, data);\n  }\n}\n","import ajax from './ajax';\n\nexport const reqLogin = ({ username, password }) => {\n  return ajax('/users/login', { username, password }, 'POST');\n};\n\nexport const reqRegister = ({ username, password }) => {\n  return ajax('/users/register', { username, password }, 'POST');\n};\n\nexport const reqUser = () => {\n  return ajax('/users/user');\n};\n\n//获取所有注册用户列表\nexport const reqUserList = () => {\n  return ajax('/users/list');\n};\n\n//新增项目\nexport const reqCreateProject = ({\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    '/projects/create',\n    { projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//编辑项目\nexport const reqEditProject = ({\n  _id,\n  projectName,\n  startDate,\n  endDate,\n  description,\n}) => {\n  return ajax(\n    `/projects/edit/${_id}`,\n    { _id, projectName, startDate, endDate, description },\n    'POST'\n  );\n};\n\n//获取项目信息\nexport const reqProject = () => {\n  return ajax('/projects/project');\n};\n\n//获取项目列表\nexport const reqProjectList = () => {\n  return ajax('/projects/list');\n};\n\n//根据projectId获取阶段下或者用户故事下的任务列表\nexport const reqTaskList = ({ type, id }) => {\n  return ajax('/tasks/list', { type, id });\n};\n\n//根据projectId获取成员列表\nexport const reqMemberList = () => {\n  return ajax('/projects/members');\n};\n\n//根据projectId获取冲刺周期列表list\nexport const reqSprintList = () => {\n  return ajax('/sprints/list');\n};\n//新增冲刺周期\nexport const reqCreateSprint = ({ startDate, endDate }) => {\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\n};\n","import * as types from \"./action-types\";\nimport * as api from \"../../api\";\n\n//用户\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\n\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const resetUser = (msg) => {\n  return { type: types.RESET_USER, data: msg };\n};\n\n//登录\nexport const login = (user) => {\n  const { username, password } = user;\n  if (!username || !password) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqLogin(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//注册\nexport const register = (user) => {\n  const { username, password, password2 } = user;\n  if (!username || !password || !password2) {\n    return errorMsg(\"请输入用户名和密码\");\n  }\n  if (password !== password2) {\n    return errorMsg(\"输入的密码不一致\");\n  }\n  return async (dispatch) => {\n    const response = await api.reqRegister(user);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(authSuccess(result.data));\n    } else {\n      dispatch(errorMsg(result.msg));\n    }\n  };\n};\n\n//获取用户信息\nexport const getUser = () => {\n  return async (dispatch) => {\n    const response = await api.reqUser();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveUser(result.data));\n    } else {\n      dispatch(resetUser(result.msg));\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"./login.module.less\";\n\nimport { login } from \"../../redux/user/actions\";\n\nclass Login extends Component {\n  onFinish = (user) => {\n    this.props.login(user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toRegister = () => {\n    this.props.history.replace(\"/register\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    登录\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\n                    注册账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { login })(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Form, Input, Button, Alert, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Cookies from \"js-cookie\";\n\nimport styles from \"../login/login.module.less\";\n\nimport { register } from \"../../redux/user/actions\";\n\nclass Register extends Component {\n  onFinish = (user) => {\n    this.props.register(user);\n    console.log(\"Success:\", user);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  toLogin = () => {\n    this.props.history.replace(\"/login\");\n  };\n\n  render() {\n    const userId = Cookies.get(\"userId\");\n    const { msg } = this.props.user;\n    if (userId) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.main}>\n            <Form\n              wrapperCol={{ span: 24 }}\n              name=\"loginForm\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.onFinish}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <Form.Item>\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\n              </Form.Item>\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入用户名！\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"用户名\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password2\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"请再次输入密码！\",\n                  },\n                ]}\n              >\n                <Input.Password\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"密码\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Space>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    注册\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\n                    已有账号\n                  </Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ user: state.user }), { register })(\n  Register\n);\n","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {\n  TeamOutlined,\n  ProjectOutlined,\n  UserOutlined,\n  CarryOutOutlined,\n  SolutionOutlined,\n  ProfileOutlined,\n  SnippetsOutlined,\n} from '@ant-design/icons';\n\nimport styles from './sider.module.less';\n\nclass Sider extends Component {\n  static propTypes = {\n    collapsed: PropTypes.bool.isRequired,\n  };\n\n  menuList = [\n    // 包含所有导航组件的相关信息数据\n    {\n      path: '/project/profile',\n      title: '项目状态',\n      icon: <ProfileOutlined />,\n    },\n    {\n      path: '/project/member',\n      title: '成员管理',\n      icon: <TeamOutlined />,\n    },\n    {\n      path: '/project/story',\n      title: '需求分析',\n      icon: <SolutionOutlined />,\n    },\n    {\n      path: '/project/sprint',\n      title: '阶段设置',\n      icon: <CarryOutOutlined />,\n    },\n    {\n      path: '/project/board',\n      title: '任务看板',\n      icon: <ProjectOutlined />,\n    },\n    {\n      path: '/project/meeting',\n      title: '会议纪要',\n      icon: <SnippetsOutlined />,\n    },\n    {\n      path: '/account',\n      title: '个人中心',\n      icon: <UserOutlined />,\n    },\n  ];\n\n  render() {\n    const visiable = this.props.visiable;\n    const currentPath = this.props.location.pathname;\n    const selectedMenu = this.menuList\n      .findIndex((menu) => new RegExp(menu.path).test(currentPath))\n      .toString();\n    // if (!visiable) return null;\n    return (\n      <Layout.Sider\n        trigger={null}\n        collapsible\n        collapsed={this.props.collapsed}\n        className={styles.sider}\n        style={{\n          display: visiable ? '' : 'none',\n        }}\n      >\n        <div className={styles.logo}>PMS</div>\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\n          {this.menuList.map((menu, index) => (\n            <Menu.Item\n              key={index}\n              icon={menu.icon}\n              onClick={() => {\n                if (menu.path) this.props.history.replace(menu.path);\n              }}\n            >\n              {menu.title}\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Layout.Sider>\n    );\n  }\n}\n\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LogoutOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport styles from './header.module.less';\n\nconst Header = (props) => {\n  return (\n    <Layout.Header className={styles.header}>\n      {props.visiable &&\n        React.createElement(\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n          {\n            className: styles.trigger,\n            onClick: props.toggle,\n          }\n        )}\n      <div className={styles.title}>\n        <Link to=\"/\">{props.projectName}</Link>\n      </div>\n      <div>\n        <Avatar\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\n          icon={<UserOutlined />}\n        />\n        {props.username}\n      </div>\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\n\nexport default function ProjectList(props) {\n  const data = props.data;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        title=\"信息\"\n        dataIndex=\"projectName\"\n        key=\"projectName\"\n        render={(value, record) => (\n          <>\n            <h4>\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\n            </h4>\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\n              {record.description}\n            </div>\n          </>\n        )}\n      />\n      <Column\n        title=\"时间\"\n        key=\"date\"\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\n      />\n      <Column\n        title=\"操作\"\n        dataIndex=\"_id\"\n        key=\"action\"\n        render={(_id, record) => (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              props.onItemEditClick(record);\n            }}\n          >\n            <EditOutlined />\n          </a>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Modal } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (project) {\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\n      form.setFieldsValue({ ...project, rangeDate });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={project ? '编辑项目' : '创建项目'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            // form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"projectName\"\n          label=\"项目名称\"\n          rules={[\n            {\n              required: true,\n              message: '请输入项目名称！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"rangeDate\"\n          label=\"项目时间\"\n          rules={[\n            {\n              required: true,\n              message: '请选择选择项目时间！',\n            },\n          ]}\n        >\n          <RangePicker\n            style={{\n              width: '100%',\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"项目简介\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的项目简介！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\n//项目\n// const receiveProjectList = (projectList) => ({\n//   type: types.RECEIVE_PROJECT_LIST,\n//   data: projectList,\n// });\n\n// const receiveNewProject = (project) => ({\n//   type: types.RECEIVE_NEW_PROJECT,\n//   data: project,\n// });\n\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\n\nexport const switchProject = (project) => ({\n  type: types.SWITCH_PROJECT,\n  data: project,\n});\n\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\n\n// export const createProject = (project) => {\n//   return async (dispatch) => {\n//     const response = await api.reqCreateProject(project);\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveNewProject(result.data));\n//     } else {\n//       dispatch(errorMsg(result.msg));\n//     }\n//   };\n// };\n\nexport const getProject = () => {\n  return async (dispatch) => {\n    const response = await api.reqProject();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(switchProject(result.data));\n    } else {\n      dispatch(resetProject(result.msg));\n    }\n  };\n};\n\n// export const getProjectList = () => {\n//   return async (dispatch) => {\n//     const response = await api.reqProjectList();\n//     const result = response.data;\n//     if (result.code === 0) {\n//       dispatch(receiveProjectList(result.data));\n//     }\n//   };\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { Card, Modal } from 'antd';\nimport {\n  PlusCircleOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nimport ProjectList from '../../components/project/list';\nimport ProjectModal from '../../components/project/modal';\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from '../../redux/project/actions';\nimport {\n  reqProjectList,\n  reqCreateProject,\n  reqEditProject,\n} from '../../api/index';\n\nclass MyProjects extends Component {\n  state = {\n    visible: false,\n    projectList: [],\n    current: null,\n  };\n\n  showModal = (current) => {\n    console.log(current);\n    this.setState({\n      visible: true,\n      current,\n    });\n  };\n\n  handleConfirm = (item) => {\n    let that = this;\n    Modal.confirm({\n      title: '选择并切换至该项目？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        that.props.switchProject(item);\n        //todo:重置store.state中的sprints\n        Cookies.set('projectId', item._id);\n        that.props.history.push('/project/profile');\n      },\n    });\n  };\n\n  handleOk = (values) => {\n    const current = this.state.current;\n    const _id = current ? current._id : '';\n    const rangeDate = values['rangeDate'];\n    values.startDate = rangeDate[0].format('YYYY-MM-DD');\n    values.endDate = rangeDate[1].format('YYYY-MM-DD');\n\n    if (_id) {\n      //编辑\n      reqEditProject({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const projectList = this.state.projectList.map((project) =>\n            project._id === _id ? result.data : project\n          );\n          this.setState({\n            projectList,\n            visible: false,\n          });\n          //如果修改的是当前选择的项目\n          if (_id === this.props.project._id)\n            this.props.switchProject(result.data);\n        }\n      });\n    } else {\n      //创建\n      reqCreateProject(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          this.setState({\n            projectList: [result.data, ...this.state.projectList],\n            visible: false,\n          });\n        }\n      });\n    }\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      // console.log(result);\n      if (result.code === 0) {\n        this.setState({\n          projectList: result.data,\n        });\n      }\n    });\n    // this.props.getProjectList();\n  }\n\n  render() {\n    // const data = this.props.projectList;\n    const { projectList, current } = this.state;\n    return (\n      <div>\n        <Card\n          title=\"我的项目\"\n          extra={\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                this.showModal();\n              }}\n            >\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <ProjectList\n            data={projectList}\n            onConfirm={this.handleConfirm}\n            onItemEditClick={this.showModal}\n          ></ProjectList>\n        </Card>\n\n        <ProjectModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          project={current}\n        ></ProjectModal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction TaskProgress(props) {\n  function genChildren(num, className) {\n    let children = [];\n    for (let index = 0; index < num; index++) {\n      const element = (\n        <div key={index} className={`${styles.block} ${className}`}></div>\n      );\n      children.push(element);\n    }\n    return children;\n  }\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","import React, { Component } from 'react';\nimport { Card, Row, Col, Statistic } from 'antd';\nimport moment from 'moment';\nimport { TeamOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\n\nvar echarts = require('echarts/lib/echarts');\nrequire('echarts/lib/chart/line');\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/title');\nrequire('echarts/lib/component/legend');\n\nconst { Countdown } = Statistic;\n\nconst option = {\n  title: {\n    text: '燃尽图',\n  },\n  legend: {\n    data: ['剩余任务'],\n    selectedMode: false,\n    top: 10,\n  },\n  grid: {\n    left: '1%',\n    right: '1%',\n    bottom: '1%',\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'cross',\n    },\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [\n      '09-17',\n      '09-18',\n      '09-19',\n      '09-20',\n      '09-21',\n      '09-22',\n      '09-23',\n      '09-24',\n      '09-25',\n      '09-26',\n      '09-27',\n      '09-28',\n      '09-29',\n    ],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      name: '剩余任务',\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\n      type: 'line',\n      areaStyle: {},\n    },\n    {\n      data: [\n        ['09-17', 56],\n        ['09-29', 0],\n      ],\n      type: 'line',\n      lineStyle: {\n        type: 'dashed',\n      },\n    },\n  ],\n};\n\nexport default class Profile extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      const chart = echarts.init(this.chart, 'light');\n      chart.setOption(option);\n      chart.on('finished', () => {\n        chart.resize();\n      });\n    }, 0);\n\n    // const chart = echarts.init(this.chart);\n    // chart.setOption(option);\n  }\n\n  render() {\n    return (\n      // <>\n      //   <div>\n      //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\n      //   </div>\n      //   <div>目前未开始10个，进行中10个，已结束10个。</div>\n      // </>\n      <div>\n        <Row gutter={[16, 16]}>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/sprint');\n              }}\n            >\n              <Countdown\n                title=\"距离阶段结束\"\n                value={moment('2020-10-12')}\n                format=\"D 天 H 时\"\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/board');\n              }}\n            >\n              <Statistic title=\"阶段任务\" value={56} />\n              {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card\n              hoverable\n              onClick={() => {\n                this.props.history.replace('/project/member');\n              }}\n            >\n              <Statistic\n                title=\"项目成员\"\n                value={13}\n                prefix={<TeamOutlined />}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Card>\n              <div\n                ref={(el) => {\n                  this.chart = el;\n                }}\n                style={{\n                  width: '100%',\n                  height: '400px',\n                }}\n              ></div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Descriptions } from \"antd\";\n\nexport default class Meeting extends Component {\n  render() {\n    return (\n      <Card>\n        <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\n          <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\n          <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\n          <Descriptions.Item label=\"参会人员\" span={2}>\n            张三，李四，王五\n          </Descriptions.Item>\n          <Descriptions.Item label=\"会议内容\" span={2}>\n            装林步车转体领角认分办为心这因。合般形象者劳斯知管以北拉领到治。示油节走不教反回生去车之热作。\n            <br />\n            她定感认后率民作军里单由办眼平。书强革电式每科去同政形准红实。\n            <br />\n            成们只进华王第规情党圆中前群半自。林达空矿真亲分他话间白华。\n          </Descriptions.Item>\n          <Descriptions.Item label=\"待办事项\">\n            己自美素领段然得示包水济确张何只。由什世向水年北开亲南交就治造。\n            <br />\n            团影光将料受打阶图层志且小被器。生满委物更门称式上及界往派式东向思。\n            <br />\n            节复导应设改八干万期直通成数江。子一二打知拉子实料结越团论等科需展。\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card, Avatar, Tooltip } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport styles from './task.module.less';\nimport moment from 'moment';\n\n// const getItemStyle = (isDragging, draggableStyle) => ({\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : '',\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// });\nconst displayDate = (task) => {\n  switch (task.status) {\n    case 'todo':\n      return (\n        // <Tooltip title={task.createDate} placement=\"top\">\n        //   {'创建于' + moment(task.createDate).fromNow()}\n        // </Tooltip>\n        '创建于' + moment(task.createDate).format('MM-DD')\n      );\n    case 'doing':\n      return (\n        // <Tooltip title={task.startDate} placement=\"top\">\n        //   {'开始于' + moment(task.startDate).fromNow()}\n        // </Tooltip>\n        '开始于' + moment(task.startDate).format('MM-DD')\n      );\n    case 'done':\n      return (\n        // <Tooltip title={task.endDate} placement=\"top\">\n        //   {'完成于' + moment(task.endDate).fromNow()}\n        // </Tooltip>\n        '完成于' + moment(task.endDate).format('MM-DD')\n      );\n    default:\n      break;\n  }\n};\n\nexport default class Task extends Component {\n  render() {\n    const { task, index } = this.props;\n    return (\n      <Draggable\n        draggableId={task._id}\n        index={index}\n        // isDragDisabled={task.status === 'done'}\n      >\n        {(provided, snapshot) => (\n          <div\n            className={styles.container}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            // style={getItemStyle(\n            //   snapshot.isDragging,\n            //   provided.draggableProps.style\n            // )}\n          >\n            <Card hoverable={true}>\n              <p>{task.content}</p>\n              <div className={styles.date}>{displayDate(task)}</div>\n              <div>\n                <Avatar.Group>\n                  {task.users.map((user) => (\n                    <Tooltip\n                      key={user._id}\n                      title={user.username}\n                      placement=\"top\"\n                    >\n                      <Avatar\n                        style={{ backgroundColor: user.avatar }}\n                        icon={<UserOutlined />}\n                      />\n                    </Tooltip>\n                  ))}\n                </Avatar.Group>\n              </div>\n            </Card>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task';\n\nimport styles from './column.module.less';\n\n// const getListStyle = (isDraggingOver) => ({\n//   background: isDraggingOver ? 'lightblue' : '',\n// });\n\nexport default class Column extends Component {\n  render() {\n    const { status, tasks } = this.props;\n    return (\n      <div className={styles.container}>\n        <h4 className={styles.title} style={{ backgroundColor: status.color }}>\n          {status.display}\n        </h4>\n        <Droppable\n          droppableId={this.props.id}\n          // isDropDisabled={this.props.id === 'todo'}\n        >\n          {(provided) => (\n            <div\n              className={styles.taskList}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              // style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {tasks.map((task, index) => (\n                <Task key={task._id} task={task} index={index} />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Table, Avatar, Tooltip, Tag } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\n\nexport default function List(props) {\n  const { data, status } = props;\n  return (\n    <Table dataSource={data} pagination={false} rowKey=\"_id\">\n      <Column\n        width=\"90px\"\n        title=\"状态\"\n        dataIndex=\"status\"\n        key=\"status\"\n        render={(value) => {\n          const p = status[value];\n          return <Tag color={p.color}>{p.display}</Tag>;\n        }}\n      />\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\n      <Column\n        title=\"参与者\"\n        dataIndex=\"users\"\n        key=\"users\"\n        render={(users) => (\n          <Avatar.Group>\n            {users.map((user) => (\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\n                <Avatar\n                  style={{ backgroundColor: user.avatar }}\n                  icon={<UserOutlined />}\n                />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )}\n      />\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\n    </Table>\n  );\n}\n","import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Card, Radio, Empty } from 'antd';\nimport { MenuOutlined, ProjectOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nimport Column from '../../../components/board/column';\nimport List from '../../../components/board/list';\nimport { reqTaskList } from '../../../api/index';\n\nconst status = {\n  todo: {\n    color: '#4a9ff9',\n    display: '未开始',\n  },\n  doing: {\n    color: '#f9944a',\n    display: '进行中',\n  },\n  done: {\n    color: '#2ac06d',\n    display: '已完成',\n  },\n};\n\nexport default class Board extends Component {\n  state = {\n    value: 'board',\n    title: '',\n    // originalTasks: [],\n    tasks: {\n      todo: [],\n      doing: [],\n      done: [],\n    },\n  };\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    //从菜单直接点进来，没有type和id\n    const type = params.type || 'sprint';\n    const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\n\n    const title = (type === 'sprint' ? '阶段' : '需求') + id;\n    this.setState({\n      title,\n    });\n\n    reqTaskList({ type, id }).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const originalTasks = result.data;\n        const tasks = this.state.tasks;\n        originalTasks.forEach((task) => {\n          tasks[task.status].push(task);\n        });\n        // console.log(tasks);\n        this.setState({\n          tasks,\n          // originalTasks,\n        });\n      }\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\n\n  //方案2\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = source.droppableId;\n    const finish = destination.droppableId;\n\n    //查询被拖拽的task\n    const draggedTask = this.state.tasks[start].find(\n      (task) => task._id === draggableId\n    );\n    // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\n    //   (task) => task._id === draggableId\n    // );\n\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\n    draggedTask.status = finish;\n    if (finish === 'todo') {\n      draggedTask.startDate = null;\n      draggedTask.endDate = null;\n    }\n    if (finish === 'doing') {\n      draggedTask.startDate = moment().format('YYYY-MM-DD');\n      draggedTask.endDate = null;\n    }\n    if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\n    // draggedTaskInOriginalTasks.status = finish;\n\n    const { tasks } = this.state;\n    const startTasks = tasks[start];\n    const finishTasks = tasks[finish];\n\n    startTasks.splice(source.index, 1);\n    finishTasks.splice(destination.index, 0, draggedTask);\n\n    this.setState({\n      tasks,\n    });\n  };\n\n  render() {\n    const { tasks, value, title } = this.state;\n    const tasksOfList = Object.values(tasks).flat();\n\n    const boardView =\n      tasksOfList.length === 0 ? (\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n      ) : (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div style={{ display: 'flex' }}>\n            {Object.keys(status).map((c, index) => (\n              <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\n            ))}\n          </div>\n        </DragDropContext>\n      );\n    const listView = <List data={tasksOfList} status={status}></List>;\n\n    return (\n      <Card\n        title={title}\n        extra={\n          <Radio.Group\n            buttonStyle=\"solid\"\n            onChange={this.onChange}\n            value={this.state.value}\n          >\n            <Radio.Button value=\"board\">\n              <ProjectOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"list\">\n              <MenuOutlined />\n            </Radio.Button>\n          </Radio.Group>\n        }\n      >\n        {value === 'board' ? boardView : listView}\n      </Card>\n    );\n  }\n}\n","import React from 'react';\nimport { Form, Select, Modal, Avatar, Space } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function MemberModal({\n  visible,\n  onOk,\n  onCancel,\n  member,\n  users,\n  roles,\n}) {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      forceRender\n      title={member ? '编辑成员' : '添加成员'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"_id\"\n          label=\"项目成员\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目成员！',\n            },\n          ]}\n        >\n          <Select showSearch placeholder=\"选择成员\" optionFilterProp=\"title\">\n            {users.map((user, index) => (\n              <Option key={index} value={user._id} title={user.username}>\n                <Space>\n                  <Avatar\n                    style={{ backgroundColor: user.avatar }}\n                    icon={<UserOutlined />}\n                  ></Avatar>\n                  <div>\n                    <a> {user.username}</a>\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\n                  </div>\n                </Space>\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"roles\"\n          label=\"成员角色\"\n          rules={[\n            {\n              required: true,\n              message: '请选择成员角色！',\n            },\n          ]}\n        >\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\n            {roles.map((role, index) => (\n              <Option key={index} value={role.name}>\n                {role.name}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component } from 'react';\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from 'antd';\nimport {\n  UserOutlined,\n  DeleteOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\n\nimport MemberModal from '../../../components/member/modal';\nimport { reqMemberList, reqUserList } from '../../../api/index';\n\nconst roleOptions = [\n  {\n    color: '#f56a00',\n    name: '项目经理',\n  },\n  {\n    color: '#7265e6',\n    name: '前端开发',\n  },\n  {\n    color: '#00a2ae',\n    name: '后端开发',\n  },\n  {\n    color: '#ffbf00',\n    name: 'UI设计',\n  },\n];\n\nexport default class Member extends Component {\n  state = {\n    users: [],\n    members: [],\n    visible: false,\n  };\n  columns = [\n    {\n      title: '成员',\n      dataIndex: 'username',\n      render: (text, record) => (\n        <Space>\n          <Avatar\n            style={{ backgroundColor: record.avatar }}\n            icon={<UserOutlined />}\n          ></Avatar>\n          <a>{text}</a>\n        </Space>\n      ),\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      render: (text) => (\n        <span style={{ color: 'rgba(0,0,0,.45)' }}>{text}</span>\n      ),\n    },\n    {\n      title: '角色',\n      dataIndex: 'roles',\n      render: (roles) =>\n        roles.map((role, index) => (\n          <Tag key={index} color={role.color}>\n            {role.name}\n          </Tag>\n        )),\n    },\n    {\n      title: '操作',\n      dataIndex: '_id',\n      key: 'action',\n      render: (_id) => (\n        <Popconfirm\n          placement=\"left\"\n          title=\"确认删除该成员？\"\n          onConfirm={() => this.handleDel(_id)}\n          okText=\"确认\"\n          cancelText=\"取消\"\n        >\n          <a key=\"delete\">\n            <DeleteOutlined />\n          </a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  handleDel = (id) => {\n    const members = this.state.members.filter((member) => member._id !== id);\n    this.setState({ members });\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = (values) => {\n    const user = this.state.users.find((user) => user._id === values._id);\n    const users = this.state.users.filter((user) => user._id !== values._id);\n    const roles = roleOptions.filter((role) => {\n      return values.roles.findIndex((value) => role.name === value) !== -1;\n    });\n    const newMember = {\n      ...user,\n      roles,\n    };\n    const members = [newMember, ...this.state.members];\n    this.setState({\n      members,\n      users,\n      visible: false,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  componentDidMount() {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const members = result.data;\n        this.setState({\n          members,\n        });\n      }\n    });\n\n    //获取所有用户列表（添加用户时用）\n    reqUserList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const users = result.data;\n        this.setState({\n          users,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Card\n          title=\"项目成员\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            showHeader={false}\n            pagination={false}\n            rowKey=\"_id\"\n            columns={this.columns}\n            dataSource={this.state.members}\n          />\n        </Card>\n        <MemberModal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          member={null}\n          users={this.state.users}\n          roles={roleOptions}\n        ></MemberModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport {\n  EditOutlined,\n  PlusCircleOutlined,\n  ForkOutlined,\n} from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\n\nconst { Column } = Table;\n\nconst priority = [\n  {\n    color: '#2ac06d',\n    display: '低',\n  },\n  {\n    color: '#f9944a',\n    display: '中',\n  },\n  {\n    color: '#ff4d4f',\n    display: '高',\n  },\n];\n\nexport default class Story extends Component {\n  state = {\n    visible: false,\n    stories: [\n      {\n        _id: '1232312313',\n        role: '用户',\n        activity: '选择首页弹出的标签',\n        date: '2010-1-1',\n        priority: 2,\n        businessValue: '分析用户画像，智能推荐分析用户画像，智能推荐',\n        tasks: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      },\n    ],\n  };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Card\n          title=\"项目需求\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={this.state.stories}\n            pagination={false}\n            rowKey=\"_id\"\n          >\n            <Column\n              width=\"80px\"\n              title=\"优先级\"\n              dataIndex=\"priority\"\n              key=\"priority\"\n              render={(value) => {\n                const p = priority[value];\n                return (\n                  <Tag\n                    style={{ width: '40px', textAlign: 'center' }}\n                    color={p.color}\n                  >\n                    {p.display}\n                  </Tag>\n                );\n              }}\n            />\n            <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\n            <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\n            <Column\n              title=\"目的\"\n              dataIndex=\"businessValue\"\n              key=\"businessValue\"\n              progress\n            />\n\n            <Column\n              title=\"任务进度\"\n              dataIndex=\"_id\"\n              render={(id) => (\n                <Link to={`/project/board/story/${id}`}>\n                  <TaskProgress todo={3} doing={4} done={3} />\n                </Link>\n              )}\n            />\n            <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\n            <Column\n              title=\"操作\"\n              key=\"tasks\"\n              render={() => (\n                <>\n                  <a>\n                    <EditOutlined />\n                  </a>\n                  <Divider type=\"vertical\" />\n                  <a>\n                    <ForkOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <Modal\n          title=\"新增需求\"\n          width={480}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        ></Modal>\n      </div>\n    );\n  }\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\nconst receiveSprints = (sprints) => ({\n  type: types.RECEIVE_SPRINTS,\n  data: sprints,\n});\n\nconst createSprints = (sprint) => ({\n  type: types.CREATE_SPRINT,\n  data: sprint,\n});\n\nexport const createSprint = (sprint) => {\n  return async (dispatch) => {\n    const response = await api.reqCreateSprint(sprint);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(createSprints(result.data));\n    }\n  };\n};\n\nexport const getSprints = () => {\n  return async (dispatch) => {\n    const response = await api.reqSprintList();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveSprints(result.data));\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport { Card, Table, Form, DatePicker, Modal, Divider } from 'antd';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { PlusCircleOutlined, FileAddOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\nimport { createSprint, getSprints } from '../../../redux/sprints/actions';\n\nimport styles from './sprint.module.less';\n\nconst { RangePicker } = DatePicker;\nconst { Column } = Table;\n\nclass Sprint extends Component {\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleCancel = (e) => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleOk = (e) => {\n    this.form\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value['rangeDate'];\n        const startDate = rangeDate[0].format('YYYY-MM-DD');\n        const endDate = rangeDate[1].format('YYYY-MM-DD');\n        this.props.createSprint({ startDate, endDate });\n        this.setState({\n          visible: false,\n        });\n        this.form.resetFields();\n      })\n      .catch((info) => {\n        console.log('验证失败：', info);\n      });\n  };\n\n  componentDidMount() {\n    this.props.getSprints();\n  }\n\n  render() {\n    const { startDate, endDate } = this.props.project;\n    const sprints = this.props.sprints;\n    const length = sprints.length;\n\n    let newStartDate = startDate;\n\n    if (length > 0) {\n      const lastEndDate = sprints[length - 1].endDate;\n      newStartDate = moment(lastEndDate).add(1, 'days').format('YYYY-MM-DD');\n    }\n\n    return (\n      <div>\n        <Card\n          title=\"项目阶段\"\n          extra={\n            <a onClick={this.showModal}>\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\n            </a>\n          }\n        >\n          <Table\n            dataSource={sprints}\n            pagination={false}\n            rowKey=\"_id\"\n            rowClassName={(record) => {\n              return moment().isBetween(\n                record.startDate,\n                record.endDate,\n                null,\n                '[]'\n              )\n                ? styles.curSprint\n                : null;\n            }}\n          >\n            <Column\n              title=\"阶段周期\"\n              key=\"date\"\n              render={(value, record) =>\n                `${record.startDate}~${record.endDate}`\n              }\n            />\n            <Column\n              title=\"任务进度\"\n              dataIndex=\"_id\"\n              render={(id) => (\n                <Link to={`/project/board/sprint/${id}`}>\n                  <TaskProgress todo={3} doing={5} done={4} />\n                </Link>\n              )}\n            />\n            <Column\n              title=\"操作\"\n              key=\"tasks\"\n              render={() => (\n                <>\n                  {/* <Link to=\"/project/board\">\n                    <ProjectOutlined />\n                  </Link>\n                  <Divider type=\"vertical\" /> */}\n                  <a>\n                    <FileAddOutlined />\n                  </a>\n                </>\n              )}\n            />\n          </Table>\n        </Card>\n\n        <Modal\n          title=\"新增阶段\"\n          width={480}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        >\n          <Form ref={(el) => (this.form = el)}>\n            <Form.Item\n              name=\"rangeDate\"\n              rules={[\n                {\n                  required: true,\n                  message: '请选择阶段时间！',\n                },\n              ]}\n            >\n              <RangePicker\n                disabledDate={(currentDate) =>\n                  !currentDate.isBetween(newStartDate, endDate, 'day', '[]')\n                }\n                defaultPickerValue={[moment(newStartDate)]}\n                style={{\n                  width: '100%',\n                }}\n              />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n  sprints: state.sprints,\n});\n\nconst mapDispatchToProps = { createSprint, getSprints };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\n","import React from 'react';\nimport { Result } from 'antd';\n\nexport default () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    style={{\n      background: 'none',\n    }}\n    subTitle=\"页面不存在\"\n  />\n);\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { Layout, Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\n\nimport Sider from '../../components/sider/sider';\nimport Header from '../../components/header/header';\nimport MyProjects from '../my-projects/my-projects';\nimport Profile from '../project/profile/profile';\nimport Meeting from '../project/meeting/meeting';\nimport Board from '../project/board/board';\nimport Member from '../project/member/member';\nimport Story from '../project/story/story';\nimport Sprint from '../project/sprint/sprint';\nimport NotFound from '../exception/not-found';\nimport { resetUser, getUser } from '../../redux/user/actions';\nimport { resetProject, getProject } from '../../redux/project/actions';\n\nconst { Content } = Layout;\n\nclass Main extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  navList = [\n    {\n      path: '/',\n      component: MyProjects,\n      exact: true,\n    },\n    {\n      path: '/project/profile',\n      component: Profile,\n    },\n    {\n      path: '/project/member',\n      component: Member,\n    },\n    {\n      path: '/project/meeting',\n      component: Meeting,\n    },\n    {\n      path: '/project/story',\n      component: Story,\n    },\n    {\n      path: '/project/board',\n      component: Board,\n      exact: true,\n    },\n    {\n      path: '/project/board/:type/:id',\n      component: Board,\n    },\n    {\n      path: '/project/sprint',\n      component: Sprint,\n    },\n    {\n      component: NotFound,\n    },\n  ];\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  logout = () => {\n    let that = this;\n    Modal.confirm({\n      title: '确认退出登录吗？',\n      icon: <ExclamationCircleOutlined />,\n      cancelText: '取消',\n      okText: '确定',\n      onOk() {\n        Cookies.remove('projectId');\n        Cookies.remove('userId');\n        that.props.resetUser();\n        that.props.resetProject();\n      },\n    });\n  };\n\n  componentDidMount() {\n    const userId = Cookies.get('userId');\n    if (userId && !this.props.user._id) {\n      this.props.getUser();\n    }\n\n    const projectId = Cookies.get('projectId');\n    if (projectId && !this.props.project._id) {\n      this.props.getProject();\n    }\n  }\n\n  render() {\n    const userId = Cookies.get('userId');\n    const projectId = Cookies.get('projectId');\n    const visiable =\n      this.props.location.pathname === '/' && !projectId ? false : true;\n    if (!userId) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (visiable && !projectId) {\n      return <Redirect to=\"/\" />;\n    }\n\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\n\n    return (\n      <Layout\n        style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\n      >\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header\n            visiable={visiable}\n            projectName={this.props.project.projectName}\n            username={this.props.user.username}\n            collapsed={this.state.collapsed}\n            toggle={visiable ? this.toggle : null}\n            logout={this.logout}\n          />\n          <Content style={{ padding: '24px', minHeight: 'auto' }}>\n            <Switch>\n              {this.navList.map((nav, index) => (\n                <Route key={index} {...nav} />\n              ))}\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  project: state.project,\n});\n\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/es/locale/zh_CN\";\n\nimport store from \"./redux/store\";\nimport Login from \"./containers/login/login\";\nimport Register from \"./containers/register/register\";\nimport Main from \"./containers/main/main\";\n\nimport \"moment/locale/zh-cn\";\nimport \"./assets/less/index.less\";\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route component={Main} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}