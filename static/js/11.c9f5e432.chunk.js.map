{"version":3,"sources":["components/task-progress/task-progress.jsx","components/task-progress/task-progress.module.less","containers/project/profile/profile.jsx"],"names":["genChildren","num","className","children","index","element","key","styles","block","push","TaskProgress","props","container","todo","doing","done","module","exports","echarts","require","Countdown","Statistic","option","title","text","legend","data","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","trigger","axisPointer","type","xAxis","boundaryGap","yAxis","series","name","areaStyle","lineStyle","Profile","chartRef","useRef","useEffect","setTimeout","chart","init","current","setOption","on","resize","gutter","span","hoverable","onClick","history","replace","value","moment","format","valueStyle","color","prefix","ref","style","width","height"],"mappings":"6FAAA,sCAKA,SAASA,EAAYC,EAAKC,GAExB,IADA,IAAIC,EAAW,GACNC,EAAQ,EAAGA,EAAQH,EAAKG,IAAS,CACxC,IAAMC,EACJ,yBAAKC,IAAKF,EAAOF,UAAS,UAAKK,IAAOC,MAAZ,YAAqBN,KAEjDC,EAASM,KAAKJ,GAEhB,OAAOF,EAmBMO,IAhBf,SAAsBC,GACpB,OACE,yBAAKT,UAAWK,IAAOK,WACpBZ,EAAYW,EAAME,KAAMN,IAAOM,MAC/Bb,EAAYW,EAAMG,MAAOP,IAAOO,OAChCd,EAAYW,EAAMI,KAAMR,IAAOQ,S,oBCpBtCC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,0BAA0B,KAAO,0BAA0B,MAAQ,yBAAyB,KAAO,0B,iCCDnK,kIAOIC,GAPJ,OAOcC,EAAQ,MACtBA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,K,IAEAC,EAAcC,IAAdD,UAEFE,EAAS,CACbC,MAAO,CACLC,KAAM,sBAERC,OAAQ,CACNC,KAAM,CAAC,4BACPC,cAAc,EACdC,IAAK,IAEPC,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,KAAM,UAGVC,MAAO,CACLD,KAAM,WACNE,aAAa,EACbb,KAAM,CACJ,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAGJc,MAAO,CACLH,KAAM,SAERI,OAAQ,CACN,CACEC,KAAM,2BACNhB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GACxDW,KAAM,OACNM,UAAW,IAEb,CACEjB,KAAM,CACJ,CAAC,QAAS,IACV,CAAC,QAAS,IAEZW,KAAM,OACNO,UAAW,CACTP,KAAM,aAMC,SAASQ,EAAQlC,GAC9B,IAAMmC,EAAWC,iBAAO,MAWxB,OAVAC,qBAAU,WACRC,YAAW,WACT,IAAMC,EAAQhC,EAAQiC,KAAKL,EAASM,QAAS,SAC7CF,EAAMG,UAAU/B,GAChB4B,EAAMI,GAAG,YAAY,WACnBJ,EAAMK,cAEP,KACF,IASD,6BACE,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKC,KAAM,GACT,kBAAC,IAAD,CACEC,WAAS,EACTC,QAAS,WACPhD,EAAMiD,QAAQC,QAAQ,qBAGxB,kBAACzC,EAAD,CACEG,MAAM,uCACNuC,MAAOC,IAAO,cACdC,OAAO,oBACPC,WAAY,CAAEC,MAAO,eAI3B,kBAAC,IAAD,CAAKT,KAAM,GACT,kBAAC,IAAD,CACEC,WAAS,EACTC,QAAS,WACPhD,EAAMiD,QAAQC,QAAQ,oBAGxB,kBAAC,IAAD,CAAWtC,MAAM,2BAAOuC,MAAO,OAInC,kBAAC,IAAD,CAAKL,KAAM,GACT,kBAAC,IAAD,CACEC,WAAS,EACTC,QAAS,WACPhD,EAAMiD,QAAQC,QAAQ,qBAGxB,kBAAC,IAAD,CAAWtC,MAAM,2BAAOuC,MAAO,GAAIK,OAAQ,kBAAC,IAAD,WAIjD,kBAAC,IAAD,CAAKX,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,KACE,yBACEW,IAAKtB,EACLuB,MAAO,CACLC,MAAO,OACPC,OAAQ","file":"static/js/11.c9f5e432.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction genChildren(num, className) {\n  let children = [];\n  for (let index = 0; index < num; index++) {\n    const element = (\n      <div key={index} className={`${styles.block} ${className}`}></div>\n    );\n    children.push(element);\n  }\n  return children;\n}\n\nfunction TaskProgress(props) {\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3U1Y55kCNk9Nf0cyrnE5dA\",\"block\":\"_3EpNt1oR5bU4tQbOC3wv-q\",\"todo\":\"_12kVQ7M2l2de7nC5Zjgp0M\",\"doing\":\"_3A8b2Ti3cGKbsJeL7IEAM\",\"done\":\"SvILxQULxCn3hY2IlpBFW\"};","import React, { useEffect, useRef } from 'react';\nimport { Card, Row, Col, Statistic } from 'antd';\nimport moment from 'moment';\nimport { TeamOutlined } from '@ant-design/icons';\n\nimport TaskProgress from '../../../components/task-progress/task-progress';\n\nvar echarts = require('echarts/lib/echarts');\nrequire('echarts/lib/chart/line');\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/title');\nrequire('echarts/lib/component/legend');\n\nconst { Countdown } = Statistic;\n\nconst option = {\n  title: {\n    text: '燃尽图',\n  },\n  legend: {\n    data: ['剩余任务'],\n    selectedMode: false,\n    top: 10,\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    bottom: '2%',\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n    },\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [\n      '09-17',\n      '09-18',\n      '09-19',\n      '09-20',\n      '09-21',\n      '09-22',\n      '09-23',\n      '09-24',\n      '09-25',\n      '09-26',\n      '09-27',\n      '09-28',\n      '09-29',\n    ],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      name: '剩余任务',\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\n      type: 'line',\n      areaStyle: {},\n    },\n    {\n      data: [\n        ['09-17', 56],\n        ['09-29', 0],\n      ],\n      type: 'line',\n      lineStyle: {\n        type: 'dashed',\n      },\n    },\n  ],\n};\n\nexport default function Profile(props) {\n  const chartRef = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      const chart = echarts.init(chartRef.current, 'light');\n      chart.setOption(option);\n      chart.on('finished', () => {\n        chart.resize();\n      });\n    }, 0);\n  }, []);\n\n  return (\n    // <>\n    //   <div>\n    //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\n    //   </div>\n    //   <div>目前未开始10个，进行中10个，已结束10个。</div>\n    // </>\n    <div>\n      <Row gutter={[16, 16]}>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/sprint');\n            }}\n          >\n            <Countdown\n              title=\"距离阶段结束\"\n              value={moment('2020-10-12')}\n              format=\"D 天 H 时\"\n              valueStyle={{ color: '#cf1322' }}\n            />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/board');\n            }}\n          >\n            <Statistic title=\"阶段任务\" value={56} />\n            {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card\n            hoverable\n            onClick={() => {\n              props.history.replace('/project/member');\n            }}\n          >\n            <Statistic title=\"项目成员\" value={13} prefix={<TeamOutlined />} />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Card>\n            <div\n              ref={chartRef}\n              style={{\n                width: '100%',\n                height: '400px',\n              }}\n            ></div>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"],"sourceRoot":""}