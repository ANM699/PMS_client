{"version":3,"sources":["containers/login/login.module.less","components/task-progress/task-progress.module.less","components/header/header.module.less","components/board/column.module.less","components/sider/sider.module.less","components/board/item.module.less","containers/project/sprint/sprint.module.less","redux/user/reduces.js","redux/project/action-types.js","redux/project/reduces.js","redux/sprints/reduces.js","redux/reducers.js","redux/user/action-types.js","redux/sprints/action-types.js","redux/store.js","mock/mock.js","api/ajax.js","api/index.js","redux/user/actions.js","containers/login/login.jsx","containers/register/register.jsx","components/sider/sider.jsx","components/header/header.jsx","components/project/list.jsx","components/project/modal.jsx","redux/project/actions.js","containers/my-projects/my-projects.jsx","components/task-progress/task-progress.jsx","containers/project/profile/profile.jsx","containers/project/meeting/meeting.jsx","components/board/item.jsx","components/board/column.jsx","components/board/list.jsx","utils/index.js","containers/project/board/board.jsx","components/member/modal.jsx","containers/project/member/member.jsx","components/task/modal.jsx","components/story/modal.jsx","containers/project/story/story.jsx","components/task/transfer.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx","containers/exception/not-found.jsx","containers/main/main.jsx","index.js"],"names":["module","exports","initUser","username","email","msg","initProject","projectName","startDate","endDate","description","initSprints","combineReducers","user","state","action","type","data","project","sprints","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","api","Mock","mock","options","_id","Cookies","set","code","JSON","parse","body","get","RegExp","content","storyId","projectId","createDate","activity","date","businessValue","tasks","todo","doing","done","ajax","url","dataStr","Object","keys","forEach","key","substring","length","axios","post","reqLogin","password","reqRegister","reqCreateProject","reqEditProject","reqTaskList","params","reqCreateTask","status","users","reqCreateStory","role","priority","reqEditStory","authSuccess","errorMsg","resetUser","Login","onFinish","props","login","onFinishFailed","errorInfo","console","log","toRegister","history","replace","userId","this","to","className","styles","container","main","wrapperCol","span","name","initialValues","remember","Item","message","showIcon","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","onClick","Component","connect","dispatch","a","response","result","Register","register","toLogin","password2","Sider","menuList","path","title","icon","ProfileOutlined","TeamOutlined","SolutionOutlined","CarryOutOutlined","ProjectOutlined","SnippetsOutlined","visiable","currentPath","location","pathname","selectedMenu","findIndex","menu","test","toString","trigger","collapsible","collapsed","sider","style","display","logo","theme","mode","selectedKeys","map","index","withRouter","Header","header","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","backgroundColor","marginRight","LogoutOutlined","logout","Column","Table","ProjectList","dataSource","pagination","showHeader","rowKey","dataIndex","render","value","record","onConfirm","color","marginTop","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","okText","cancelText","labelCol","label","min","TextArea","rows","switchProject","resetProject","MyProjects","projectList","current","showModal","setState","handleConfirm","item","that","Modal","confirm","ExclamationCircleOutlined","push","handleOk","format","res","handleCancel","extra","PlusCircleOutlined","fontSize","mapDispatchToProps","TaskProgress","genChildren","num","children","element","block","echarts","require","Countdown","Statistic","option","text","legend","selectedMode","top","grid","left","right","bottom","containLabel","tooltip","axisPointer","xAxis","boundaryGap","yAxis","series","areaStyle","lineStyle","Profile","setTimeout","chart","init","setOption","on","resize","gutter","hoverable","valueStyle","ref","el","height","Meeting","size","bordered","column","task","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","displayDate","Group","placement","avatar","droppableId","id","taskList","droppableProps","List","p","sortTasks","sortedTasks","Array","isArray","Board","onChange","target","onDragEnd","destination","source","start","finish","draggedTask","find","startTasks","finishTasks","splice","match","tasksOfList","flat","boardView","image","Empty","PRESENTED_IMAGE_SIMPLE","c","listView","buttonStyle","Button","MenuOutlined","Option","Select","MemberModal","member","roles","showSearch","optionFilterProp","allowClear","roleOptions","Member","members","columns","handleDel","DeleteOutlined","filter","TaskModal","StoryModal","story","Story","storyModalVisible","taskModalVisible","storyList","showStoryModal","showTaskModal","handleStoryCancel","handleTaskCancel","handleTaskOk","handleStoryOk","expandable","expandedRowRender","rowExpandable","textAlign","progress","ForkOutlined","TaskTransfer","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","onSelect","selectedRowKeys","scroll","y","onRow","includes","createSprints","sprint","Sprint","transferVisible","targetKeys","nextTargetKeys","showTransferModal","handleTransferCancel","createSprint","handleTransferOk","getSprints","newStartDate","lastEndDate","add","rowClassName","isBetween","curSprint","AppstoreAddOutlined","disabledDate","currentDate","defaultPickerValue","background","subTitle","Content","Layout","Main","navList","component","exact","NotFound","remove","getUser","getProject","position","minHeight","padding","nav","ReactDOM","locale","store","document","getElementById"],"mappings":"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","file":"static/js/main.306f1e01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RVmFXkm3NpCTVXrhpAky_\",\"content\":\"_2Htpzx3R8oKPu3PkWf4WoK\",\"main\":\"_1f5ImrUK28jULxBPy6Vr4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1OudY3eOKhometcdjAwwJe\",\"block\":\"_3XQvD5xzQqFYVc82P0lIj5\",\"todo\":\"F8xQiMGthcmBSQ-2y0WyE\",\"doing\":\"_3iTTJmnixGLrDuefYG5tpt\",\"done\":\"_27SZsenZ6rYbNWvlmf0x5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_3KC7A6KeRiBRBNS8pjubt2\",\"logout\":\"_2ZSJ5f9P9bbeghV5GDeiDl\",\"trigger\":\"_1HT5wiUkXowZkSyhDkNL_r\",\"title\":\"_3PD8D_5zvRE42Yw2v6pHeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_28Yq8Uj4udGSGVy9BijsDd\",\"title\":\"_3qdcpPcztQVfUl2awh8bA6\",\"taskList\":\"r7XB1Ka3JINz4aqCER96g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"_1ouATjjGDUa7atLAzCEEI1\",\"logo\":\"_11ozg1j2cLMixBMi6Bvoxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2HGpQcOxDIzDn9vTQMCg0m\",\"date\":\"_1FIFhu2ilokbdq6x52XLA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_21kfxKD7nJ8vn4TuGLGB3u\"};","import * as types from './action-types';\r\n\r\nconst initUser = {\r\n  username: '',\r\n  email: '',\r\n  msg: '',\r\n};\r\n\r\nexport function user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case types.AUTH_SUCCESS:\r\n      return action.data;\r\n    case types.RECEIVE_USER:\r\n      return action.data;\r\n    case types.RESET_USER:\r\n      return {\r\n        ...initUser,\r\n        msg: action.data,\r\n      };\r\n    case types.ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        msg: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","//获取项目列表\r\n// export const RECEIVE_PROJECT_LIST = 'RECEIVE_PROJECT_LIST';\r\n//新增项目到列表\r\n// export const RECEIVE_NEW_PROJECT = 'RECEIVE_NEW_PROJECT';\r\n//选择并切换至该项目\r\nexport const SWITCH_PROJECT = 'SWITCH_PROJECT';\r\n//退出时注销当前选择的项目\r\nexport const RESET_PROJECT = 'RESET_PROJECT';\r\n//项目请求出错\r\nexport const ERROR_MSG = 'ERROR_MSG';\r\n","import * as types from './action-types';\r\n\r\nconst initProject = {\r\n  projectName: '',\r\n  startDate: null,\r\n  endDate: null,\r\n  description: '',\r\n  msg: '',\r\n};\r\n\r\nexport function project(state = initProject, action) {\r\n  switch (action.type) {\r\n    case types.SWITCH_PROJECT:\r\n      return action.data;\r\n    case types.RESET_PROJECT:\r\n      return {\r\n        ...initProject,\r\n        msg: action.data,\r\n      };\r\n    case types.ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        msg: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// export function projectList(state = [], action) {\r\n//   switch (action.type) {\r\n//     case types.RECEIVE_PROJECT_LIST:\r\n//       return action.data;\r\n//     case types.RECEIVE_NEW_PROJECT:\r\n//       return [action.data, ...state];\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n","import * as types from './action-types';\r\n\r\nconst initSprints = [];\r\n\r\nexport function sprints(state = initSprints, action) {\r\n  switch (action.type) {\r\n    case types.RECEIVE_SPRINTS:\r\n      return action.data;\r\n    case types.CREATE_SPRINT:\r\n      return [...state, action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/*\r\n包含多个用于生成新的state 的reducer 函数的模块\r\n*/\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { user } from './user/reduces';\r\nimport { project } from './project/reduces';\r\nimport { sprints } from './sprints/reduces';\r\n\r\n// 返回合并后的reducer 函数\r\nexport default combineReducers({\r\n  user,\r\n  project,\r\n  sprints,\r\n  // projectList,\r\n});\r\n","//验证成功\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\n//获取当前用户\r\nexport const RECEIVE_USER = 'RECEIVE_USER';\r\n\r\n//用户请求出错\r\nexport const ERROR_MSG = 'ERROR_MSG';\r\n\r\nexport const RESET_USER = 'RESET_USER';\r\n","//获取当前项目冲刺周期\r\nexport const RECEIVE_SPRINTS = 'RECEIVE_SPRINTS';\r\n//新增冲刺周期\r\nexport const CREATE_SPRINT = 'CREATE_SPRINT';\r\n","/*\nredux 最核心的store 对象模块\n*/\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import Mock from 'mockjs';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst api = 'http://mock';\r\n\r\nMock.mock(`${api}/users/login`, 'post', function (options) {\r\n  const _id = Mock.mock('@id');\r\n  Cookies.set('userId', _id);\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: JSON.parse(options.body).username,\r\n      _id,\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/register`, 'post', function (options) {\r\n  const body = JSON.parse(options.body);\r\n  if (body.username === 'guoyunxiang') {\r\n    return {\r\n      code: 1,\r\n      msg: '用户名已经被注册',\r\n    };\r\n  }\r\n  const _id = Mock.mock('@id');\r\n  Cookies.set('userId', _id);\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: body.username,\r\n      _id,\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/user`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      username: Mock.mock('@last'),\r\n      _id: Cookies.get('userId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/list`, 'get', function () {\r\n  const { data } = Mock.mock({\r\n    'data|5-10': [\r\n      {\r\n        _id: '@id',\r\n        projectName: '@ctitle',\r\n        description: '@cparagraph(2,3)',\r\n        startDate: '2020-07-14',\r\n        endDate: '2020-12-24',\r\n      },\r\n    ],\r\n  });\r\n  return {\r\n    code: 0,\r\n    data: [\r\n      // {\r\n      //   _id: \"1000000000\",\r\n      //   projectName: \"BesTV互联网电视助手\",\r\n      //   description: \"通过微信小程序实现登录，点播，聊天等大小屏互动功能。\",\r\n      //   startDate: \"2020-08-04\",\r\n      //   endDate: \"2020-12-31\",\r\n      // },\r\n      ...data,\r\n    ],\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/projects/edit/` + '.*'), 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/project`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      projectName: Mock.mock('@ctitle'),\r\n      description: Mock.mock('@cparagraph(2,3)'),\r\n      _id: Cookies.get('projectId'),\r\n      startDate: '2020-07-14',\r\n      endDate: '2020-12-24',\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/tasks/list` + '.*'), 'get', function (options) {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|10-15': [\r\n        {\r\n          _id: '@id',\r\n          content: '@csentence',\r\n          'status|1': ['todo', 'doing', 'done'],\r\n          storyId: '@id',\r\n          projectId: Cookies.get('projectId'),\r\n          createDate: '2020-07-14',\r\n          startDate: '2020-09-15',\r\n          endDate: '2020-09-22',\r\n          'users|0-5': [\r\n            {\r\n              _id: '@id',\r\n              'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n              username: '@last',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/projects/members`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|8-12': [\r\n        {\r\n          _id: '@id',\r\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n          username: '@last',\r\n          email: '@email',\r\n          'roles|1-4': [\r\n            {\r\n              'color|1': ['#f56a00', '#7265e6', '#00a2ae', '#ffbf00'],\r\n              'name|1': ['项目经理', '前端开发', '后端开发', 'UI设计'],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/users/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|5-8': [\r\n        {\r\n          _id: '@id',\r\n          'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n          username: '@last',\r\n          email: '@email',\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/sprints/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      _id: Mock.mock('@id'),\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/sprints/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    data: [\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-07-14',\r\n        endDate: '2020-07-30',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: '@date',\r\n              endDate: '@date',\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-07-31',\r\n        endDate: '2020-08-26',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: '@date',\r\n              endDate: '@date',\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n      {\r\n        _id: Mock.mock('@id'),\r\n        startDate: '2020-08-27',\r\n        endDate: '2020-09-13',\r\n        ...Mock.mock({\r\n          'tasks|10-20': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: '@date',\r\n              endDate: '@date',\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/stories/list`, 'get', function () {\r\n  return {\r\n    code: 0,\r\n    ...Mock.mock({\r\n      'data|8-10': [\r\n        {\r\n          _id: '@id',\r\n          'role|1': ['用户', 'VIP', '管理员', '项目经理'],\r\n          activity: '@cword(10, 15)',\r\n          date: '@date',\r\n          'priority|1': [0, 1, 2],\r\n          businessValue: '@cword(10, 15)',\r\n          'tasks|3-5': [\r\n            {\r\n              _id: '@id',\r\n              content: '@csentence',\r\n              'status|1': ['todo', 'doing', 'done'],\r\n              projectId: Cookies.get('projectId'),\r\n              createDate: '@date',\r\n              startDate: '@date',\r\n              endDate: '@date',\r\n              'users|0-5': [\r\n                {\r\n                  _id: '@id',\r\n                  'avatar|1': ['#f56a00', '#7265e6', '#00a2ae'],\r\n                  username: '@last',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    }),\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/tasks/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n      projectId: Cookies.get('projectId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(`${api}/storys/create`, 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n      _id: Mock.mock('@id'),\r\n      tasks: {\r\n        todo: [],\r\n        doing: [],\r\n        done: [],\r\n      },\r\n      projectId: Cookies.get('projectId'),\r\n    },\r\n  };\r\n});\r\n\r\nMock.mock(RegExp(`${api}/storys/edit/` + '.*'), 'post', function (options) {\r\n  return {\r\n    code: 0,\r\n    data: {\r\n      ...JSON.parse(options.body),\r\n    },\r\n  };\r\n});\r\n","import axios from \"axios\";\r\nimport \"../mock/mock\";\r\n\r\nconst api = \"http://mock\";\r\n\r\nexport default function ajax(url = \"\", data = {}, type = \"GET\") {\r\n  if (type === \"GET\") {\r\n    let dataStr = \"\";\r\n    Object.keys(data).forEach((key) => {\r\n      dataStr += key + \"=\" + data[key] + \"&\";\r\n    });\r\n    if (dataStr) {\r\n      dataStr = \"?\" + dataStr.substring(0, dataStr.length - 1);\r\n    }\r\n    return axios.get(api + url + dataStr);\r\n  } else {\r\n    return axios.post(api + url, data);\r\n  }\r\n}\r\n","import ajax from './ajax';\r\n\r\nexport const reqLogin = ({ username, password }) => {\r\n  return ajax('/users/login', { username, password }, 'POST');\r\n};\r\n\r\nexport const reqRegister = ({ username, password }) => {\r\n  return ajax('/users/register', { username, password }, 'POST');\r\n};\r\n\r\nexport const reqUser = () => {\r\n  return ajax('/users/user');\r\n};\r\n\r\n//获取所有注册用户列表\r\nexport const reqUserList = () => {\r\n  return ajax('/users/list');\r\n};\r\n\r\n//新增项目\r\nexport const reqCreateProject = ({\r\n  projectName,\r\n  startDate,\r\n  endDate,\r\n  description,\r\n}) => {\r\n  return ajax(\r\n    '/projects/create',\r\n    { projectName, startDate, endDate, description },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//编辑项目\r\nexport const reqEditProject = ({\r\n  _id,\r\n  projectName,\r\n  startDate,\r\n  endDate,\r\n  description,\r\n}) => {\r\n  return ajax(\r\n    `/projects/edit/${_id}`,\r\n    { _id, projectName, startDate, endDate, description },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//获取项目信息\r\nexport const reqProject = () => {\r\n  return ajax('/projects/project');\r\n};\r\n\r\n//获取项目列表\r\nexport const reqProjectList = () => {\r\n  return ajax('/projects/list');\r\n};\r\n\r\n//根据projectId获取阶段下或者用户故事下的任务列表\r\nexport const reqTaskList = (params) => {\r\n  return ajax('/tasks/list', params);\r\n};\r\n\r\n//根据projectId获取成员列表\r\nexport const reqMemberList = () => {\r\n  return ajax('/projects/members');\r\n};\r\n\r\n//根据projectId获取冲刺周期列表\r\nexport const reqSprintList = () => {\r\n  return ajax('/sprints/list');\r\n};\r\n//新增冲刺周期\r\nexport const reqCreateSprint = ({ startDate, endDate }) => {\r\n  return ajax('/sprints/create', { startDate, endDate }, 'POST');\r\n};\r\n\r\n//根据projectId获取用户故事列表\r\nexport const reqStoryList = () => {\r\n  return ajax('/stories/list');\r\n};\r\n\r\n//根据projectId获取任务列表\r\n// export const reqTaskList = () => {\r\n//   return ajax('/tasks/list');\r\n// };\r\n\r\n//新增任务\r\nexport const reqCreateTask = ({\r\n  content,\r\n  createDate,\r\n  status = 'todo',\r\n  users = [],\r\n}) => {\r\n  return ajax('/tasks/create', { content, createDate, status, users }, 'POST');\r\n};\r\n\r\n//新增用户故事\r\nexport const reqCreateStory = ({\r\n  role,\r\n  activity,\r\n  priority,\r\n  businessValue,\r\n  date,\r\n}) => {\r\n  return ajax(\r\n    '/storys/create',\r\n    { role, activity, priority, businessValue, date },\r\n    'POST'\r\n  );\r\n};\r\n\r\n//编辑用户故事\r\nexport const reqEditStory = ({\r\n  _id,\r\n  role,\r\n  activity,\r\n  priority,\r\n  businessValue,\r\n  date,\r\n}) => {\r\n  return ajax(\r\n    `/storys/edit/${_id}`,\r\n    { _id, role, activity, priority, businessValue, date },\r\n    'POST'\r\n  );\r\n};\r\n","import * as types from \"./action-types\";\r\nimport * as api from \"../../api\";\r\n\r\n//用户\r\nconst authSuccess = (user) => ({ type: types.AUTH_SUCCESS, data: user });\r\n\r\nconst receiveUser = (user) => ({ type: types.RECEIVE_USER, data: user });\r\n\r\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\r\n\r\nexport const resetUser = (msg) => {\r\n  return { type: types.RESET_USER, data: msg };\r\n};\r\n\r\n//登录\r\nexport const login = (user) => {\r\n  const { username, password } = user;\r\n  if (!username || !password) {\r\n    return errorMsg(\"请输入用户名和密码\");\r\n  }\r\n  return async (dispatch) => {\r\n    const response = await api.reqLogin(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n//注册\r\nexport const register = (user) => {\r\n  const { username, password, password2 } = user;\r\n  if (!username || !password || !password2) {\r\n    return errorMsg(\"请输入用户名和密码\");\r\n  }\r\n  if (password !== password2) {\r\n    return errorMsg(\"输入的密码不一致\");\r\n  }\r\n  return async (dispatch) => {\r\n    const response = await api.reqRegister(user);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(authSuccess(result.data));\r\n    } else {\r\n      dispatch(errorMsg(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n//获取用户信息\r\nexport const getUser = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqUser();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(receiveUser(result.data));\r\n    } else {\r\n      dispatch(resetUser(result.msg));\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Input, Button, Alert, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport styles from \"./login.module.less\";\r\n\r\nimport { login } from \"../../redux/user/actions\";\r\n\r\nclass Login extends Component {\r\n  onFinish = (user) => {\r\n    this.props.login(user);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  toRegister = () => {\r\n    this.props.history.replace(\"/register\");\r\n  };\r\n\r\n  render() {\r\n    const userId = Cookies.get(\"userId\");\r\n    const { msg } = this.props.user;\r\n    if (userId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.main}>\r\n            <Form\r\n              wrapperCol={{ span: 24 }}\r\n              name=\"loginForm\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.onFinish}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入用户名！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"用户名\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    登录\r\n                  </Button>\r\n                  <Button htmlType=\"button\" onClick={this.toRegister}>\r\n                    注册账号\r\n                  </Button>\r\n                </Space>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Form, Input, Button, Alert, Space } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport styles from \"../login/login.module.less\";\r\n\r\nimport { register } from \"../../redux/user/actions\";\r\n\r\nclass Register extends Component {\r\n  onFinish = (user) => {\r\n    this.props.register(user);\r\n    console.log(\"Success:\", user);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  toLogin = () => {\r\n    this.props.history.replace(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const userId = Cookies.get(\"userId\");\r\n    const { msg } = this.props.user;\r\n    if (userId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <div className={styles.main}>\r\n            <Form\r\n              wrapperCol={{ span: 24 }}\r\n              name=\"loginForm\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.onFinish}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <Form.Item>\r\n                {msg ? <Alert type=\"error\" message={msg} showIcon /> : null}\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入用户名！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"用户名\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password2\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"请再次输入密码！\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"密码\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    注册\r\n                  </Button>\r\n                  <Button htmlType=\"button\" onClick={this.toLogin}>\r\n                    已有账号\r\n                  </Button>\r\n                </Space>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { register })(\r\n  Register\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  TeamOutlined,\r\n  ProjectOutlined,\r\n  UserOutlined,\r\n  CarryOutOutlined,\r\n  SolutionOutlined,\r\n  ProfileOutlined,\r\n  SnippetsOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport styles from './sider.module.less';\r\n\r\nclass Sider extends Component {\r\n  static propTypes = {\r\n    collapsed: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  menuList = [\r\n    // 包含所有导航组件的相关信息数据\r\n    {\r\n      path: '/project/profile',\r\n      title: '项目状态',\r\n      icon: <ProfileOutlined />,\r\n    },\r\n    {\r\n      path: '/project/member',\r\n      title: '成员管理',\r\n      icon: <TeamOutlined />,\r\n    },\r\n    {\r\n      path: '/project/story',\r\n      title: '需求分析',\r\n      icon: <SolutionOutlined />,\r\n    },\r\n    {\r\n      path: '/project/sprint',\r\n      title: '阶段设置',\r\n      icon: <CarryOutOutlined />,\r\n    },\r\n    {\r\n      path: '/project/board',\r\n      title: '任务看板',\r\n      icon: <ProjectOutlined />,\r\n    },\r\n    {\r\n      path: '/project/meeting',\r\n      title: '会议纪要',\r\n      icon: <SnippetsOutlined />,\r\n    },\r\n    {\r\n      path: '/account',\r\n      title: '个人中心',\r\n      icon: <UserOutlined />,\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const visiable = this.props.visiable;\r\n    const currentPath = this.props.location.pathname;\r\n    const selectedMenu = this.menuList\r\n      .findIndex((menu) => new RegExp(menu.path).test(currentPath))\r\n      .toString();\r\n    // if (!visiable) return null;\r\n    return (\r\n      <Layout.Sider\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={this.props.collapsed}\r\n        className={styles.sider}\r\n        style={{\r\n          display: visiable ? '' : 'none',\r\n        }}\r\n      >\r\n        <div className={styles.logo}>PMS</div>\r\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedMenu]}>\r\n          {this.menuList.map((menu, index) => (\r\n            <Menu.Item\r\n              key={index}\r\n              icon={menu.icon}\r\n              onClick={() => {\r\n                if (menu.path) this.props.history.replace(menu.path);\r\n              }}\r\n            >\r\n              {menu.title}\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu>\r\n      </Layout.Sider>\r\n    );\r\n  }\r\n}\r\n\r\n//向外暴露withRouter()包装产生的组件，在非路由组件中使用路由库的API\r\n//内部会向组件中传入一些路由组件特有的属性：history/location/math\r\nexport default withRouter(Sider);\r\n","import React from 'react';\r\nimport { Layout, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport styles from './header.module.less';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Layout.Header className={styles.header}>\r\n      {props.visiable &&\r\n        React.createElement(\r\n          props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: styles.trigger,\r\n            onClick: props.toggle,\r\n          }\r\n        )}\r\n      <div className={styles.title}>\r\n        <Link to=\"/\">{props.projectName}</Link>\r\n      </div>\r\n      <div>\r\n        <Avatar\r\n          style={{ backgroundColor: '#00a2ae', marginRight: 8 }}\r\n          icon={<UserOutlined />}\r\n        />\r\n        {props.username}\r\n      </div>\r\n      <LogoutOutlined className={styles.logout} onClick={props.logout} />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Column } = Table;\r\n\r\nexport default function ProjectList(props) {\r\n  const data = props.data;\r\n  return (\r\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\r\n      <Column\r\n        title=\"信息\"\r\n        dataIndex=\"projectName\"\r\n        key=\"projectName\"\r\n        render={(value, record) => (\r\n          <>\r\n            <h4>\r\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\r\n            </h4>\r\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\r\n              {record.description}\r\n            </div>\r\n          </>\r\n        )}\r\n      />\r\n      <Column\r\n        title=\"时间\"\r\n        key=\"date\"\r\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\r\n      />\r\n      <Column\r\n        title=\"操作\"\r\n        dataIndex=\"_id\"\r\n        key=\"action\"\r\n        render={(_id, record) => (\r\n          <a\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.onItemEditClick(record);\r\n            }}\r\n          >\r\n            <EditOutlined />\r\n          </a>\r\n        )}\r\n      />\r\n    </Table>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Input, DatePicker, Modal } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (project) {\r\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\r\n      form.setFieldsValue({ ...project, rangeDate });\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={project ? '编辑项目' : '创建项目'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            // form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"projectName\"\r\n          label=\"项目名称\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入项目名称！',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"rangeDate\"\r\n          label=\"项目时间\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择项目时间！',\r\n            },\r\n          ]}\r\n        >\r\n          <RangePicker\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"description\"\r\n          label=\"项目简介\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符的项目简介！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as types from './action-types';\r\nimport * as api from '../../api';\r\n\r\n//项目\r\n// const receiveProjectList = (projectList) => ({\r\n//   type: types.RECEIVE_PROJECT_LIST,\r\n//   data: projectList,\r\n// });\r\n\r\n// const receiveNewProject = (project) => ({\r\n//   type: types.RECEIVE_NEW_PROJECT,\r\n//   data: project,\r\n// });\r\n\r\nconst errorMsg = (msg) => ({ type: types.ERROR_MSG, data: msg });\r\n\r\nexport const switchProject = (project) => ({\r\n  type: types.SWITCH_PROJECT,\r\n  data: project,\r\n});\r\n\r\nexport const resetProject = (msg) => ({ type: types.RESET_PROJECT, data: msg });\r\n\r\n// export const createProject = (project) => {\r\n//   return async (dispatch) => {\r\n//     const response = await api.reqCreateProject(project);\r\n//     const result = response.data;\r\n//     if (result.code === 0) {\r\n//       dispatch(receiveNewProject(result.data));\r\n//     } else {\r\n//       dispatch(errorMsg(result.msg));\r\n//     }\r\n//   };\r\n// };\r\n\r\nexport const getProject = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqProject();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(switchProject(result.data));\r\n    } else {\r\n      dispatch(resetProject(result.msg));\r\n    }\r\n  };\r\n};\r\n\r\n// export const getProjectList = () => {\r\n//   return async (dispatch) => {\r\n//     const response = await api.reqProjectList();\r\n//     const result = response.data;\r\n//     if (result.code === 0) {\r\n//       dispatch(receiveProjectList(result.data));\r\n//     }\r\n//   };\r\n// };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Cookies from 'js-cookie';\r\nimport { Card, Modal } from 'antd';\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ProjectList from '../../components/project/list';\r\nimport ProjectModal from '../../components/project/modal';\r\nimport {\r\n  // createProject,\r\n  // getProjectList,\r\n  switchProject,\r\n} from '../../redux/project/actions';\r\nimport {\r\n  reqProjectList,\r\n  reqCreateProject,\r\n  reqEditProject,\r\n} from '../../api/index';\r\n\r\nclass MyProjects extends Component {\r\n  state = {\r\n    visible: false,\r\n    projectList: [],\r\n    current: null,\r\n  };\r\n\r\n  showModal = (current) => {\r\n    this.setState({\r\n      visible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  handleConfirm = (item) => {\r\n    let that = this;\r\n    Modal.confirm({\r\n      title: '选择并切换至该项目？',\r\n      icon: <ExclamationCircleOutlined />,\r\n      cancelText: '取消',\r\n      okText: '确定',\r\n      onOk() {\r\n        that.props.switchProject(item);\r\n        //todo:重置store.state中的sprints\r\n        Cookies.set('projectId', item._id);\r\n        that.props.history.push('/project/profile');\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOk = (values) => {\r\n    const current = this.state.current;\r\n    const _id = current ? current._id : '';\r\n    const rangeDate = values['rangeDate'];\r\n    values.startDate = rangeDate[0].format('YYYY-MM-DD');\r\n    values.endDate = rangeDate[1].format('YYYY-MM-DD');\r\n\r\n    if (_id) {\r\n      //编辑\r\n      reqEditProject({ ...values, _id }).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          const projectList = this.state.projectList.map((project) =>\r\n            project._id === _id ? result.data : project\r\n          );\r\n          this.setState({\r\n            projectList,\r\n            visible: false,\r\n          });\r\n          //如果修改的是当前选择的项目\r\n          if (_id === this.props.project._id)\r\n            this.props.switchProject(result.data);\r\n        }\r\n      });\r\n    } else {\r\n      //创建\r\n      reqCreateProject(values).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          this.setState({\r\n            projectList: [result.data, ...this.state.projectList],\r\n            visible: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqProjectList().then((res) => {\r\n      const result = res.data;\r\n      // console.log(result);\r\n      if (result.code === 0) {\r\n        this.setState({\r\n          projectList: result.data,\r\n        });\r\n      }\r\n    });\r\n    // this.props.getProjectList();\r\n  }\r\n\r\n  render() {\r\n    // const data = this.props.projectList;\r\n    const { projectList, current } = this.state;\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"我的项目\"\r\n          extra={\r\n            <a\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.showModal();\r\n              }}\r\n            >\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <ProjectList\r\n            data={projectList}\r\n            onConfirm={this.handleConfirm}\r\n            onItemEditClick={this.showModal}\r\n          ></ProjectList>\r\n        </Card>\r\n\r\n        <ProjectModal\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          project={current}\r\n        ></ProjectModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // projectList: state.projectList,\r\n  project: state.project,\r\n});\r\n\r\nconst mapDispatchToProps = { switchProject };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './task-progress.module.less';\r\n\r\nfunction TaskProgress(props) {\r\n  function genChildren(num, className) {\r\n    let children = [];\r\n    for (let index = 0; index < num; index++) {\r\n      const element = (\r\n        <div key={index} className={`${styles.block} ${className}`}></div>\r\n      );\r\n      children.push(element);\r\n    }\r\n    return children;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      {genChildren(props.todo, styles.todo)}\r\n      {genChildren(props.doing, styles.doing)}\r\n      {genChildren(props.done, styles.done)}\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskProgress.propTypes = {\r\n  todo: PropTypes.number.isRequired,\r\n  doing: PropTypes.number.isRequired,\r\n  done: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TaskProgress;\r\n","import React, { Component } from 'react';\r\nimport { Card, Row, Col, Statistic } from 'antd';\r\nimport moment from 'moment';\r\nimport { TeamOutlined } from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\n\r\nvar echarts = require('echarts/lib/echarts');\r\nrequire('echarts/lib/chart/line');\r\nrequire('echarts/lib/component/tooltip');\r\nrequire('echarts/lib/component/title');\r\nrequire('echarts/lib/component/legend');\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst option = {\r\n  title: {\r\n    text: '燃尽图',\r\n  },\r\n  legend: {\r\n    data: ['剩余任务'],\r\n    selectedMode: false,\r\n    top: 10,\r\n  },\r\n  grid: {\r\n    left: '1%',\r\n    right: '1%',\r\n    bottom: '1%',\r\n    containLabel: true,\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'cross',\r\n    },\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    boundaryGap: false,\r\n    data: [\r\n      '09-17',\r\n      '09-18',\r\n      '09-19',\r\n      '09-20',\r\n      '09-21',\r\n      '09-22',\r\n      '09-23',\r\n      '09-24',\r\n      '09-25',\r\n      '09-26',\r\n      '09-27',\r\n      '09-28',\r\n      '09-29',\r\n    ],\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n  },\r\n  series: [\r\n    {\r\n      name: '剩余任务',\r\n      data: [56, 50, 55, 48, 40, 30, 24, 22, 15, 11, 8, 3, 2, 1],\r\n      type: 'line',\r\n      areaStyle: {},\r\n    },\r\n    {\r\n      data: [\r\n        ['09-17', 56],\r\n        ['09-29', 0],\r\n      ],\r\n      type: 'line',\r\n      lineStyle: {\r\n        type: 'dashed',\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class Profile extends Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      const chart = echarts.init(this.chart, 'light');\r\n      chart.setOption(option);\r\n      chart.on('finished', () => {\r\n        chart.resize();\r\n      });\r\n    }, 0);\r\n\r\n    // const chart = echarts.init(this.chart);\r\n    // chart.setOption(option);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <>\r\n      //   <div>\r\n      //     当前处于第2个周期(2020-9-13~2020-10-10)，该周期共有任务30个，其中3个任务为上个周期遗留。\r\n      //   </div>\r\n      //   <div>目前未开始10个，进行中10个，已结束10个。</div>\r\n      // </>\r\n      <div>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/sprint');\r\n              }}\r\n            >\r\n              <Countdown\r\n                title=\"距离阶段结束\"\r\n                value={moment('2020-10-12')}\r\n                format=\"D 天 H 时\"\r\n                valueStyle={{ color: '#cf1322' }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/board');\r\n              }}\r\n            >\r\n              <Statistic title=\"阶段任务\" value={56} />\r\n              {/* <TaskProgress todo={10} doing={39} done={7}></TaskProgress> */}\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card\r\n              hoverable\r\n              onClick={() => {\r\n                this.props.history.replace('/project/member');\r\n              }}\r\n            >\r\n              <Statistic\r\n                title=\"项目成员\"\r\n                value={13}\r\n                prefix={<TeamOutlined />}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Card>\r\n              <div\r\n                ref={(el) => {\r\n                  this.chart = el;\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '400px',\r\n                }}\r\n              ></div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Descriptions } from \"antd\";\r\n\r\nexport default class Meeting extends Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Descriptions size=\"middle\" title=\"阶段例会\" bordered column={2}>\r\n          <Descriptions.Item label=\"会议时间\">2020-09-12</Descriptions.Item>\r\n          <Descriptions.Item label=\"会议地点\">302</Descriptions.Item>\r\n          <Descriptions.Item label=\"参会人员\" span={2}>\r\n            张三，李四，王五\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"会议内容\" span={2}>\r\n            装林步车转体领角认分办为心这因。合般形象者劳斯知管以北拉领到治。示油节走不教反回生去车之热作。\r\n            <br />\r\n            她定感认后率民作军里单由办眼平。书强革电式每科去同政形准红实。\r\n            <br />\r\n            成们只进华王第规情党圆中前群半自。林达空矿真亲分他话间白华。\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"待办事项\">\r\n            己自美素领段然得示包水济确张何只。由什世向水年北开亲南交就治造。\r\n            <br />\r\n            团影光将料受打阶图层志且小被器。生满委物更门称式上及界往派式东向思。\r\n            <br />\r\n            节复导应设改八干万期直通成数江。子一二打知拉子实料结越团论等科需展。\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Card, Avatar, Tooltip } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport styles from './item.module.less';\r\nimport moment from 'moment';\r\n\r\n// const getItemStyle = (isDragging, draggableStyle) => ({\r\n//   // change background colour if dragging\r\n//   background: isDragging ? 'lightgreen' : '',\r\n//   // styles we need to apply on draggables\r\n//   ...draggableStyle,\r\n// });\r\nconst displayDate = (task) => {\r\n  switch (task.status) {\r\n    case 'todo':\r\n      return (\r\n        // <Tooltip title={task.createDate} placement=\"top\">\r\n        //   {'创建于' + moment(task.createDate).fromNow()}\r\n        // </Tooltip>\r\n        '创建于' + moment(task.createDate).format('MM-DD')\r\n      );\r\n    case 'doing':\r\n      return (\r\n        // <Tooltip title={task.startDate} placement=\"top\">\r\n        //   {'开始于' + moment(task.startDate).fromNow()}\r\n        // </Tooltip>\r\n        '开始于' + moment(task.startDate).format('MM-DD')\r\n      );\r\n    case 'done':\r\n      return (\r\n        // <Tooltip title={task.endDate} placement=\"top\">\r\n        //   {'完成于' + moment(task.endDate).fromNow()}\r\n        // </Tooltip>\r\n        '完成于' + moment(task.endDate).format('MM-DD')\r\n      );\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default class Item extends Component {\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <Draggable\r\n        draggableId={task._id}\r\n        index={index}\r\n        // isDragDisabled={task.status === 'done'}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className={styles.container}\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            // style={getItemStyle(\r\n            //   snapshot.isDragging,\r\n            //   provided.draggableProps.style\r\n            // )}\r\n          >\r\n            <Card hoverable={true}>\r\n              <p>{task.content}</p>\r\n              <div className={styles.date}>{displayDate(task)}</div>\r\n              <div>\r\n                <Avatar.Group>\r\n                  {task.users.map((user) => (\r\n                    <Tooltip\r\n                      key={user._id}\r\n                      title={user.username}\r\n                      placement=\"top\"\r\n                    >\r\n                      <Avatar\r\n                        style={{ backgroundColor: user.avatar }}\r\n                        icon={<UserOutlined />}\r\n                      />\r\n                    </Tooltip>\r\n                  ))}\r\n                </Avatar.Group>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './item';\r\n\r\nimport styles from './column.module.less';\r\n\r\n// const getListStyle = (isDraggingOver) => ({\r\n//   background: isDraggingOver ? 'lightblue' : '',\r\n// });\r\n\r\nexport default class Column extends Component {\r\n  render() {\r\n    const { status, tasks } = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h4 className={styles.title} style={{ backgroundColor: status.color }}>\r\n          {status.display}\r\n        </h4>\r\n        <Droppable\r\n          droppableId={this.props.id}\r\n          // isDropDisabled={this.props.id === 'todo'}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              className={styles.taskList}\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              // style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {tasks.map((task, index) => (\r\n                <Item key={task._id} task={task} index={index} />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Column } = Table;\r\n\r\nexport default function List(props) {\r\n  const { data, status, size = 'default' } = props;\r\n  return (\r\n    <Table dataSource={data} pagination={false} rowKey=\"_id\" size={size}>\r\n      <Column\r\n        width=\"90px\"\r\n        title=\"状态\"\r\n        dataIndex=\"status\"\r\n        key=\"status\"\r\n        render={(value) => {\r\n          const p = status[value];\r\n          return <Tag color={p.color}>{p.display}</Tag>;\r\n        }}\r\n      />\r\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\r\n      <Column\r\n        title=\"参与者\"\r\n        dataIndex=\"users\"\r\n        key=\"users\"\r\n        render={(users) => (\r\n          <Avatar.Group>\r\n            {users.map((user) => (\r\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\r\n                <Avatar\r\n                  style={{ backgroundColor: user.avatar }}\r\n                  icon={<UserOutlined />}\r\n                />\r\n              </Tooltip>\r\n            ))}\r\n          </Avatar.Group>\r\n        )}\r\n      />\r\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\r\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\r\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\r\n    </Table>\r\n  );\r\n}\r\n","import Cookies from 'js-cookie';\r\nexport function getRedirectTo() {\r\n  const projectId = Cookies.get('projectId');\r\n  return projectId ? '/project/profile' : '/';\r\n}\r\n\r\nexport function sortTasks(tasks) {\r\n  let sortedTasks = {\r\n    todo: [],\r\n    doing: [],\r\n    done: [],\r\n  };\r\n  if (Array.isArray(tasks)) {\r\n    tasks.forEach((task) => {\r\n      sortedTasks[task.status].push(task);\r\n    });\r\n  }\r\n  return sortedTasks;\r\n}\r\n\r\nexport const status = {\r\n  todo: {\r\n    color: '#4a9ff9',\r\n    display: '未开始',\r\n  },\r\n  doing: {\r\n    color: '#f9944a',\r\n    display: '进行中',\r\n  },\r\n  done: {\r\n    color: '#2ac06d',\r\n    display: '已完成',\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { Card, Radio, Empty } from 'antd';\r\nimport { MenuOutlined, ProjectOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport Column from '../../../components/board/column';\r\nimport TaskList from '../../../components/board/list';\r\nimport { reqTaskList } from '../../../api/index';\r\nimport { sortTasks, status } from '../../../utils/index';\r\n\r\nexport default class Board extends Component {\r\n  state = {\r\n    value: 'board',\r\n    title: '',\r\n    // originalTasks: [],\r\n    tasks: {\r\n      todo: [],\r\n      doing: [],\r\n      done: [],\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const params = this.props.match.params;\r\n    //从菜单直接点进来，没有type和id\r\n    const type = params.type || 'sprint';\r\n    const id = params.id || '530000197311083057'; //todo:没有参数时，跳转到当前阶段的任务看板,这里id替换成当前阶段id\r\n\r\n    const title = (type === 'sprint' ? '阶段' : '需求') + id;\r\n    this.setState({\r\n      title,\r\n    });\r\n\r\n    reqTaskList({ type, id }).then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const originalTasks = result.data;\r\n        const tasks = sortTasks(originalTasks);\r\n        // console.log(tasks);\r\n        this.setState({\r\n          tasks,\r\n          // originalTasks,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  /*方案1:如果需要将所有任务tasks作为store的一个属性，这里拖拽完后应该直接更新store.tasks的status，让页面自动重新渲染，但是会没有排序功能。\r\n  方案2:只是在前端更新组件state的tasks，拖拽后直接调用接口更新被拖拽任务的status,同时可以实现排序功能（实际没什么意义，刷新后顺序会变）。\r\n  两个方案不能同时使用，否则要么会导致store.tasks的状态更后端实际状态不一致，要么导致多次重新渲染。 */\r\n\r\n  //方案2\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const start = source.droppableId;\r\n    const finish = destination.droppableId;\r\n\r\n    //查询被拖拽的task\r\n    const draggedTask = this.state.tasks[start].find(\r\n      (task) => task._id === draggableId\r\n    );\r\n    // const draggedTaskInOriginalTasks = this.state.originalTasks.find(\r\n    //   (task) => task._id === draggableId\r\n    // );\r\n\r\n    //todo：更新draggedTask的状态：更新后端数据库，如果成功再更新state\r\n    draggedTask.status = finish;\r\n    if (finish === 'todo') {\r\n      draggedTask.startDate = null;\r\n      draggedTask.endDate = null;\r\n    }\r\n    if (finish === 'doing') {\r\n      draggedTask.startDate = moment().format('YYYY-MM-DD');\r\n      draggedTask.endDate = null;\r\n    }\r\n    if (finish === 'done') draggedTask.endDate = moment().format('YYYY-MM-DD');\r\n    // draggedTaskInOriginalTasks.status = finish;\r\n\r\n    const { tasks } = this.state;\r\n    const startTasks = tasks[start];\r\n    const finishTasks = tasks[finish];\r\n\r\n    startTasks.splice(source.index, 1);\r\n    finishTasks.splice(destination.index, 0, draggedTask);\r\n\r\n    this.setState({\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasks, value, title } = this.state;\r\n    const tasksOfList = Object.values(tasks).flat();\r\n\r\n    const boardView =\r\n      tasksOfList.length === 0 ? (\r\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n      ) : (\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div style={{ display: 'flex' }}>\r\n            {Object.keys(status).map((c, index) => (\r\n              <Column status={status[c]} id={c} key={index} tasks={tasks[c]} />\r\n            ))}\r\n          </div>\r\n        </DragDropContext>\r\n      );\r\n    const listView = <TaskList data={tasksOfList} status={status}></TaskList>;\r\n\r\n    return (\r\n      <Card\r\n        title={title}\r\n        extra={\r\n          <Radio.Group\r\n            buttonStyle=\"solid\"\r\n            onChange={this.onChange}\r\n            value={this.state.value}\r\n          >\r\n            <Radio.Button value=\"board\">\r\n              <ProjectOutlined />\r\n            </Radio.Button>\r\n            <Radio.Button value=\"list\">\r\n              <MenuOutlined />\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        }\r\n      >\r\n        {value === 'board' ? boardView : listView}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Form, Select, Modal, Avatar, Space } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function MemberModal({\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n  member,\r\n  users,\r\n  roles,\r\n}) {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={member ? '编辑成员' : '添加成员'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"_id\"\r\n          label=\"项目成员\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择项目成员！',\r\n            },\r\n          ]}\r\n        >\r\n          <Select showSearch placeholder=\"选择成员\" optionFilterProp=\"title\">\r\n            {users.map((user, index) => (\r\n              <Option key={index} value={user._id} title={user.username}>\r\n                <Space>\r\n                  <Avatar\r\n                    style={{ backgroundColor: user.avatar }}\r\n                    icon={<UserOutlined />}\r\n                  ></Avatar>\r\n                  <div>\r\n                    <a> {user.username}</a>\r\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\r\n                  </div>\r\n                </Space>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"roles\"\r\n          label=\"成员角色\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择成员角色！',\r\n            },\r\n          ]}\r\n        >\r\n          <Select mode=\"multiple\" allowClear placeholder=\"选择角色\">\r\n            {roles.map((role, index) => (\r\n              <Option key={index} value={role.name}>\r\n                {role.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Card, Tag, Space, Table, Popconfirm } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  DeleteOutlined,\r\n  PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport MemberModal from '../../../components/member/modal';\r\nimport { reqMemberList, reqUserList } from '../../../api/index';\r\n\r\nconst roleOptions = [\r\n  {\r\n    color: '#f56a00',\r\n    name: '项目经理',\r\n  },\r\n  {\r\n    color: '#7265e6',\r\n    name: '前端开发',\r\n  },\r\n  {\r\n    color: '#00a2ae',\r\n    name: '后端开发',\r\n  },\r\n  {\r\n    color: '#ffbf00',\r\n    name: 'UI设计',\r\n  },\r\n];\r\n\r\nexport default class Member extends Component {\r\n  state = {\r\n    users: [],\r\n    members: [],\r\n    visible: false,\r\n  };\r\n  columns = [\r\n    {\r\n      title: '成员',\r\n      dataIndex: 'username',\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Avatar\r\n            style={{ backgroundColor: record.avatar }}\r\n            icon={<UserOutlined />}\r\n          ></Avatar>\r\n          <a>{text}</a>\r\n        </Space>\r\n      ),\r\n    },\r\n    {\r\n      title: '邮箱',\r\n      dataIndex: 'email',\r\n      render: (text) => (\r\n        <span style={{ color: 'rgba(0,0,0,.45)' }}>{text}</span>\r\n      ),\r\n    },\r\n    {\r\n      title: '角色',\r\n      dataIndex: 'roles',\r\n      render: (roles) =>\r\n        roles.map((role, index) => (\r\n          <Tag key={index} color={role.color}>\r\n            {role.name}\r\n          </Tag>\r\n        )),\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: '_id',\r\n      key: 'action',\r\n      render: (_id) => (\r\n        <Popconfirm\r\n          placement=\"left\"\r\n          title=\"确认删除该成员？\"\r\n          onConfirm={() => this.handleDel(_id)}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <a key=\"delete\">\r\n            <DeleteOutlined />\r\n          </a>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  handleDel = (id) => {\r\n    const members = this.state.members.filter((member) => member._id !== id);\r\n    this.setState({ members });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = (values) => {\r\n    const user = this.state.users.find((user) => user._id === values._id);\r\n    const users = this.state.users.filter((user) => user._id !== values._id);\r\n    const roles = roleOptions.filter((role) => {\r\n      return values.roles.findIndex((value) => role.name === value) !== -1;\r\n    });\r\n    const newMember = {\r\n      ...user,\r\n      roles,\r\n    };\r\n    const members = [newMember, ...this.state.members];\r\n    this.setState({\r\n      members,\r\n      users,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqMemberList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const members = result.data;\r\n        this.setState({\r\n          members,\r\n        });\r\n      }\r\n    });\r\n\r\n    //获取所有用户列表（添加用户时用）\r\n    reqUserList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const users = result.data;\r\n        this.setState({\r\n          users,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目成员\"\r\n          extra={\r\n            <a onClick={this.showModal}>\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            showHeader={false}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            columns={this.columns}\r\n            dataSource={this.state.members}\r\n          />\r\n        </Card>\r\n        <MemberModal\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          member={null}\r\n          users={this.state.users}\r\n          roles={roleOptions}\r\n        ></MemberModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Modal, Form, Input, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default function TaskModal({ visible, onOk, onCancel }) {\r\n  const [form] = Form.useForm();\r\n  //   useEffect(() => {\r\n  //     form.resetFields();\r\n  //   });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title=\"新增任务\"\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n            form.resetFields();\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        initialValues={{ createDate: moment() }}\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"content\"\r\n          label=\"任务内容\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符的任务内容！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"createDate\" label=\"创建日期\">\r\n          <DatePicker />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Modal, Form, Input, DatePicker, Radio } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport default function StoryModal({ visible, onOk, onCancel, story }) {\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (story) {\r\n      const date = moment(story.date);\r\n      form.setFieldsValue({ ...story, date });\r\n    } else {\r\n      form.resetFields();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title={story ? '编辑需求' : '新增需求'}\r\n      width={640}\r\n      visible={visible}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            onOk(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log('验证失败：', info);\r\n          });\r\n      }}\r\n      onCancel={onCancel}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <Form\r\n        initialValues={{ date: moment(), priority: 0 }}\r\n        form={form}\r\n        labelCol={{\r\n          span: 5,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"role\"\r\n          label=\"角色\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入角色！',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请输入\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"activity\"\r\n          label=\"行为\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"businessValue\"\r\n          label=\"目的\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入至少五个字符！',\r\n              min: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea rows={2} placeholder=\"请输入至少五个字符\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"date\"\r\n          label=\"提出日期\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请选择提出日期！',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item name=\"priority\" label=\"优先级\">\r\n          <Radio.Group name=\"radiogroup\">\r\n            <Radio value={0}>低</Radio>\r\n            <Radio value={1}>中</Radio>\r\n            <Radio value={2}>高</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Form, DatePicker, Modal, Tag, Divider } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  EditOutlined,\r\n  PlusCircleOutlined,\r\n  ForkOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\nimport TaskModal from '../../../components/task/modal';\r\nimport StoryModal from '../../../components/story/modal';\r\nimport TaskList from '../../../components/board/list';\r\nimport {\r\n  reqCreateTask,\r\n  reqCreateStory,\r\n  reqStoryList,\r\n  reqEditStory,\r\n} from '../../../api/index';\r\n\r\nimport { sortTasks, status } from '../../../utils/index';\r\n\r\nconst { Column } = Table;\r\n\r\nconst priority = [\r\n  {\r\n    color: '#2ac06d',\r\n    display: '低',\r\n  },\r\n  {\r\n    color: '#f9944a',\r\n    display: '中',\r\n  },\r\n  {\r\n    color: '#ff4d4f',\r\n    display: '高',\r\n  },\r\n];\r\n\r\nexport default class Story extends Component {\r\n  state = {\r\n    storyModalVisible: false,\r\n    taskModalVisible: false,\r\n    current: null,\r\n    storyList: [],\r\n  };\r\n  showStoryModal = (current) => {\r\n    this.setState({\r\n      storyModalVisible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  showTaskModal = (current) => {\r\n    this.setState({\r\n      taskModalVisible: true,\r\n      current,\r\n    });\r\n  };\r\n\r\n  handleStoryCancel = (e) => {\r\n    this.setState({\r\n      storyModalVisible: false,\r\n    });\r\n  };\r\n\r\n  handleTaskCancel = (e) => {\r\n    this.setState({\r\n      taskModalVisible: false,\r\n    });\r\n  };\r\n\r\n  handleTaskOk = (values) => {\r\n    values.createDate = values.createDate.format('YYYY-MM-DD');\r\n    reqCreateTask(values).then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        const storyList = this.state.storyList.map((story) => {\r\n          if (story._id === this.state.current._id) {\r\n            story.tasks.todo.push(result.data);\r\n          }\r\n          return story;\r\n        });\r\n        this.setState({\r\n          storyList,\r\n          taskModalVisible: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleStoryOk = (values) => {\r\n    const current = this.state.current;\r\n    const _id = current ? current._id : '';\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n\r\n    if (_id) {\r\n      //编辑\r\n      reqEditStory({ ...values, _id }).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          const storyList = this.state.storyList.map((story) =>\r\n            story._id === _id ? { ...story, ...result.data } : story\r\n          );\r\n          this.setState({\r\n            storyList,\r\n            storyModalVisible: false,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      reqCreateStory(values).then((res) => {\r\n        const result = res.data;\r\n        if (result.code === 0) {\r\n          this.setState({\r\n            storyList: [result.data, ...this.state.storyList],\r\n            storyModalVisible: false,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    reqStoryList().then((res) => {\r\n      const result = res.data;\r\n      if (result.code === 0) {\r\n        result.data.forEach((story) => {\r\n          const tasks = story.tasks;\r\n          story.tasks = sortTasks(tasks);\r\n        });\r\n        this.setState({\r\n          storyList: result.data,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      taskModalVisible,\r\n      storyModalVisible,\r\n      storyList,\r\n      current,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目需求\"\r\n          extra={\r\n            <a\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                this.showStoryModal();\r\n              }}\r\n            >\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={storyList}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            expandable={{\r\n              expandedRowRender: (record) => {\r\n                const data = Object.values(record.tasks).flat();\r\n                return (\r\n                  <TaskList data={data} status={status} size=\"small\"></TaskList>\r\n                );\r\n              },\r\n              rowExpandable: (record) =>\r\n                Object.values(record.tasks).flat().length > 0,\r\n            }}\r\n          >\r\n            <Column\r\n              width=\"80px\"\r\n              title=\"优先级\"\r\n              dataIndex=\"priority\"\r\n              key=\"priority\"\r\n              render={(value) => {\r\n                const p = priority[value];\r\n                return (\r\n                  <Tag\r\n                    style={{ width: '40px', textAlign: 'center' }}\r\n                    color={p.color}\r\n                  >\r\n                    {p.display}\r\n                  </Tag>\r\n                );\r\n              }}\r\n            />\r\n            <Column title=\"角色\" dataIndex=\"role\" key=\"role\" />\r\n            <Column title=\"行为\" dataIndex=\"activity\" key=\"activity\" />\r\n            <Column\r\n              title=\"目的\"\r\n              dataIndex=\"businessValue\"\r\n              key=\"businessValue\"\r\n              progress\r\n            />\r\n\r\n            <Column\r\n              title=\"任务进度\"\r\n              dataIndex=\"_id\"\r\n              render={(id, record) => {\r\n                return (\r\n                  <Link to={`/project/board/story/${id}`}>\r\n                    <TaskProgress\r\n                      todo={record.tasks.todo.length}\r\n                      doing={record.tasks.doing.length}\r\n                      done={record.tasks.done.length}\r\n                    />\r\n                  </Link>\r\n                );\r\n              }}\r\n            />\r\n            <Column title=\"提出日期\" dataIndex=\"date\" key=\"date\" />\r\n            <Column\r\n              title=\"操作\"\r\n              key=\"_id\"\r\n              render={(id, record) => (\r\n                <>\r\n                  <a onClick={() => this.showStoryModal(record)}>\r\n                    <EditOutlined />\r\n                  </a>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={() => this.showTaskModal(record)}>\r\n                    <ForkOutlined />\r\n                  </a>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n        </Card>\r\n\r\n        <TaskModal\r\n          visible={taskModalVisible}\r\n          onOk={this.handleTaskOk}\r\n          onCancel={this.handleTaskCancel}\r\n        ></TaskModal>\r\n        <StoryModal\r\n          visible={storyModalVisible}\r\n          onOk={this.handleStoryOk}\r\n          onCancel={this.handleStoryCancel}\r\n          story={current}\r\n        ></StoryModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Transfer, Table, Modal } from 'antd';\r\nexport default function TaskTransfer({\r\n  columns,\r\n  visible,\r\n  onCancel,\r\n  onOk,\r\n  ...restProps\r\n}) {\r\n  return (\r\n    <Modal\r\n      forceRender\r\n      title=\"导入任务\"\r\n      width={1200}\r\n      visible={visible}\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n      onOk={onOk}\r\n      onCancel={onCancel}\r\n    >\r\n      <Transfer\r\n        rowKey={(record) => record._id}\r\n        {...restProps}\r\n        showSelectAll={false}\r\n      >\r\n        {({\r\n          filteredItems,\r\n          onItemSelectAll,\r\n          onItemSelect,\r\n          selectedKeys: listSelectedKeys,\r\n        }) => {\r\n          const rowSelection = {\r\n            onSelectAll(selected, selectedRows) {\r\n              const treeSelectedKeys = selectedRows.map(({ _id }) => _id);\r\n              onItemSelectAll(\r\n                selected ? treeSelectedKeys : listSelectedKeys,\r\n                selected\r\n              );\r\n            },\r\n            onSelect({ _id }, selected) {\r\n              onItemSelect(_id, selected);\r\n            },\r\n            selectedRowKeys: listSelectedKeys,\r\n          };\r\n\r\n          return (\r\n            <Table\r\n              pagination={false}\r\n              scroll={{ y: 300 }}\r\n              rowSelection={rowSelection}\r\n              rowKey=\"_id\"\r\n              columns={columns}\r\n              dataSource={filteredItems}\r\n              size=\"small\"\r\n              onRow={({ _id }) => ({\r\n                onClick: () => {\r\n                  onItemSelect(_id, !listSelectedKeys.includes(_id));\r\n                },\r\n              })}\r\n            />\r\n          );\r\n        }}\r\n      </Transfer>\r\n    </Modal>\r\n  );\r\n}\r\n","import * as types from './action-types';\r\nimport * as api from '../../api';\r\n\r\nconst receiveSprints = (sprints) => ({\r\n  type: types.RECEIVE_SPRINTS,\r\n  data: sprints,\r\n});\r\n\r\nconst createSprints = (sprint) => ({\r\n  type: types.CREATE_SPRINT,\r\n  data: sprint,\r\n});\r\n\r\nexport const createSprint = (sprint) => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqCreateSprint(sprint);\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(createSprints(result.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSprints = () => {\r\n  return async (dispatch) => {\r\n    const response = await api.reqSprintList();\r\n    const result = response.data;\r\n    if (result.code === 0) {\r\n      dispatch(receiveSprints(result.data));\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Form, DatePicker, Modal, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { PlusCircleOutlined, AppstoreAddOutlined } from '@ant-design/icons';\r\n\r\nimport TaskProgress from '../../../components/task-progress/task-progress';\r\nimport TaskTransfer from '../../../components/task/transfer';\r\nimport { createSprint, getSprints } from '../../../redux/sprints/actions';\r\nimport { sortTasks } from '../../../utils/index';\r\n\r\nimport { reqTaskList } from '../../../api/index';\r\n\r\nimport styles from './sprint.module.less';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Column } = Table;\r\n\r\nconst columns = [\r\n  {\r\n    dataIndex: 'content',\r\n    title: '任务',\r\n  },\r\n  {\r\n    dataIndex: 'createDate',\r\n    title: '创建时间',\r\n  },\r\n];\r\n\r\nclass Sprint extends Component {\r\n  state = {\r\n    visible: false,\r\n    transferVisible: false,\r\n    targetKeys: [],\r\n    tasks: [],\r\n  };\r\n\r\n  onChange = (nextTargetKeys) => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showTransferModal = () => {\r\n    this.setState({\r\n      transferVisible: true,\r\n      targetKeys: [],\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleTransferCancel = (e) => {\r\n    this.setState({\r\n      transferVisible: false,\r\n    });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    this.form\r\n      .validateFields()\r\n      .then((value) => {\r\n        const rangeDate = value['rangeDate'];\r\n        const startDate = rangeDate[0].format('YYYY-MM-DD');\r\n        const endDate = rangeDate[1].format('YYYY-MM-DD');\r\n        this.props.createSprint({ startDate, endDate });\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n        this.form.resetFields();\r\n      })\r\n      .catch((info) => {\r\n        console.log('验证失败：', info);\r\n      });\r\n  };\r\n\r\n  handleTransferOk = () => {\r\n    const { targetKeys } = this.state;\r\n    if (targetKeys.length) {\r\n      const tasks = this.state.tasks.filter(\r\n        (task) => !targetKeys.includes(task._id)\r\n      );\r\n\r\n      //todo:设置task的sprintId\r\n      this.setState({ tasks, transferVisible: false });\r\n    } else {\r\n      this.setState({ transferVisible: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getSprints();\r\n    reqTaskList().then((res) => {\r\n      const result = res.data;\r\n      const tasks = result.data.filter((task) => task.status === 'todo');\r\n      if (result.code === 0) {\r\n        this.setState({\r\n          tasks,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { startDate, endDate } = this.props.project;\r\n\r\n    const { targetKeys, tasks, transferVisible } = this.state;\r\n    const sprints = this.props.sprints;\r\n    const length = sprints.length;\r\n\r\n    let newStartDate = startDate;\r\n\r\n    if (length > 0) {\r\n      const lastEndDate = sprints[length - 1].endDate;\r\n      newStartDate = moment(lastEndDate).add(1, 'days').format('YYYY-MM-DD');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          title=\"项目阶段\"\r\n          extra={\r\n            <a onClick={this.showModal}>\r\n              <PlusCircleOutlined style={{ fontSize: '24px' }} />\r\n            </a>\r\n          }\r\n        >\r\n          <Table\r\n            dataSource={sprints}\r\n            pagination={false}\r\n            rowKey=\"_id\"\r\n            rowClassName={(record) => {\r\n              return moment().isBetween(\r\n                record.startDate,\r\n                record.endDate,\r\n                null,\r\n                '[]'\r\n              )\r\n                ? styles.curSprint\r\n                : null;\r\n            }}\r\n          >\r\n            <Column\r\n              title=\"阶段周期\"\r\n              key=\"date\"\r\n              render={(value, record) =>\r\n                `${record.startDate}~${record.endDate}`\r\n              }\r\n            />\r\n            <Column\r\n              title=\"任务进度\"\r\n              dataIndex=\"_id\"\r\n              render={(id, record) => {\r\n                const sortedTasks = sortTasks(record.tasks);\r\n\r\n                return (\r\n                  <Link to={`/project/board/sprint/${id}`}>\r\n                    <TaskProgress\r\n                      todo={sortedTasks.todo.length}\r\n                      doing={sortedTasks.doing.length}\r\n                      done={sortedTasks.done.length}\r\n                    />\r\n                  </Link>\r\n                );\r\n              }}\r\n            />\r\n            <Column\r\n              title=\"操作\"\r\n              key=\"tasks\"\r\n              render={() => (\r\n                <>\r\n                  {/* <Link to=\"/project/board\">\r\n                    <ProjectOutlined />\r\n                  </Link>\r\n                  <Divider type=\"vertical\" /> */}\r\n                  <a onClick={this.showTransferModal}>\r\n                    <AppstoreAddOutlined />\r\n                  </a>\r\n                </>\r\n              )}\r\n            />\r\n          </Table>\r\n        </Card>\r\n\r\n        <Modal\r\n          title=\"新增阶段\"\r\n          width={480}\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <Form ref={(el) => (this.form = el)}>\r\n            <Form.Item\r\n              name=\"rangeDate\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: '请选择阶段时间！',\r\n                },\r\n              ]}\r\n            >\r\n              <RangePicker\r\n                disabledDate={(currentDate) =>\r\n                  !currentDate.isBetween(newStartDate, endDate, 'day', '[]')\r\n                }\r\n                defaultPickerValue={[moment(newStartDate)]}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n\r\n        <TaskTransfer\r\n          onCancel={this.handleTransferCancel}\r\n          visible={transferVisible}\r\n          dataSource={tasks}\r\n          targetKeys={targetKeys}\r\n          onOk={this.handleTransferOk}\r\n          onChange={this.onChange}\r\n          columns={columns}\r\n        ></TaskTransfer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // projectList: state.projectList,\r\n  project: state.project,\r\n  sprints: state.sprints,\r\n});\r\n\r\nconst mapDispatchToProps = { createSprint, getSprints };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\r\n","import React from 'react';\r\nimport { Result } from 'antd';\r\n\r\nexport default () => (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    style={{\r\n      background: 'none',\r\n    }}\r\n    subTitle=\"页面不存在\"\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { Layout, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Sider from '../../components/sider/sider';\r\nimport Header from '../../components/header/header';\r\nimport MyProjects from '../my-projects/my-projects';\r\nimport Profile from '../project/profile/profile';\r\nimport Meeting from '../project/meeting/meeting';\r\nimport Board from '../project/board/board';\r\nimport Member from '../project/member/member';\r\nimport Story from '../project/story/story';\r\nimport Sprint from '../project/sprint/sprint';\r\nimport NotFound from '../exception/not-found';\r\nimport { resetUser, getUser } from '../../redux/user/actions';\r\nimport { resetProject, getProject } from '../../redux/project/actions';\r\n\r\nconst { Content } = Layout;\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  navList = [\r\n    {\r\n      path: '/',\r\n      component: MyProjects,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: '/project/profile',\r\n      component: Profile,\r\n    },\r\n    {\r\n      path: '/project/member',\r\n      component: Member,\r\n    },\r\n    {\r\n      path: '/project/meeting',\r\n      component: Meeting,\r\n    },\r\n    {\r\n      path: '/project/story',\r\n      component: Story,\r\n    },\r\n    {\r\n      path: '/project/board',\r\n      component: Board,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: '/project/board/:type/:id',\r\n      component: Board,\r\n    },\r\n    {\r\n      path: '/project/sprint',\r\n      component: Sprint,\r\n    },\r\n    {\r\n      component: NotFound,\r\n    },\r\n  ];\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    let that = this;\r\n    Modal.confirm({\r\n      title: '确认退出登录吗？',\r\n      icon: <ExclamationCircleOutlined />,\r\n      cancelText: '取消',\r\n      okText: '确定',\r\n      onOk() {\r\n        Cookies.remove('projectId');\r\n        Cookies.remove('userId');\r\n        that.props.resetUser();\r\n        that.props.resetProject();\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = Cookies.get('userId');\r\n    if (userId && !this.props.user._id) {\r\n      this.props.getUser();\r\n    }\r\n\r\n    const projectId = Cookies.get('projectId');\r\n    if (projectId && !this.props.project._id) {\r\n      this.props.getProject();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const userId = Cookies.get('userId');\r\n    const projectId = Cookies.get('projectId');\r\n    const visiable =\r\n      this.props.location.pathname === '/' && !projectId ? false : true;\r\n    if (!userId) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (visiable && !projectId) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // const marginLeft = visiable ? (this.state.collapsed ? 80 : 200) : 0;\r\n\r\n    return (\r\n      <Layout\r\n        style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0 }}\r\n      >\r\n        <Sider visiable={visiable} collapsed={this.state.collapsed} />\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Header\r\n            visiable={visiable}\r\n            projectName={this.props.project.projectName}\r\n            username={this.props.user.username}\r\n            collapsed={this.state.collapsed}\r\n            toggle={visiable ? this.toggle : null}\r\n            logout={this.logout}\r\n          />\r\n          <Content style={{ padding: '24px', minHeight: 'auto' }}>\r\n            <Switch>\r\n              {this.navList.map((nav, index) => (\r\n                <Route key={index} {...nav} />\r\n              ))}\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  project: state.project,\r\n});\r\n\r\nconst mapDispatchToProps = { resetUser, resetProject, getProject, getUser };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport locale from \"antd/es/locale/zh_CN\";\r\n\r\nimport store from \"./redux/store\";\r\nimport Login from \"./containers/login/login\";\r\nimport Register from \"./containers/register/register\";\r\nimport Main from \"./containers/main/main\";\r\n\r\nimport \"moment/locale/zh-cn\";\r\nimport \"./assets/less/index.less\";\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={locale}>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route component={Main} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Provider>\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}