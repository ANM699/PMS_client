{"version":3,"sources":["components/task-progress/task-progress.jsx","components/task-progress/task-progress.module.less","utils/index.js","components/task/list.jsx","components/task/edit-modal.jsx","containers/project/task/task.jsx","containers/project/sprint/sprint.module.less","components/task/transfer.jsx","redux/sprints/actions.js","containers/project/sprint/sprint.jsx"],"names":["genChildren","num","className","children","index","element","key","styles","block","push","TaskProgress","props","container","todo","doing","done","module","exports","sortTasks","tasks","sortedTasks","Array","isArray","forEach","task","status","color","display","Column","Table","List","data","size","onItemEditClick","editable","dataSource","pagination","rowKey","width","title","dataIndex","render","value","p","users","Group","map","user","_id","username","placement","style","backgroundColor","avatar","icon","UserOutlined","record","onClick","e","preventDefault","EditOutlined","Option","Select","StoryModal","visible","onOk","onCancel","useState","setStatus","Form","useForm","form","useEffect","startDate","moment","endDate","selectedUsers","setFieldsValue","resetFields","forceRender","validateFields","then","values","catch","info","console","log","okText","cancelText","labelCol","span","wrapperCol","Item","name","label","rules","required","message","showSearch","placeholder","optionFilterProp","optionLabelProp","mode","email","onChange","target","Task","setVisible","setTask","setUsers","setData","reqMemberList","res","result","code","format","filter","indexOf","reqEditTask","taskList","updateTasks","TaskTransfer","columns","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","onSelect","selectedRowKeys","scroll","y","onRow","includes","createSprints","sprint","type","types","RangePicker","DatePicker","mapDispatchToProps","createSprint","dispatch","a","api","response","getSprints","sprints","connect","state","project","transferVisible","setTransferVisible","targetKeys","setTargetKeys","sprintList","setSprintList","setTasks","currentId","setCurrentId","formRef","useRef","reqSprintList","reqTaskList","length","newStartDate","lastEndDate","add","extra","PlusCircleOutlined","fontSize","rowClassName","isBetween","curSprint","expandable","expandedRowRender","Object","flat","rowExpandable","id","to","showTransferModal","AppstoreAddOutlined","current","rangeDate","reqCreateSprint","newSprintList","ref","disabledDate","currentDate","defaultPickerValue","filterTasks","newTasks","concat","nextTargetKeys"],"mappings":"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","file":"static/js/7.361055e1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './task-progress.module.less';\n\nfunction genChildren(num, className) {\n  let children = [];\n  for (let index = 0; index < num; index++) {\n    const element = (\n      <div key={index} className={`${styles.block} ${className}`}></div>\n    );\n    children.push(element);\n  }\n  return children;\n}\n\nfunction TaskProgress(props) {\n  return (\n    <div className={styles.container}>\n      {genChildren(props.todo, styles.todo)}\n      {genChildren(props.doing, styles.doing)}\n      {genChildren(props.done, styles.done)}\n    </div>\n  );\n}\n\nTaskProgress.propTypes = {\n  todo: PropTypes.number.isRequired,\n  doing: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default TaskProgress;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3U1Y55kCNk9Nf0cyrnE5dA\",\"block\":\"_3EpNt1oR5bU4tQbOC3wv-q\",\"todo\":\"_12kVQ7M2l2de7nC5Zjgp0M\",\"doing\":\"_3A8b2Ti3cGKbsJeL7IEAM\",\"done\":\"SvILxQULxCn3hY2IlpBFW\"};","import Cookies from 'js-cookie';\nexport function getRedirectTo() {\n  const projectId = Cookies.get('projectId');\n  return projectId ? '/project/profile' : '/';\n}\n\nexport function sortTasks(tasks) {\n  let sortedTasks = {\n    todo: [],\n    doing: [],\n    done: [],\n  };\n  if (Array.isArray(tasks)) {\n    tasks.forEach((task) => {\n      sortedTasks[task.status].push(task);\n    });\n  }\n  return sortedTasks;\n}\n\nexport const status = {\n  todo: {\n    color: '#4a9ff9',\n    display: '未开始',\n  },\n  doing: {\n    color: '#f9944a',\n    display: '进行中',\n  },\n  done: {\n    color: '#2ac06d',\n    display: '已完成',\n  },\n};\n","import React from 'react';\nimport { Table, Avatar, Tooltip, Tag } from 'antd';\nimport { UserOutlined, EditOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\n\nexport default function List(props) {\n  const {\n    data,\n    status,\n    size = 'default',\n    onItemEditClick,\n    editable = true,\n  } = props;\n\n  return (\n    <Table dataSource={data} pagination={false} rowKey=\"_id\" size={size}>\n      <Column\n        width=\"90px\"\n        title=\"状态\"\n        dataIndex=\"status\"\n        key=\"status\"\n        render={(value) => {\n          const p = status[value];\n          return <Tag color={p.color}>{p.display}</Tag>;\n        }}\n      />\n      <Column title=\"内容\" dataIndex=\"content\" key=\"content\" />\n      <Column\n        title=\"参与者\"\n        dataIndex=\"users\"\n        key=\"users\"\n        render={(users) => (\n          <Avatar.Group>\n            {users.map((user) => (\n              <Tooltip key={user._id} title={user.username} placement=\"top\">\n                <Avatar\n                  style={{ backgroundColor: user.avatar }}\n                  icon={<UserOutlined />}\n                />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )}\n      />\n      <Column title=\"创建日期\" dataIndex=\"createDate\" />\n      <Column title=\"开始日期\" dataIndex=\"startDate\" />\n      <Column title=\"完成日期\" dataIndex=\"endDate\" />\n      {editable ? (\n        <Column\n          title=\"操作\"\n          dataIndex=\"_id\"\n          key=\"action\"\n          render={(_id, record) => (\n            <a\n              onClick={(e) => {\n                e.preventDefault();\n                onItemEditClick(record);\n              }}\n            >\n              <EditOutlined />\n            </a>\n          )}\n        />\n      ) : null}\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  Radio,\n  Select,\n  Avatar,\n  Space,\n} from 'antd';\nimport moment from 'moment';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nexport default function StoryModal({ visible, onOk, onCancel, task, users }) {\n  const [status, setStatus] = useState();\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (task) {\n      setStatus(task.status);\n      const startDate = task.startDate ? moment(task.startDate) : moment();\n      const endDate = task.endDate ? moment(task.endDate) : moment();\n      const selectedUsers = task.users.map((user) => user._id);\n      form.setFieldsValue({\n        ...task,\n        selectedUsers,\n        startDate,\n        endDate,\n      });\n    } else {\n      form.resetFields();\n    }\n  }, [task]);\n\n  function handleChange(e) {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <Modal\n      forceRender\n      title=\"编辑任务\"\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"selectedUsers\"\n          label=\"参与者\"\n          rules={[\n            {\n              required: true,\n              message: '请选择参与者！',\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"选择参与者\"\n            optionFilterProp=\"title\"\n            optionLabelProp=\"title\"\n            mode=\"multiple\"\n          >\n            {users.map((user, index) => (\n              <Option key={index} value={user._id} title={user.username}>\n                <Space>\n                  <Avatar\n                    style={{ backgroundColor: user.avatar }}\n                    icon={<UserOutlined />}\n                  ></Avatar>\n                  <div>\n                    <a> {user.username}</a>\n                    <div style={{ color: 'rgba(0,0,0,.45)' }}>{user.email}</div>\n                  </div>\n                </Space>\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item name=\"status\" label=\"状态\">\n          <Radio.Group name=\"radiogroup\" onChange={handleChange}>\n            <Radio value=\"todo\">未开始</Radio>\n            <Radio value=\"doing\">进行中</Radio>\n            <Radio value=\"done\">已完成</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        {status !== 'todo' ? (\n          <Form.Item\n            name=\"startDate\"\n            label=\"开始日期\"\n            rules={[\n              {\n                required: true,\n                message: '请选择开始日期！',\n              },\n            ]}\n          >\n            <DatePicker />\n          </Form.Item>\n        ) : null}\n        {status === 'done' ? (\n          <Form.Item\n            name=\"endDate\"\n            label=\"完成日期\"\n            rules={[\n              {\n                required: true,\n                message: '请选择完成日期！',\n              },\n            ]}\n          >\n            <DatePicker />\n          </Form.Item>\n        ) : null}\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport List from '../../../components/task/list';\nimport Modal from '../../../components/task/edit-modal';\nimport { reqMemberList, reqEditTask } from '../../../api/index';\n\nexport default function Task(props) {\n  const [visible, setVisible] = useState(false);\n  const [task, setTask] = useState({ users: [] });\n  const [users, setUsers] = useState([]);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    reqMemberList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setUsers(result.data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  function showModal(task) {\n    setVisible(true);\n    setTask(task);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function handleOk(values) {\n    values.startDate = values.startDate\n      ? values.startDate.format('YYYY-MM-DD')\n      : null;\n    values.endDate = values.endDate\n      ? values.endDate.format('YYYY-MM-DD')\n      : null;\n    values.users = users.filter(\n      (user) => values.selectedUsers.indexOf(user._id) !== -1\n    );\n    const _id = task._id;\n    reqEditTask({ ...task, ...values }).then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        const taskList = data.map((task) =>\n          task._id === _id ? result.data : task\n        );\n        props.updateTasks(taskList);\n        setVisible(false);\n      }\n    });\n  }\n\n  return (\n    <>\n      <List {...props} data={data} onItemEditClick={showModal}></List>\n      <Modal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        task={task}\n        users={[...task.users, ...users]}\n      ></Modal>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"curSprint\":\"_2usx8r6Dj1MaiK6ZFpLt0-\"};","import React from 'react';\nimport { Transfer, Table, Modal } from 'antd';\nexport default function TaskTransfer({\n  columns,\n  visible,\n  onCancel,\n  onOk,\n  ...restProps\n}) {\n  return (\n    <Modal\n      forceRender\n      title=\"导入任务\"\n      width={1200}\n      visible={visible}\n      okText=\"确定\"\n      cancelText=\"取消\"\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n      <Transfer\n        rowKey={(record) => record._id}\n        {...restProps}\n        showSelectAll={false}\n      >\n        {({\n          filteredItems,\n          onItemSelectAll,\n          onItemSelect,\n          selectedKeys: listSelectedKeys,\n        }) => {\n          const rowSelection = {\n            onSelectAll(selected, selectedRows) {\n              const treeSelectedKeys = selectedRows.map(({ _id }) => _id);\n              onItemSelectAll(\n                selected ? treeSelectedKeys : listSelectedKeys,\n                selected\n              );\n            },\n            onSelect({ _id }, selected) {\n              onItemSelect(_id, selected);\n            },\n            selectedRowKeys: listSelectedKeys,\n          };\n\n          return (\n            <Table\n              pagination={false}\n              scroll={{ y: 300 }}\n              rowSelection={rowSelection}\n              rowKey=\"_id\"\n              columns={columns}\n              dataSource={filteredItems}\n              size=\"small\"\n              onRow={({ _id }) => ({\n                onClick: () => {\n                  onItemSelect(_id, !listSelectedKeys.includes(_id));\n                },\n              })}\n            />\n          );\n        }}\n      </Transfer>\n    </Modal>\n  );\n}\n","import * as types from './action-types';\nimport * as api from '../../api';\n\nconst receiveSprints = (sprints) => ({\n  type: types.RECEIVE_SPRINTS,\n  data: sprints,\n});\n\nconst createSprints = (sprint) => ({\n  type: types.CREATE_SPRINT,\n  data: sprint,\n});\n\nexport const createSprint = (sprint) => {\n  return async (dispatch) => {\n    const response = await api.reqCreateSprint(sprint);\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(createSprints(result.data));\n    }\n  };\n};\n\nexport const getSprints = () => {\n  return async (dispatch) => {\n    const response = await api.reqSprintList();\n    const result = response.data;\n    if (result.code === 0) {\n      dispatch(receiveSprints(result.data));\n    }\n  };\n};\n","import React, { Component, useState, useEffect, useRef } from \"react\";\nimport { Card, Table, Form, DatePicker, Modal, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { PlusCircleOutlined, AppstoreAddOutlined } from \"@ant-design/icons\";\n\nimport TaskProgress from \"../../../components/task-progress/task-progress\";\nimport TaskTransfer from \"../../../components/task/transfer\";\nimport TaskList from \"../task/task\";\nimport { createSprint, getSprints } from \"../../../redux/sprints/actions\";\nimport { sortTasks, status } from \"../../../utils/index\";\n\nimport {\n  reqTaskList,\n  reqSprintList,\n  reqCreateSprint,\n} from \"../../../api/index\";\n\nimport styles from \"./sprint.module.less\";\n\nconst { RangePicker } = DatePicker;\nconst { Column } = Table;\n\nconst columns = [\n  {\n    dataIndex: \"content\",\n    title: \"任务\",\n  },\n  {\n    dataIndex: \"createDate\",\n    title: \"创建时间\",\n  },\n];\n\nconst Sprint = (props) => {\n  const [visible, setVisible] = useState(false);\n  const [transferVisible, setTransferVisible] = useState(false);\n  const [targetKeys, setTargetKeys] = useState([]);\n  const [sprintList, setSprintList] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [currentId, setCurrentId] = useState(null);\n\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    props.getSprints();\n    reqSprintList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        result.data.forEach((sprint) => {\n          const tasks = sprint.tasks;\n          sprint.tasks = sortTasks(tasks);\n        });\n        setSprintList(result.data);\n      }\n    });\n    reqTaskList().then((res) => {\n      const result = res.data;\n      const tasks = result.data.filter((task) => task.status === \"todo\");\n      if (result.code === 0) {\n        setTasks(tasks);\n      }\n    });\n  }, []);\n\n  const onChange = (nextTargetKeys) => {\n    setTargetKeys(nextTargetKeys);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const showTransferModal = (id) => {\n    setTransferVisible(true);\n    setTargetKeys([]);\n    setCurrentId(id);\n  };\n\n  const handleCancel = (e) => {\n    setVisible(false);\n  };\n\n  const handleTransferCancel = (e) => {\n    setTransferVisible(false);\n  };\n\n  const handleOk = (e) => {\n    formRef.current\n      .validateFields()\n      .then((value) => {\n        const rangeDate = value[\"rangeDate\"];\n        const startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n        const endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n        return reqCreateSprint({ startDate, endDate });\n      })\n      .then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const newSprintList = [...sprintList, result.data];\n          setVisible(false);\n          setSprintList(newSprintList);\n          formRef.current.resetFields();\n        }\n      })\n      .catch((info) => {\n        console.log(\"验证失败：\", info);\n      });\n  };\n\n  const handleTransferOk = () => {\n    if (targetKeys.length) {\n      const filterTasks = [];\n      const newTasks = [];\n      tasks.forEach((task) => {\n        targetKeys.includes(task._id)\n          ? filterTasks.push(task)\n          : newTasks.push(task);\n      });\n      const newSprintList = sprintList.map((sprint) =>\n        sprint._id === currentId\n          ? {\n              ...sprint,\n              tasks: {\n                ...sprint.tasks,\n                todo: sprint.tasks.todo.concat(filterTasks),\n              },\n            }\n          : sprint\n      );\n      //todo:设置task的sprintId\n      setSprintList(newSprintList);\n      setTasks(newTasks);\n      setTransferVisible(false);\n    } else {\n      setTransferVisible(false);\n    }\n  };\n\n  const { startDate, endDate } = props.project;\n  const length = sprintList.length;\n  let newStartDate = startDate;\n\n  if (length > 0) {\n    const lastEndDate = sprintList[length - 1].endDate;\n    newStartDate = moment(lastEndDate).add(1, \"days\").format(\"YYYY-MM-DD\");\n  }\n\n  return (\n    <div>\n      <Card\n        title=\"项目阶段\"\n        extra={\n          <a onClick={showModal}>\n            <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n          </a>\n        }\n      >\n        <Table\n          dataSource={sprintList}\n          pagination={false}\n          rowKey=\"_id\"\n          rowClassName={(record) => {\n            return moment().isBetween(\n              record.startDate,\n              record.endDate,\n              null,\n              \"[]\"\n            )\n              ? styles.curSprint\n              : null;\n          }}\n          expandable={{\n            expandedRowRender: (record) => {\n              const data = Object.values(record.tasks).flat();\n              return (\n                <TaskList\n                  data={data}\n                  status={status}\n                  size=\"small\"\n                  editable={false}\n                ></TaskList>\n              );\n            },\n            rowExpandable: (record) =>\n              Object.values(record.tasks).flat().length > 0,\n          }}\n        >\n          <Column\n            title=\"阶段周期\"\n            key=\"date\"\n            render={(value, record) => `${record.startDate}~${record.endDate}`}\n          />\n          <Column\n            title=\"任务进度\"\n            dataIndex=\"_id\"\n            render={(id, record) => {\n              return (\n                <Link to={`/project/board/sprint/${id}`}>\n                  <TaskProgress\n                    todo={record.tasks.todo.length}\n                    doing={record.tasks.doing.length}\n                    done={record.tasks.done.length}\n                  />\n                </Link>\n              );\n            }}\n          />\n          <Column\n            title=\"操作\"\n            dataIndex=\"_id\"\n            render={(id) => (\n              <>\n                {/* <Link to=\"/project/board\">\n                    <ProjectOutlined />\n                  </Link>\n                  <Divider type=\"vertical\" /> */}\n                <a\n                  onClick={() => {\n                    showTransferModal(id);\n                  }}\n                >\n                  <AppstoreAddOutlined />\n                </a>\n              </>\n            )}\n          />\n        </Table>\n      </Card>\n\n      <Modal\n        title=\"新增阶段\"\n        width={480}\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        okText=\"确定\"\n        cancelText=\"取消\"\n      >\n        <Form ref={formRef}>\n          <Form.Item\n            name=\"rangeDate\"\n            rules={[\n              {\n                required: true,\n                message: \"请选择阶段时间！\",\n              },\n            ]}\n          >\n            <RangePicker\n              disabledDate={(currentDate) =>\n                !currentDate.isBetween(newStartDate, endDate, \"day\", \"[]\")\n              }\n              defaultPickerValue={[moment(newStartDate)]}\n              style={{\n                width: \"100%\",\n              }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <TaskTransfer\n        onCancel={handleTransferCancel}\n        visible={transferVisible}\n        dataSource={tasks}\n        targetKeys={targetKeys}\n        onOk={handleTransferOk}\n        onChange={onChange}\n        columns={columns}\n      ></TaskTransfer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // projectList: state.projectList,\n  project: state.project,\n  sprints: state.sprints,\n});\n\nconst mapDispatchToProps = { createSprint, getSprints };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sprint);\n"],"sourceRoot":""}