{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js","components/project/list.jsx","components/project/modal.jsx","containers/my-projects/my-projects.jsx"],"names":["PlusCircleOutlined","props","ref","React","AntdIcon","Object","assign","icon","PlusCircleOutlinedSvg","displayName","Column","Table","ProjectList","data","dataSource","pagination","showHeader","rowKey","title","dataIndex","key","render","value","record","onClick","onConfirm","style","color","marginTop","description","startDate","endDate","_id","e","preventDefault","onItemEditClick","EditOutlined","RangePicker","DatePicker","ProjectModal","visible","onOk","onCancel","project","Form","useForm","form","useEffect","rangeDate","moment","setFieldsValue","resetFields","forceRender","width","validateFields","then","values","catch","info","console","log","okText","cancelText","labelCol","span","wrapperCol","Item","name","label","rules","required","message","placeholder","min","TextArea","rows","mapDispatchToProps","switchProject","connect","state","useState","setVisible","projectList","setProjectList","current","setCurrent","reqProjectList","res","result","code","showModal","extra","fontSize","item","Modal","confirm","ExclamationCircleOutlined","Cookies","set","history","push","format","reqEditProject","newProjectList","map","reqCreateProject"],"mappings":"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","file":"static/js/13.13673fcd.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default React.forwardRef(PlusCircleOutlined);","import React from \"react\";\nimport { Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst { Column } = Table;\n\nexport default function ProjectList(props) {\n  const data = props.data;\n  return (\n    <Table dataSource={data} pagination={false} showHeader={false} rowKey=\"_id\">\n      <Column\n        title=\"信息\"\n        dataIndex=\"projectName\"\n        key=\"projectName\"\n        render={(value, record) => (\n          <>\n            <h4>\n              <a onClick={() => props.onConfirm(record)}>{value}</a>\n            </h4>\n            <div style={{ color: \"rgba(0,0,0,.45)\", marginTop: \"4px\" }}>\n              {record.description}\n            </div>\n          </>\n        )}\n      />\n      <Column\n        title=\"时间\"\n        key=\"date\"\n        render={(value, record) => `${record.startDate}~${record.endDate}`}\n      />\n      <Column\n        title=\"操作\"\n        dataIndex=\"_id\"\n        key=\"action\"\n        render={(_id, record) => (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              props.onItemEditClick(record);\n            }}\n          >\n            <EditOutlined />\n          </a>\n        )}\n      />\n    </Table>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Form, Input, DatePicker, Modal } from 'antd';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nexport default function ProjectModal({ visible, onOk, onCancel, project }) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (project) {\n      const rangeDate = [moment(project.startDate), moment(project.endDate)];\n      form.setFieldsValue({ ...project, rangeDate });\n    } else {\n      form.resetFields();\n    }\n  });\n\n  return (\n    <Modal\n      forceRender\n      title={project ? '编辑项目' : '创建项目'}\n      width={640}\n      visible={visible}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onOk(values);\n            // form.resetFields();\n          })\n          .catch((info) => {\n            console.log('验证失败：', info);\n          });\n      }}\n      onCancel={onCancel}\n      okText=\"确定\"\n      cancelText=\"取消\"\n    >\n      <Form\n        form={form}\n        labelCol={{\n          span: 5,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n      >\n        <Form.Item\n          name=\"projectName\"\n          label=\"项目名称\"\n          rules={[\n            {\n              required: true,\n              message: '请输入项目名称！',\n            },\n          ]}\n        >\n          <Input placeholder=\"请输入\" />\n        </Form.Item>\n        <Form.Item\n          name=\"rangeDate\"\n          label=\"项目时间\"\n          rules={[\n            {\n              required: true,\n              message: '请选择项目时间！',\n            },\n          ]}\n        >\n          <RangePicker\n            style={{\n              width: '100%',\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label=\"项目简介\"\n          rules={[\n            {\n              required: true,\n              message: '请输入至少五个字符的项目简介！',\n              min: 5,\n            },\n          ]}\n        >\n          <Input.TextArea rows={4} placeholder=\"请输入至少五个字符\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { Component, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { Card, Modal } from \"antd\";\nimport {\n  PlusCircleOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport ProjectList from \"../../components/project/list\";\nimport ProjectModal from \"../../components/project/modal\";\nimport {\n  // createProject,\n  // getProjectList,\n  switchProject,\n} from \"../../redux/project/actions\";\nimport {\n  reqProjectList,\n  reqCreateProject,\n  reqEditProject,\n} from \"../../api/index\";\n\n//component模式\n// class MyProjects extends Component {\n//   state = {\n//     visible: false,\n//     projectList: [],\n//     current: null,\n//   };\n\n//   showModal = (current) => {\n//     this.setState({\n//       visible: true,\n//       current,\n//     });\n//   };\n\n//   handleConfirm = (item) => {\n//     let that = this;\n//     Modal.confirm({\n//       title: '选择并切换至该项目？',\n//       icon: <ExclamationCircleOutlined />,\n//       cancelText: '取消',\n//       okText: '确定',\n//       onOk() {\n//         that.props.switchProject(item);\n//         //todo:重置store.state中的sprints\n//         Cookies.set('projectId', item._id);\n//         that.props.history.push('/project/profile');\n//       },\n//     });\n//   };\n\n//   handleOk = (values) => {\n//     const current = this.state.current;\n//     const _id = current ? current._id : '';\n//     const rangeDate = values['rangeDate'];\n//     values.startDate = rangeDate[0].format('YYYY-MM-DD');\n//     values.endDate = rangeDate[1].format('YYYY-MM-DD');\n\n//     if (_id) {\n//       //编辑\n//       reqEditProject({ ...values, _id }).then((res) => {\n//         const result = res.data;\n//         if (result.code === 0) {\n//           const projectList = this.state.projectList.map((project) =>\n//             project._id === _id ? result.data : project\n//           );\n//           this.setState({\n//             projectList,\n//             visible: false,\n//           });\n//           //如果修改的是当前选择的项目\n//           if (_id === this.props.project._id)\n//             this.props.switchProject(result.data);\n//         }\n//       });\n//     } else {\n//       //创建\n//       reqCreateProject(values).then((res) => {\n//         const result = res.data;\n//         if (result.code === 0) {\n//           this.setState({\n//             projectList: [result.data, ...this.state.projectList],\n//             visible: false,\n//           });\n//         }\n//       });\n//     }\n//   };\n\n//   handleCancel = () => {\n//     this.setState({\n//       visible: false,\n//     });\n//   };\n\n//   componentDidMount() {\n//     reqProjectList().then((res) => {\n//       const result = res.data;\n//       // console.log(result);\n//       if (result.code === 0) {\n//         this.setState({\n//           projectList: result.data,\n//         });\n//       }\n//     });\n//     // this.props.getProjectList();\n//   }\n\n//   render() {\n//     // const data = this.props.projectList;\n//     const { projectList, current } = this.state;\n//     return (\n//       <div>\n//         <Card\n//           title=\"我的项目\"\n//           extra={\n//             <a\n//               onClick={(e) => {\n//                 e.preventDefault();\n//                 this.showModal();\n//               }}\n//             >\n//               <PlusCircleOutlined style={{ fontSize: '24px' }} />\n//             </a>\n//           }\n//         >\n//           <ProjectList\n//             data={projectList}\n//             onConfirm={this.handleConfirm}\n//             onItemEditClick={this.showModal}\n//           ></ProjectList>\n//         </Card>\n\n//         <ProjectModal\n//           visible={this.state.visible}\n//           onOk={this.handleOk}\n//           onCancel={this.handleCancel}\n//           project={current}\n//         ></ProjectModal>\n//       </div>\n//     );\n//   }\n// }\n\n//hooks改写\nconst MyProjects = (props) => {\n  const [visible, setVisible] = useState(false);\n  const [projectList, setProjectList] = useState([]);\n  const [current, setCurrent] = useState(null);\n\n  useEffect(() => {\n    reqProjectList().then((res) => {\n      const result = res.data;\n      if (result.code === 0) {\n        setProjectList(result.data);\n      }\n    });\n  }, []);\n\n  const showModal = (current) => {\n    setVisible(true);\n    setCurrent(current);\n  };\n\n  const handleConfirm = (item) => {\n    Modal.confirm({\n      title: \"选择并切换至该项目？\",\n      icon: <ExclamationCircleOutlined />,\n      cancelText: \"取消\",\n      okText: \"确定\",\n      onOk() {\n        props.switchProject(item);\n        //todo:重置store.state中的sprints\n        Cookies.set(\"projectId\", item._id);\n        props.history.push(\"/project/profile\");\n      },\n    });\n  };\n\n  const handleOk = (values) => {\n    const _id = current ? current._id : \"\";\n    const rangeDate = values[\"rangeDate\"];\n    values.startDate = rangeDate[0].format(\"YYYY-MM-DD\");\n    values.endDate = rangeDate[1].format(\"YYYY-MM-DD\");\n\n    if (_id) {\n      //编辑\n      reqEditProject({ ...values, _id }).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          const newProjectList = projectList.map((project) =>\n            project._id === _id ? result.data : project\n          );\n          setVisible(false);\n          setProjectList(newProjectList);\n          //如果修改的是当前选择的项目\n          if (_id === props.project._id) props.switchProject(result.data);\n        }\n      });\n    } else {\n      //创建\n      reqCreateProject(values).then((res) => {\n        const result = res.data;\n        if (result.code === 0) {\n          setVisible(false);\n          setProjectList([result.data, ...projectList]);\n        }\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div>\n      <Card\n        title=\"我的项目\"\n        extra={\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              showModal();\n            }}\n          >\n            <PlusCircleOutlined style={{ fontSize: \"24px\" }} />\n          </a>\n        }\n      >\n        <ProjectList\n          data={projectList}\n          onConfirm={handleConfirm}\n          onItemEditClick={showModal}\n        ></ProjectList>\n      </Card>\n\n      <ProjectModal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        project={current}\n      ></ProjectModal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nconst mapDispatchToProps = { switchProject };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProjects);\n"],"sourceRoot":""}